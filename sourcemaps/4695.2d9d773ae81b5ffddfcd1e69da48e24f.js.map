{"version":3,"file":"js/4695.xxxxxxxxxxxxxxxxxxxx.js","mappings":"sRACA,QAI8B,uCAJ9B,EAOuB,+BAPvB,EAWgB,gBAXhB,EAYc,cAZd,EAaa,aAbb,EAcY,Y,sECVL,MAAMA,EAAuBC,IAChC,IAAI,QAAEC,EAAO,UAAEC,EAAY,EAAC,WAAEC,EAAa,IAAG,SAAEC,EAAW,QAAO,SAAEC,EAAW,MAAO,aAAcC,EAAY,iBAAgB,GAAEC,EAAE,OAAEC,EAAM,SAAEC,EAAQ,QAAEC,EAAU,UAAS,gBAAEC,EAAkB,SAAS,UAAEC,GAAcZ,EAAIa,GAAQ,IAAAC,QAAOd,EAAI,CAAC,UAAW,YAAa,aAAc,WAAY,WAAY,aAAc,KAAM,SAAU,WAAY,UAAW,kBAAmB,cACtX,MAAMe,EAAa,cACnB,OAAQ,gBAAoBC,EAAA,EAAS,CAAEC,QAAS,yBAA0BF,WAAYA,EAAYb,UAAWA,EAAWC,WAAYA,EAAYC,SAAUA,EAAUC,SAAUA,EAAU,YAAa,SAAUa,KAAM,OAAQC,QAAS,gBAAoB,MAAO,KAAMV,GAAWE,gBAAiBA,GAC/R,gBAAoBS,EAAA,GAAQC,OAAOC,OAAO,CAAEC,KAAM,SAAUb,QAASA,EAAST,QAASA,EAAS,aAAcK,EAAWM,UAAWA,EAAWL,GAAIA,EAAI,kBAAmB,GAAGA,KAAMC,KAAYK,EAAO,CAAEW,IAAKT,IACzM,gBAAoB,KAAU,OAAQ,EAElDhB,EAAoB0B,YAAc,sB,eCN3B,MAAMC,EAAuB1B,IAChC,IAAI,QAAEC,EAAO,GAAEM,EAAE,OAAEC,EAAM,UAAEmB,EAAS,WAAEC,GAAa,GAAU5B,EAAIa,GAAQ,IAAAC,QAAOd,EAAI,CAAC,UAAW,KAAM,SAAU,YAAa,eAC7H,OAAQ,gBAAoBoB,EAAA,GAAQC,OAAOC,OAAO,CAAEC,KAAM,SAAUb,QAAS,UAAWT,QAASA,EAASM,GAAIA,EAAI,kBAAmB,GAAGA,KAAMC,IAAU,gBAAiBmB,EAAW,gBAAiBC,GAAcf,GAC/M,gBAAoB,MAAO,CAAED,WAAW,IAAAiB,KFAnB,wCECjB,gBAAoB,UAAgB,CAAE,cAAe,UAAY,EAE7EH,EAAoBD,YAAc,sBCRlC,MAAMK,UAA8B,YAChCC,YAAYlB,GACRmB,MAAMnB,EACV,CACAoB,SACI,MAAMjC,EAAKkC,KAAKrB,OAAO,UAAED,EAAS,SAAEH,EAAQ,SAAE0B,EAAQ,WAAEC,EAAU,OAAEC,GAAWrC,EAAIa,GAAQ,IAAAC,QAAOd,EAAI,CAAC,YAAa,WAAY,WAAY,aAAc,WAC1J,OAAQ,gBAAoB,MAAOqB,OAAOC,OAAO,CAAEgB,gCAAgC,EAAM1B,WAAW,IAAAiB,KHJxE,6CGImHjB,GAAY2B,QAAUC,GAAML,EAASK,EAAGA,EAAEC,OAAOC,WAAYC,iBAAkBP,GAAcvB,GAAQwB,EAAS,gBAAoB,MAAO,CAAEO,IAAK,OAASnC,GAAYA,EACxT,EAEJqB,EAAsBL,YAAc,wBACpCK,EAAsBe,aAAe,CACjCV,SAAU,KAAe,EACzBvB,UAAW,GACXwB,YAAY,EACZC,QAAQ,G,eCPL,MAAMS,EAAoB,CAACC,EAAQC,KACtC,IACIC,UAAUC,UAAUC,UAAUH,EAAKI,WACvC,CACA,MAAOC,GAEHC,QAAQC,KAAK,oGAAqG,+GAAgH,qGAAsG,mGAAoG,wEAE5aD,QAAQD,MAAMA,EAClB,GAEG,IAAIG,GACX,SAAWA,GACPA,EAA6B,OAAI,SACjCA,EAAgC,UAAI,YACpCA,EAAoC,cAAI,gBAC3C,CAJD,CAIGA,IAAyBA,EAAuB,CAAC,IACpD,MAAMC,UAAsB,YACxB1B,YAAYlB,GACRmB,MAAMnB,GACNqB,KAAKwB,MAAQ,KAEbxB,KAAKyB,mBAAqB,CAACC,EAAWC,KAClC,GAAID,EAAUnD,WAAayB,KAAKrB,MAAMJ,SAAU,CAC5C,MAAMqD,EAAU5B,KAAKrB,MAAMJ,SAC3ByB,KAAK6B,SAAS,CAAEf,KAAMc,EAASE,iBAAkBF,GACrD,GAEJ5B,KAAK+B,qBAAuB,KACpB/B,KAAKwB,OACLQ,OAAOC,aAAajC,KAAKwB,MAC7B,EAGJxB,KAAKkC,cAAiBrB,IAClBb,KAAK6B,UAAUF,IAAc,CACzBQ,UAAWR,EAAUQ,YACtB,EAEPnC,KAAKoC,WAAa,CAACC,EAAOvB,KACtBd,KAAK6B,SAAS,CAAEf,SAChBd,KAAKrB,MAAMsB,SAASoC,EAAOvB,EAAK,EAEpCd,KAAKsC,uBAAyB,CAACD,EAAOvB,KAClCd,KAAK6B,SAAS,CAAEC,iBAAkBhB,IAClCd,KAAKrB,MAAMsB,SAASoC,EAAOvB,EAAK,EAEpCd,KAAKD,OAAS,KACV,MAAMjC,EAAKkC,KAAKrB,OAAO,WAEvBe,EAAU,SAAEO,EAAQ,WAEpBC,EAAU,OAAEC,EAAM,QAAEoC,EAAO,UAAEvE,EAAS,SAAEE,EAAQ,WAAED,EAAU,OAAEuE,EAAM,SAAEC,EAAQ,SAAEC,EAAQ,cAAEC,EAAa,gBAAEC,EAAe,QAAEpE,EAAO,SAAEL,EAAQ,UAAEO,EAAS,kBAAEmE,EAAiB,OAAEC,EAAM,SAAEC,GAAajF,EAAIkF,GAAW,IAAApE,QAAOd,EAAI,CAAC,aAAc,WAAY,aAAc,SAAU,UAAW,YAAa,WAAY,aAAc,SAAU,WAAY,WAAY,gBAAiB,kBAAmB,UAAW,WAAY,YAAa,oBAAqB,SAAU,aAClcmF,EAAe,cAGrB,OAAQ,gBAAoB,MAAO9D,OAAOC,OAAO,CAAEV,WAAW,IAAAiB,KJhEvD,yBIgE6F,mBAAZnB,GAAgC,EAAyB+D,GAAW,EAAwBvC,KAAKkD,MAAMf,UAAY,EAA2BzD,IAAcsE,GAAU,IAAAG,cAAa5B,EAAchC,YAAauD,EAAQC,IAC9R,mBAAZvE,GAAiC,gBAAoB4E,EAAA,EAAY,CAAEC,OAAQ,KAAOhF,GAAQ,gBAAoB,WAAgB,MACzH8B,GAAW,gBAAoB,OAAQ,CAAEzB,WAAW,IAAAiB,KAAI,GAA2BtB,GAAI,GAAG4E,IAAe5E,KAAQ2B,KAAKkD,MAAMpC,MAC7HX,GAAW,gBAAoB,OAAQ,CAAEzB,WAAW,IAAAiB,KAAI,EAA0B,GAAwBtB,GAAI,GAAG4E,IAAe5E,KAAQ2B,KAAKkD,MAAMpC,MACnJ,gBAAoB,OAAQ,CAAEpC,WAAW,IAAAiB,KJnEnC,oCIoEF,gBAAoB,OAAQ,CAAEjB,WAAW,IAAAiB,KAAI,IACzC,gBAAoB9B,EAAqB,CAAEW,QAAS,QAASR,UAAWA,EAAWC,WAAYA,EAAYC,SAAUA,EAAUC,SAAUA,EAAUE,GAAI,eAAeA,IAAMC,OAAQ,cAAcD,IAAM,aAAcoE,EAAU1E,QAAUsE,IAClOG,EAAOH,EAAOrC,KAAKkD,MAAMpC,MACzBd,KAAK6B,SAAS,CAAEyB,QAAQ,GAAO,EAChC7E,gBAAiB,IAAMuB,KAAK6B,SAAS,CAAEyB,QAAQ,KAAYtD,KAAKkD,MAAMI,OAASZ,EAAWD,IACrGI,GAAqBA,MACjB,mBAAZrE,GAAiC,gBAAoB4E,EAAA,EAAY,CAAEC,OAAQ,KAAOhF,GAAQ,gBAAoB,WAAgB,KAC1H,gBAAoB,MAAO,CAAEK,WAAW,IAAAiB,KJxEpC,kCIyEY,cAAZnB,GAA4B,gBAAoBgB,EAAqB,CAAEE,WAAYM,KAAKkD,MAAMf,SAAUpE,QAAU8C,IAC1Gb,KAAKkC,cAAcrB,GACfb,KAAKkD,MAAMf,SACXnC,KAAK6B,SAAS,CAAEf,KAAMd,KAAKkD,MAAMpB,mBAGjC9B,KAAK6B,SAAS,CAAEC,iBAAkB9B,KAAKkD,MAAMpC,MACjD,EACDzC,GAAI,UAAoBA,IAAMC,OAAQ,GAAG2E,IAAe5E,IAAMoB,UAAW,WAAqBpB,IAAM,aAAcuE,IACzH,gBAAoBW,EAAA,GAAWpE,OAAOC,OAAO,CAAEoE,gBAAiBtD,GAAcF,KAAKkD,MAAMf,SAAW,eAAYsB,EAAWxD,SAAUD,KAAKoC,WAAYsB,MAAO1D,KAAKkD,MAAMf,SAAWnC,KAAKkD,MAAMpB,iBAAmB9B,KAAKkD,MAAMpC,KAAMzC,GAAI,cAAcA,IAAM,aAAcsE,GAAkBxC,GAAU,CAAEO,IAAK,SAC3S,gBAAoB7C,EAAqB,CAAEG,UAAWA,EAAWC,WAAYA,EAAYC,SAAUA,EAAUC,SAAUA,EAAUE,GAAI,eAAeA,IAAMC,OAAQ,cAAcD,IAAM,aAAcoE,EAAU1E,QAAUsE,IAChNG,EAAOH,EAAOrC,KAAKkD,MAAMf,SAAWnC,KAAKkD,MAAMpB,iBAAmB9B,KAAKkD,MAAMpC,MAC7Ed,KAAK6B,SAAS,CAAEyB,QAAQ,GAAO,EAChC7E,gBAAiB,IAAMuB,KAAK6B,SAAS,CAAEyB,QAAQ,KAAYtD,KAAKkD,MAAMI,OAASZ,EAAWD,IACrGzC,KAAKkD,MAAMf,UAAa,gBAAoBvC,EAAuB,CAAEM,WAAYA,EAAYC,OAAQA,EAAQ9B,GAAI,WAAWA,IAAM4B,SAAUD,KAAKsC,wBAA0BtC,KAAKkD,MAAMpC,SAAY,EAE9M,MAAMA,EAAO6C,MAAMC,QAAQ5D,KAAKrB,MAAMJ,UAAYyB,KAAKrB,MAAMJ,SAASsF,KAAK,IAAM7D,KAAKrB,MAAMJ,SAC5FyB,KAAKkD,MAAQ,CACTpC,OACAqB,SAAUnC,KAAKrB,MAAMe,WACrB4D,QAAQ,EACRxB,iBAAkBhB,EAE1B,EAEJS,EAAchC,YAAc,gBAC5BgC,EAAcZ,aAAe,CACzB8B,SAAU,oBACVC,SAAU,oCACVxC,YAAY,EACZR,YAAY,EACZS,QAAQ,EACR3B,QAAS,SACTL,SAAUW,EAAA,EAAgBgF,IAC1B5F,SAAU,QACVF,UAAW,KACXC,WAAY,IACZuE,OAAQ5B,EACRX,SAAU,KAAe,EACzB0C,cAAe,iBACfC,gBAAiB,eACjBC,kBAAmB,KACnBE,UAAU,GCtHP,MAAMgB,EAAuBjG,IAChC,IAAI,SAAES,EAAW,KAAI,UAAEG,EAAY,IAAOZ,EAAIa,GAAQ,IAAAC,QAAOd,EAAI,CAAC,WAAY,cAC9E,OAAQ,gBAAoB,OAAQqB,OAAOC,OAAO,CAAEV,WAAW,IAAAiB,KAAI,EAAiCjB,IAAcC,GAAQJ,EAAU,EAExIwF,EAAoBxE,YAAc,qB,iICD3B,MAAMyE,EAAc,CACvBC,QAAS,KACT9C,MAAO,KACP+C,QAAS,MAEAC,EAAmBrG,IAC5B,IAAI,OAAEsG,EAAM,WAAEC,EAAU,UAAE3F,GAAcZ,EAAIa,GAAQ,IAAAC,QAAOd,EAAI,CAAC,SAAU,aAAc,cACxF,MAAMwG,EAAaF,GAAUJ,EAAYI,GACzC,OAAQ,gBAAoB,OAAQjF,OAAOC,OAAO,CAAEV,WAAW,IAAAiB,KAAI,UAAO4E,gBAAiBH,GAAU,UAAOI,UAAUJ,OAAQ1F,IAAcC,GAAQ0F,GAAc,gBAAoBC,EAAY,MAAO,C,+ECNlMG,EAcAC,E,mGAbX,SAAWD,GACPA,EAAqB,KAAI,OACzBA,EAAqB,KAAI,OACzBA,EAA8B,cAAI,iBAClCA,EAAsB,MAAI,QAC1BA,EAAsB,MAAI,QAC1BA,EAAuB,OAAI,SAC3BA,EAAyB,SAAI,WAC7BA,EAAuB,OAAI,SAC3BA,EAAoB,IAAI,MACxBA,EAAqB,KAAI,OACzBA,EAAoB,IAAI,KAC3B,CAZD,CAYGA,IAAmBA,EAAiB,CAAC,IAExC,SAAWC,GACPA,EAAkC,QAAI,UACtCA,EAAgC,MAAI,OACvC,CAHD,CAGGA,IAA6BA,EAA2B,CAAC,IAErD,MAAMC,UAAsB,YAC/B9E,YAAYlB,GACRmB,MAAMnB,GACNqB,KAAK4E,SAAW,cAChB5E,KAAK6E,SAAW,OAChB7E,KAAK8E,aAAgBzC,IACbrC,KAAKrB,MAAMsB,UACXD,KAAKrB,MAAMsB,SAASoC,EAAOA,EAAM0C,cAAcrB,MACnD,EAEJ1D,KAAKgF,aAAe,KAChB,MAAMJ,EAAW5E,KAAKrB,MAAMsG,UAAYjF,KAAK4E,SACzCA,GAAYA,EAASM,UACrB,QAASN,EAASM,QAASC,OAAOnF,KAAKrB,MAAM+E,OACjD,EAEJ1D,KAAKoF,YAAc,KACf,MAAMR,EAAW5E,KAAKrB,MAAMsG,UAAYjF,KAAK4E,SAE7CA,EAASM,QAAQxB,MAAQyB,OAAOnF,KAAKrB,MAAM+E,OAE3CkB,EAASM,QAAQG,WAAaT,EAASM,QAAQI,WAAW,EAE9DtF,KAAKuF,QAAWlD,IACZ,MAAM,gBAAEmD,EAAe,iBAAEC,EAAgB,QAAEF,GAAYvF,KAAKrB,OACxD6G,GAAmBC,IACnBzF,KAAKoF,cAETG,GAAWA,EAAQlD,EAAM,EAE7BrC,KAAK0F,OAAUrD,IACX,MAAM,gBAAEmD,EAAe,iBAAEC,EAAgB,OAAEC,GAAW1F,KAAKrB,OACvD6G,GAAmBC,IACnBzF,KAAKgF,eAETU,GAAUA,EAAOrD,EAAM,EAE3BrC,KAAK2F,mBAAsBjC,GAA2B,iBAAVA,EAAqBA,EAAMkC,QAAQ,MAAO,KAAOlC,EACxF/E,EAAMN,IAAOM,EAAM,eAAkBA,EAAM,oBAE5CyC,QAAQD,MAAM,cAAe,kEAEjCnB,KAAKkD,MAAQ,CACT2C,aAAa,IAAAC,kBAAiBnB,EAAcpF,aAEpD,CACAwG,oBACI,GAAI/F,KAAKrB,MAAM6G,iBAAmBxF,KAAKrB,MAAM8G,iBAAkB,CAC3D,MAAMb,EAAW5E,KAAKrB,MAAMsG,UAAYjF,KAAK4E,SAC7C5E,KAAK6E,UAAW,OAAkBD,EAASM,QAASlF,KAAKgF,cAAc,GACvEhF,KAAKgF,cACT,CACJ,CACAjD,wBACQ/B,KAAKrB,MAAM6G,iBAAmBxF,KAAKrB,MAAM8G,mBACzCzF,KAAK6E,UAEb,CACA9E,SACI,MAAMjC,EAAKkC,KAAKrB,OAAO,SAAEsG,EAAQ,UAAEvG,EAAS,KAAEW,EAAI,MAAEqE,EAAK,YAAEsC,EAAW,UAAEC,EAAS,SAEjFhG,EAAQ,QAAEsF,EAAO,OAAEG,EAAM,gBAAEF,EAAe,iBAAEC,EAAgB,WAAE/F,EAAU,cAAEwG,EAAa,SAAEC,EAAQ,gBAAE3C,EAAe,WAAE4C,EAAU,WAAEC,EAAU,WAAEhC,EAAU,OAAEvB,EAAM,SAAEC,GAAajF,EAAIa,GAAQ,IAAAC,QAAOd,EAAI,CAAC,WAAY,YAAa,OAAQ,QAAS,cAAe,YAAa,WAAY,UAAW,SAAU,kBAAmB,mBAAoB,aAAc,gBAAiB,WAAY,kBAAmB,aAAc,aAAc,aAAc,SAAU,aAC/bwI,EAAgB,CAAC,UAAW,QAAS,WAAWC,SAASN,GACzDO,EAAoBN,EACpB,CAAE,gBAAiBA,aAAqD,EAASA,EAAcxG,WAAY,gBAAiBwG,aAAqD,EAASA,EAAcO,aAAcC,KAAM,YAC5N,CAAC,EACP,OAAQ,gBAAoB,OAAQ,CAAEhI,WAAW,IAAAiB,KAAI,UAAOgH,YAAanD,GAAmB,UAAOgB,UAAUoC,SAA8B,UAApBpD,GAA+B,UAAOgB,UAAUqC,MAAOR,GAAc,UAAO7B,UAAUsC,UAAWpH,IAAewG,aAAqD,EAASA,EAAcxG,cAAgB,UAAO8E,UAAUrC,SAAUkC,GAAc,UAAOG,UAAUuC,KAAMT,GAAiB,UAAO9B,UAAUyB,GAAYvH,IAC7a,gBAAoB,QAASS,OAAOC,OAAO,CAAC,EAAGT,EAAO,CAAE4G,QAASvF,KAAKuF,QAASG,OAAQ1F,KAAK0F,OAAQzF,SAAUD,KAAK8E,aAAczF,KAAMA,EAAMqE,MAAO1D,KAAK2F,mBAAmBjC,GAAQ,eAAgB/E,EAAM,gBAAkBA,EAAM,gBAAkBsH,IAAc,KAAiB9E,OAASqF,EAAmB,CAAEQ,SAAUZ,EAAYU,SAAUT,EAAYF,WAAY3C,GAAmB2C,EAAU7G,IAAK2F,GAAYjF,KAAK4E,SAAUoB,YAAaA,IAAe,IAAA7C,cAAaI,EAAUhE,iBAAwBkE,IAAXX,EAAuBA,EAAS9C,KAAKkD,MAAM2C,YAAa9C,MAC7hBsB,GAAciC,IAAmB,gBAAoB,OAAQ,CAAE5H,WAAW,IAAAiB,KAAI,UAAOsH,uBAClF5C,GAAc,gBAAoB,IAAiB,CAAEA,WAAYA,IACjEiC,GAAiB,gBAAoB,IAAiB,CAAElC,OAAQ6B,KAC5E,EAEJtB,EAAcpF,YAAc,gBAC5BoF,EAAchE,aAAe,CACzB,aAAc,KACdyF,YAAY,EACZH,UAAW,UACXI,YAAY,EACZ3G,YAAY,EACZL,KAAMoF,EAAe3D,KACrB0E,iBAAiB,EACjBC,kBAAkB,EAClBxF,SAAU,KAAe,EACzB8C,UAAU,GAEP,MAAMQ,EAAY,cAAiB,CAAC5E,EAAOW,IAAS,gBAAoBqF,EAAexF,OAAOC,OAAO,CAAC,EAAGT,EAAO,CAAEsG,SAAU3F,OACnIiE,EAAUhE,YAAc,W,kFClHjB,MAAM2H,EAAiB,CAC5BC,KAAM,WACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,kWACTC,QAAS,EACTC,QAAS,GAGEC,GAAW,OAAWP,GAEnC,G","sources":["webpack:///./node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyButton.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyToggle.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyExpanded.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyAction.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/FormControl/FormControlIcon.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/TextInput/TextInput.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/copy-icon.js"],"sourcesContent":["import './clipboard-copy.css';\nexport default {\n  \"button\": \"pf-v5-c-button\",\n  \"clipboardCopy\": \"pf-v5-c-clipboard-copy\",\n  \"clipboardCopyActions\": \"pf-v5-c-clipboard-copy__actions\",\n  \"clipboardCopyActionsItem\": \"pf-v5-c-clipboard-copy__actions-item\",\n  \"clipboardCopyExpandableContent\": \"pf-v5-c-clipboard-copy__expandable-content\",\n  \"clipboardCopyGroup\": \"pf-v5-c-clipboard-copy__group\",\n  \"clipboardCopyText\": \"pf-v5-c-clipboard-copy__text\",\n  \"clipboardCopyToggleIcon\": \"pf-v5-c-clipboard-copy__toggle-icon\",\n  \"dirRtl\": \"pf-v5-m-dir-rtl\",\n  \"modifiers\": {\n    \"expanded\": \"pf-m-expanded\",\n    \"inline\": \"pf-m-inline\",\n    \"block\": \"pf-m-block\",\n    \"code\": \"pf-m-code\"\n  },\n  \"themeDark\": \"pf-v5-theme-dark\"\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport CopyIcon from '@patternfly/react-icons/dist/esm/icons/copy-icon';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nexport const ClipboardCopyButton = (_a) => {\n    var { onClick, exitDelay = 0, entryDelay = 300, maxWidth = '100px', position = 'top', 'aria-label': ariaLabel = 'Copyable input', id, textId, children, variant = 'control', onTooltipHidden = () => { }, className } = _a, props = __rest(_a, [\"onClick\", \"exitDelay\", \"entryDelay\", \"maxWidth\", \"position\", 'aria-label', \"id\", \"textId\", \"children\", \"variant\", \"onTooltipHidden\", \"className\"]);\n    const triggerRef = React.createRef();\n    return (React.createElement(Tooltip, { trigger: \"mouseenter focus click\", triggerRef: triggerRef, exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, \"aria-live\": \"polite\", aria: \"none\", content: React.createElement(\"div\", null, children), onTooltipHidden: onTooltipHidden },\n        React.createElement(Button, Object.assign({ type: \"button\", variant: variant, onClick: onClick, \"aria-label\": ariaLabel, className: className, id: id, \"aria-labelledby\": `${id} ${textId}` }, props, { ref: triggerRef }),\n            React.createElement(CopyIcon, null))));\n};\nClipboardCopyButton.displayName = 'ClipboardCopyButton';\n//# sourceMappingURL=ClipboardCopyButton.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { Button } from '../Button';\nexport const ClipboardCopyToggle = (_a) => {\n    var { onClick, id, textId, contentId, isExpanded = false } = _a, props = __rest(_a, [\"onClick\", \"id\", \"textId\", \"contentId\", \"isExpanded\"]);\n    return (React.createElement(Button, Object.assign({ type: \"button\", variant: \"control\", onClick: onClick, id: id, \"aria-labelledby\": `${id} ${textId}`, \"aria-controls\": contentId, \"aria-expanded\": isExpanded }, props),\n        React.createElement(\"div\", { className: css(styles.clipboardCopyToggleIcon) },\n            React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" }))));\n};\nClipboardCopyToggle.displayName = 'ClipboardCopyToggle';\n//# sourceMappingURL=ClipboardCopyToggle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs';\nimport { css } from '@patternfly/react-styles';\nclass ClipboardCopyExpanded extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const _a = this.props, { className, children, onChange, isReadOnly, isCode } = _a, props = __rest(_a, [\"className\", \"children\", \"onChange\", \"isReadOnly\", \"isCode\"]);\n        return (React.createElement(\"div\", Object.assign({ suppressContentEditableWarning: true, className: css(styles.clipboardCopyExpandableContent, className), onInput: (e) => onChange(e, e.target.innerText), contentEditable: !isReadOnly }, props), isCode ? React.createElement(\"pre\", { dir: \"ltr\" }, children) : children));\n    }\n}\nClipboardCopyExpanded.displayName = 'ClipboardCopyExpanded';\nClipboardCopyExpanded.defaultProps = {\n    onChange: () => undefined,\n    className: '',\n    isReadOnly: false,\n    isCode: false\n};\nexport { ClipboardCopyExpanded };\n//# sourceMappingURL=ClipboardCopyExpanded.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs';\nimport { css } from '@patternfly/react-styles';\nimport { TooltipPosition } from '../Tooltip';\nimport { TextInput } from '../TextInput';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { ClipboardCopyButton } from './ClipboardCopyButton';\nimport { ClipboardCopyToggle } from './ClipboardCopyToggle';\nimport { ClipboardCopyExpanded } from './ClipboardCopyExpanded';\nimport { getOUIAProps } from '../../helpers';\nexport const clipboardCopyFunc = (_event, text) => {\n    try {\n        navigator.clipboard.writeText(text.toString());\n    }\n    catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(\"Clipboard API not found, this copy function will not work. This is likely because you're using an\", \"unsupported browser or you're not using HTTPS. \\n\\nIf you're a developer building an application which needs\", \"to support copying to the clipboard without the clipboard API, you'll have to create your own copy\", 'function and pass it to the ClipboardCopy component as the onCopy prop. For more information see', 'https://developer.mozilla.org/en-US/docs/Web/API/Navigator/clipboard');\n        // eslint-disable-next-line no-console\n        console.error(error);\n    }\n};\nexport var ClipboardCopyVariant;\n(function (ClipboardCopyVariant) {\n    ClipboardCopyVariant[\"inline\"] = \"inline\";\n    ClipboardCopyVariant[\"expansion\"] = \"expansion\";\n    ClipboardCopyVariant[\"inlineCompact\"] = \"inline-compact\";\n})(ClipboardCopyVariant || (ClipboardCopyVariant = {}));\nclass ClipboardCopy extends React.Component {\n    constructor(props) {\n        super(props);\n        this.timer = null;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.componentDidUpdate = (prevProps, prevState) => {\n            if (prevProps.children !== this.props.children) {\n                const newText = this.props.children;\n                this.setState({ text: newText, textWhenExpanded: newText });\n            }\n        };\n        this.componentWillUnmount = () => {\n            if (this.timer) {\n                window.clearTimeout(this.timer);\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.expandContent = (_event) => {\n            this.setState((prevState) => ({\n                expanded: !prevState.expanded\n            }));\n        };\n        this.updateText = (event, text) => {\n            this.setState({ text });\n            this.props.onChange(event, text);\n        };\n        this.updateTextWhenExpanded = (event, text) => {\n            this.setState({ textWhenExpanded: text });\n            this.props.onChange(event, text);\n        };\n        this.render = () => {\n            const _a = this.props, { \n            /* eslint-disable @typescript-eslint/no-unused-vars */\n            isExpanded, onChange, // Don't pass to <div>\n            /* eslint-enable @typescript-eslint/no-unused-vars */\n            isReadOnly, isCode, isBlock, exitDelay, maxWidth, entryDelay, onCopy, hoverTip, clickTip, textAriaLabel, toggleAriaLabel, variant, position, className, additionalActions, ouiaId, ouiaSafe } = _a, divProps = __rest(_a, [\"isExpanded\", \"onChange\", \"isReadOnly\", \"isCode\", \"isBlock\", \"exitDelay\", \"maxWidth\", \"entryDelay\", \"onCopy\", \"hoverTip\", \"clickTip\", \"textAriaLabel\", \"toggleAriaLabel\", \"variant\", \"position\", \"className\", \"additionalActions\", \"ouiaId\", \"ouiaSafe\"]);\n            const textIdPrefix = 'text-input-';\n            const toggleIdPrefix = 'toggle-';\n            const contentIdPrefix = 'content-';\n            return (React.createElement(\"div\", Object.assign({ className: css(styles.clipboardCopy, variant === 'inline-compact' && styles.modifiers.inline, isBlock && styles.modifiers.block, this.state.expanded && styles.modifiers.expanded, className) }, divProps, getOUIAProps(ClipboardCopy.displayName, ouiaId, ouiaSafe)),\n                variant === 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, (id) => (React.createElement(React.Fragment, null,\n                    !isCode && (React.createElement(\"span\", { className: css(styles.clipboardCopyText), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    isCode && (React.createElement(\"code\", { className: css(styles.clipboardCopyText, styles.modifiers.code), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    React.createElement(\"span\", { className: css(styles.clipboardCopyActions) },\n                        React.createElement(\"span\", { className: css(styles.clipboardCopyActionsItem) },\n                            React.createElement(ClipboardCopyButton, { variant: \"plain\", exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                    onCopy(event, this.state.text);\n                                    this.setState({ copied: true });\n                                }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)),\n                        additionalActions && additionalActions))))),\n                variant !== 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, (id) => (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { className: css(styles.clipboardCopyGroup) },\n                        variant === 'expansion' && (React.createElement(ClipboardCopyToggle, { isExpanded: this.state.expanded, onClick: (_event) => {\n                                this.expandContent(_event);\n                                if (this.state.expanded) {\n                                    this.setState({ text: this.state.textWhenExpanded });\n                                }\n                                else {\n                                    this.setState({ textWhenExpanded: this.state.text });\n                                }\n                            }, id: `${toggleIdPrefix}${id}`, textId: `${textIdPrefix}${id}`, contentId: `${contentIdPrefix}${id}`, \"aria-label\": toggleAriaLabel })),\n                        React.createElement(TextInput, Object.assign({ readOnlyVariant: isReadOnly || this.state.expanded ? 'default' : undefined, onChange: this.updateText, value: this.state.expanded ? this.state.textWhenExpanded : this.state.text, id: `text-input-${id}`, \"aria-label\": textAriaLabel }, (isCode && { dir: 'ltr' }))),\n                        React.createElement(ClipboardCopyButton, { exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                onCopy(event, this.state.expanded ? this.state.textWhenExpanded : this.state.text);\n                                this.setState({ copied: true });\n                            }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)),\n                    this.state.expanded && (React.createElement(ClipboardCopyExpanded, { isReadOnly: isReadOnly, isCode: isCode, id: `content-${id}`, onChange: this.updateTextWhenExpanded }, this.state.text))))))));\n        };\n        const text = Array.isArray(this.props.children) ? this.props.children.join('') : this.props.children;\n        this.state = {\n            text,\n            expanded: this.props.isExpanded,\n            copied: false,\n            textWhenExpanded: text\n        };\n    }\n}\nClipboardCopy.displayName = 'ClipboardCopy';\nClipboardCopy.defaultProps = {\n    hoverTip: 'Copy to clipboard',\n    clickTip: 'Successfully copied to clipboard!',\n    isReadOnly: false,\n    isExpanded: false,\n    isCode: false,\n    variant: 'inline',\n    position: TooltipPosition.top,\n    maxWidth: '150px',\n    exitDelay: 1500,\n    entryDelay: 300,\n    onCopy: clipboardCopyFunc,\n    onChange: () => undefined,\n    textAriaLabel: 'Copyable input',\n    toggleAriaLabel: 'Show content',\n    additionalActions: null,\n    ouiaSafe: true\n};\nexport { ClipboardCopy };\n//# sourceMappingURL=ClipboardCopy.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs';\nimport { css } from '@patternfly/react-styles';\nexport const ClipboardCopyAction = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"span\", Object.assign({ className: css(styles.clipboardCopyActionsItem, className) }, props), children));\n};\nClipboardCopyAction.displayName = 'ClipboardCopyAction';\n//# sourceMappingURL=ClipboardCopyAction.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control.mjs';\nimport { css } from '@patternfly/react-styles';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nexport const statusIcons = {\n    success: CheckCircleIcon,\n    error: ExclamationCircleIcon,\n    warning: ExclamationTriangleIcon\n};\nexport const FormControlIcon = (_a) => {\n    var { status, customIcon, className } = _a, props = __rest(_a, [\"status\", \"customIcon\", \"className\"]);\n    const StatusIcon = status && statusIcons[status];\n    return (React.createElement(\"span\", Object.assign({ className: css(styles.formControlIcon, status && styles.modifiers.status, className) }, props), customIcon || React.createElement(StatusIcon, null)));\n};\n//# sourceMappingURL=FormControlIcon.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control.mjs';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { trimLeft } from '../../helpers/util';\nimport { getDefaultOUIAId, getOUIAProps } from '../../helpers';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\nimport { FormControlIcon } from '../FormControl/FormControlIcon';\nexport var TextInputTypes;\n(function (TextInputTypes) {\n    TextInputTypes[\"text\"] = \"text\";\n    TextInputTypes[\"date\"] = \"date\";\n    TextInputTypes[\"datetimeLocal\"] = \"datetime-local\";\n    TextInputTypes[\"email\"] = \"email\";\n    TextInputTypes[\"month\"] = \"month\";\n    TextInputTypes[\"number\"] = \"number\";\n    TextInputTypes[\"password\"] = \"password\";\n    TextInputTypes[\"search\"] = \"search\";\n    TextInputTypes[\"tel\"] = \"tel\";\n    TextInputTypes[\"time\"] = \"time\";\n    TextInputTypes[\"url\"] = \"url\";\n})(TextInputTypes || (TextInputTypes = {}));\nexport var TextInputReadOnlyVariant;\n(function (TextInputReadOnlyVariant) {\n    TextInputReadOnlyVariant[\"default\"] = \"default\";\n    TextInputReadOnlyVariant[\"plain\"] = \"plain\";\n})(TextInputReadOnlyVariant || (TextInputReadOnlyVariant = {}));\n// eslint-disable-next-line patternfly-react/no-anonymous-functions\nexport class TextInputBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef();\n        this.observer = () => { };\n        this.handleChange = (event) => {\n            if (this.props.onChange) {\n                this.props.onChange(event, event.currentTarget.value);\n            }\n        };\n        this.handleResize = () => {\n            const inputRef = this.props.innerRef || this.inputRef;\n            if (inputRef && inputRef.current) {\n                trimLeft(inputRef.current, String(this.props.value));\n            }\n        };\n        this.restoreText = () => {\n            const inputRef = this.props.innerRef || this.inputRef;\n            // restore the value\n            inputRef.current.value = String(this.props.value);\n            // make sure we still see the rightmost value to preserve cursor click position\n            inputRef.current.scrollLeft = inputRef.current.scrollWidth;\n        };\n        this.onFocus = (event) => {\n            const { isLeftTruncated, isStartTruncated, onFocus } = this.props;\n            if (isLeftTruncated || isStartTruncated) {\n                this.restoreText();\n            }\n            onFocus && onFocus(event);\n        };\n        this.onBlur = (event) => {\n            const { isLeftTruncated, isStartTruncated, onBlur } = this.props;\n            if (isLeftTruncated || isStartTruncated) {\n                this.handleResize();\n            }\n            onBlur && onBlur(event);\n        };\n        this.sanitizeInputValue = (value) => typeof value === 'string' ? value.replace(/\\n/g, ' ') : value;\n        if (!props.id && !props['aria-label'] && !props['aria-labelledby']) {\n            // eslint-disable-next-line no-console\n            console.error('Text input:', 'Text input requires either an id or aria-label to be specified');\n        }\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(TextInputBase.displayName)\n        };\n    }\n    componentDidMount() {\n        if (this.props.isLeftTruncated || this.props.isStartTruncated) {\n            const inputRef = this.props.innerRef || this.inputRef;\n            this.observer = getResizeObserver(inputRef.current, this.handleResize, true);\n            this.handleResize();\n        }\n    }\n    componentWillUnmount() {\n        if (this.props.isLeftTruncated || this.props.isStartTruncated) {\n            this.observer();\n        }\n    }\n    render() {\n        const _a = this.props, { innerRef, className, type, value, placeholder, validated, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        onChange, onFocus, onBlur, isLeftTruncated, isStartTruncated, isExpanded, expandedProps, readOnly, readOnlyVariant, isRequired, isDisabled, customIcon, ouiaId, ouiaSafe } = _a, props = __rest(_a, [\"innerRef\", \"className\", \"type\", \"value\", \"placeholder\", \"validated\", \"onChange\", \"onFocus\", \"onBlur\", \"isLeftTruncated\", \"isStartTruncated\", \"isExpanded\", \"expandedProps\", \"readOnly\", \"readOnlyVariant\", \"isRequired\", \"isDisabled\", \"customIcon\", \"ouiaId\", \"ouiaSafe\"]);\n        const hasStatusIcon = ['success', 'error', 'warning'].includes(validated);\n        const ariaExpandedProps = expandedProps\n            ? { 'aria-expanded': expandedProps === null || expandedProps === void 0 ? void 0 : expandedProps.isExpanded, 'aria-controls': expandedProps === null || expandedProps === void 0 ? void 0 : expandedProps.ariaControls, role: 'combobox' }\n            : {};\n        return (React.createElement(\"span\", { className: css(styles.formControl, readOnlyVariant && styles.modifiers.readonly, readOnlyVariant === 'plain' && styles.modifiers.plain, isDisabled && styles.modifiers.disabled, (isExpanded || (expandedProps === null || expandedProps === void 0 ? void 0 : expandedProps.isExpanded)) && styles.modifiers.expanded, customIcon && styles.modifiers.icon, hasStatusIcon && styles.modifiers[validated], className) },\n            React.createElement(\"input\", Object.assign({}, props, { onFocus: this.onFocus, onBlur: this.onBlur, onChange: this.handleChange, type: type, value: this.sanitizeInputValue(value), \"aria-invalid\": props['aria-invalid'] ? props['aria-invalid'] : validated === ValidatedOptions.error }, ariaExpandedProps, { required: isRequired, disabled: isDisabled, readOnly: !!readOnlyVariant || readOnly, ref: innerRef || this.inputRef, placeholder: placeholder }, getOUIAProps(TextInput.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))),\n            (customIcon || hasStatusIcon) && (React.createElement(\"span\", { className: css(styles.formControlUtilities) },\n                customIcon && React.createElement(FormControlIcon, { customIcon: customIcon }),\n                hasStatusIcon && React.createElement(FormControlIcon, { status: validated })))));\n    }\n}\nTextInputBase.displayName = 'TextInputBase';\nTextInputBase.defaultProps = {\n    'aria-label': null,\n    isRequired: false,\n    validated: 'default',\n    isDisabled: false,\n    isExpanded: false,\n    type: TextInputTypes.text,\n    isLeftTruncated: false,\n    isStartTruncated: false,\n    onChange: () => undefined,\n    ouiaSafe: true\n};\nexport const TextInput = React.forwardRef((props, ref) => (React.createElement(TextInputBase, Object.assign({}, props, { innerRef: ref }))));\nTextInput.displayName = 'TextInput';\n//# sourceMappingURL=TextInput.js.map","import { createIcon } from '../createIcon';\n\nexport const CopyIconConfig = {\n  name: 'CopyIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CopyIcon = createIcon(CopyIconConfig);\n\nexport default CopyIcon;"],"names":["ClipboardCopyButton","_a","onClick","exitDelay","entryDelay","maxWidth","position","ariaLabel","id","textId","children","variant","onTooltipHidden","className","props","__rest","triggerRef","Tooltip","trigger","aria","content","Button","Object","assign","type","ref","displayName","ClipboardCopyToggle","contentId","isExpanded","css","ClipboardCopyExpanded","constructor","super","render","this","onChange","isReadOnly","isCode","suppressContentEditableWarning","onInput","e","target","innerText","contentEditable","dir","defaultProps","clipboardCopyFunc","_event","text","navigator","clipboard","writeText","toString","error","console","warn","ClipboardCopyVariant","ClipboardCopy","timer","componentDidUpdate","prevProps","prevState","newText","setState","textWhenExpanded","componentWillUnmount","window","clearTimeout","expandContent","expanded","updateText","event","updateTextWhenExpanded","isBlock","onCopy","hoverTip","clickTip","textAriaLabel","toggleAriaLabel","additionalActions","ouiaId","ouiaSafe","divProps","textIdPrefix","state","getOUIAProps","GenerateId","prefix","copied","TextInput","readOnlyVariant","undefined","value","Array","isArray","join","top","ClipboardCopyAction","statusIcons","success","warning","FormControlIcon","status","customIcon","StatusIcon","formControlIcon","modifiers","TextInputTypes","TextInputReadOnlyVariant","TextInputBase","inputRef","observer","handleChange","currentTarget","handleResize","innerRef","current","String","restoreText","scrollLeft","scrollWidth","onFocus","isLeftTruncated","isStartTruncated","onBlur","sanitizeInputValue","replace","ouiaStateId","getDefaultOUIAId","componentDidMount","placeholder","validated","expandedProps","readOnly","isRequired","isDisabled","hasStatusIcon","includes","ariaExpandedProps","ariaControls","role","formControl","readonly","plain","disabled","icon","required","formControlUtilities","CopyIconConfig","name","height","width","svgPath","yOffset","xOffset","CopyIcon"],"sourceRoot":""}