{"version":3,"file":"js/WorkloadsList.d73b0ed9f8968416ea7a.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/angle-down-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/security-icon.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Card/card.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/Dropdown/dropdown.mjs","webpack:///./src/Components/Common/Tables.js","webpack:///./src/Components/Loading/Loading.js","webpack:///./src/Components/ShieldSet.js","webpack:///./src/Components/WorkloadsListTable/WorkloadsListTable.js","webpack:///./src/Components/WorkloadsListTable/index.js","webpack:///./src/Components/WorkloadsList/index.js","webpack:///./src/Utilities/Workloads.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const AngleDownIconConfig = {\n  name: 'AngleDownIcon',\n  height: 512,\n  width: 320,\n  svgPath: 'M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const AngleDownIcon = createIcon(AngleDownIconConfig);\n\nexport default AngleDownIcon;","\"use strict\"\nexports.__esModule = true;\nexports.SecurityIconConfig = {\n  name: 'SecurityIcon',\n  height: 1024,\n  width: 896,\n  svgPath: 'M861.5,0 L34.5,0 C15.4,0 0,14.3 0,32 L0,452.1 C0,768 387.7,1024 448.5,1024 C509.3,1024 896,768 896,452.2 L896,32 C896,14.3 880.6,0 861.5,0 Z M490.7,768 L405.3,768 C393.5,767.8 384.2,757.5 384,744.7 L384,663.3 C384.2,650.5 393.6,640.3 405.3,640 L490.7,640 C502.5,640.2 511.8,650.5 512,663.3 L512,744.7 L512.1,744.7 C511.8,757.5 502.4,767.8 490.7,768 Z M543.9,162.7 L517.2,514.4 C515.8,530.9 502,544 485.3,544 L410.6,544 C394,544 380.1,531.2 378.7,514.7 L352.1,163 C350.5,144.3 365.3,128.3 384,128.3 L512,128 C530.7,128 545.4,144 543.9,162.7 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.SecurityIcon = require('../createIcon').createIcon(exports.SecurityIconConfig);\nexports[\"default\"] = exports.SecurityIcon;","import './card.css';\nexport default {\n  \"card\": \"pf-c-card\",\n  \"cardActions\": \"pf-c-card__actions\",\n  \"cardBody\": \"pf-c-card__body\",\n  \"cardExpandableContent\": \"pf-c-card__expandable-content\",\n  \"cardFooter\": \"pf-c-card__footer\",\n  \"cardHeader\": \"pf-c-card__header\",\n  \"cardHeaderToggle\": \"pf-c-card__header-toggle\",\n  \"cardHeaderToggleIcon\": \"pf-c-card__header-toggle-icon\",\n  \"cardSrInput\": \"pf-c-card__sr-input\",\n  \"cardTitle\": \"pf-c-card__title\",\n  \"divider\": \"pf-c-divider\",\n  \"modifiers\": {\n    \"hoverable\": \"pf-m-hoverable\",\n    \"selectable\": \"pf-m-selectable\",\n    \"selected\": \"pf-m-selected\",\n    \"hoverableRaised\": \"pf-m-hoverable-raised\",\n    \"selectableRaised\": \"pf-m-selectable-raised\",\n    \"nonSelectableRaised\": \"pf-m-non-selectable-raised\",\n    \"selectedRaised\": \"pf-m-selected-raised\",\n    \"compact\": \"pf-m-compact\",\n    \"displayLg\": \"pf-m-display-lg\",\n    \"flat\": \"pf-m-flat\",\n    \"plain\": \"pf-m-plain\",\n    \"rounded\": \"pf-m-rounded\",\n    \"expanded\": \"pf-m-expanded\",\n    \"fullHeight\": \"pf-m-full-height\",\n    \"toggleRight\": \"pf-m-toggle-right\",\n    \"noOffset\": \"pf-m-no-offset\",\n    \"noFill\": \"pf-m-no-fill\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import './dropdown.css';\nexport default {\n  \"badge\": \"pf-c-badge\",\n  \"check\": \"pf-c-check\",\n  \"divider\": \"pf-c-divider\",\n  \"dropdown\": \"pf-c-dropdown\",\n  \"dropdownGroup\": \"pf-c-dropdown__group\",\n  \"dropdownGroupTitle\": \"pf-c-dropdown__group-title\",\n  \"dropdownMenu\": \"pf-c-dropdown__menu\",\n  \"dropdownMenuItem\": \"pf-c-dropdown__menu-item\",\n  \"dropdownMenuItemDescription\": \"pf-c-dropdown__menu-item-description\",\n  \"dropdownMenuItemIcon\": \"pf-c-dropdown__menu-item-icon\",\n  \"dropdownMenuItemMain\": \"pf-c-dropdown__menu-item-main\",\n  \"dropdownToggle\": \"pf-c-dropdown__toggle\",\n  \"dropdownToggleButton\": \"pf-c-dropdown__toggle-button\",\n  \"dropdownToggleCheck\": \"pf-c-dropdown__toggle-check\",\n  \"dropdownToggleIcon\": \"pf-c-dropdown__toggle-icon\",\n  \"dropdownToggleImage\": \"pf-c-dropdown__toggle-image\",\n  \"dropdownToggleProgress\": \"pf-c-dropdown__toggle-progress\",\n  \"dropdownToggleText\": \"pf-c-dropdown__toggle-text\",\n  \"menu\": \"pf-c-menu\",\n  \"modifiers\": {\n    \"fullHeight\": \"pf-m-full-height\",\n    \"expanded\": \"pf-m-expanded\",\n    \"action\": \"pf-m-action\",\n    \"disabled\": \"pf-m-disabled\",\n    \"plain\": \"pf-m-plain\",\n    \"text\": \"pf-m-text\",\n    \"splitButton\": \"pf-m-split-button\",\n    \"primary\": \"pf-m-primary\",\n    \"inProgress\": \"pf-m-in-progress\",\n    \"active\": \"pf-m-active\",\n    \"secondary\": \"pf-m-secondary\",\n    \"top\": \"pf-m-top\",\n    \"static\": \"pf-m-static\",\n    \"alignRight\": \"pf-m-align-right\",\n    \"alignLeft\": \"pf-m-align-left\",\n    \"alignRightOnSm\": \"pf-m-align-right-on-sm\",\n    \"alignLeftOnSm\": \"pf-m-align-left-on-sm\",\n    \"alignRightOnMd\": \"pf-m-align-right-on-md\",\n    \"alignLeftOnMd\": \"pf-m-align-left-on-md\",\n    \"alignRightOnLg\": \"pf-m-align-right-on-lg\",\n    \"alignLeftOnLg\": \"pf-m-align-left-on-lg\",\n    \"alignRightOnXl\": \"pf-m-align-right-on-xl\",\n    \"alignLeftOnXl\": \"pf-m-align-left-on-xl\",\n    \"alignRightOn_2xl\": \"pf-m-align-right-on-2xl\",\n    \"alignLeftOn_2xl\": \"pf-m-align-left-on-2xl\",\n    \"ariaDisabled\": \"pf-m-aria-disabled\",\n    \"icon\": \"pf-m-icon\",\n    \"description\": \"pf-m-description\"\n  },\n  \"spinner\": \"pf-c-spinner\",\n  \"themeDark\": \"pf-theme-dark\"\n};","import capitalize from 'lodash/capitalize';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { useEffect, useState } from 'react';\nimport { coerce, compare, valid } from 'semver';\nimport {\n  CLUSTER_FILTER_CATEGORIES,\n  FILTER_CATEGORIES,\n  RULE_CATEGORIES,\n} from '../../AppConstants';\nimport {\n  hasAnyValueGreaterThanZero,\n  remappingSeverity,\n} from '../../Utilities/Workloads';\n\nexport const passFilters = (rule, filters) =>\n  Object.entries(filters).every(([filterKey, filterValue]) => {\n    switch (filterKey) {\n      case 'text':\n        return rule.description\n          .toLowerCase()\n          .includes(filterValue.toLowerCase());\n      case FILTER_CATEGORIES.total_risk.urlParam:\n        return filterValue.includes(String(rule.total_risk));\n      case FILTER_CATEGORIES.category.urlParam:\n        return rule.tags.find((c) =>\n          filterValue.includes(String(RULE_CATEGORIES[c]))\n        );\n      case FILTER_CATEGORIES.impact.urlParam:\n        return filterValue.includes(String(rule.impact));\n      case FILTER_CATEGORIES.impacting.urlParam:\n        return filterValue.length > 0\n          ? filterValue.some((v) => {\n              if (v === 'true') {\n                return rule.impacted_clusters_count > 0;\n              }\n              if (v === 'false') {\n                return rule.impacted_clusters_count === 0;\n              }\n            })\n          : true;\n      case FILTER_CATEGORIES.likelihood.urlParam:\n        return filterValue.includes(String(rule.likelihood));\n      case FILTER_CATEGORIES.rule_status.urlParam:\n        return (\n          filterValue === 'all' ||\n          (filterValue === 'disabled' && rule.disabled) ||\n          (filterValue === 'enabled' && !rule.disabled)\n        );\n      case FILTER_CATEGORIES.res_risk.urlParam:\n        return filterValue.includes(String(rule.resolution_risk));\n      default:\n        return true;\n    }\n  });\n\nexport const passFiltersCluster = (cluster, filters) =>\n  Object.entries(filters).every(([filterKey, filterValue]) => {\n    switch (filterKey) {\n      case 'text':\n        return (cluster.cluster_name || cluster.cluster_id)\n          .toLowerCase()\n          .includes(filterValue.toLowerCase());\n      case CLUSTER_FILTER_CATEGORIES.hits.urlParam:\n        return (\n          // clusters with at least one rule hit\n          (filterValue.length === 0 && parseInt(cluster.total_hit_count) > 0) ||\n          // all clusters\n          filterValue.includes('all') ||\n          // clusters with at least one rule hit for any of the active risk filters\n          filterValue.some((v) => cluster.hits_by_total_risk[v] > 0)\n        );\n      case 'version':\n        return (\n          filterValue.length === 0 ||\n          filterValue.includes(toValidSemVer(cluster.cluster_version))\n        );\n      default:\n        return true;\n    }\n  });\n\nconst pruneFilters = (localFilters, filterCategories) => {\n  const prunedFilters = Object.entries(localFilters || {});\n  return prunedFilters.reduce((arr, it) => {\n    const [key, item] = it;\n    if (filterCategories[key]) {\n      const category = filterCategories[key];\n      const chips = Array.isArray(item)\n        ? item.map((value) => {\n            const selectedCategoryValue = category.values.find(\n              (values) => values.value === String(value)\n            );\n            return selectedCategoryValue\n              ? {\n                  name:\n                    selectedCategoryValue.text || selectedCategoryValue.label,\n                  value,\n                }\n              : { name: value, value };\n          })\n        : [\n            {\n              name: category.values.find(\n                (values) => values.value === String(item)\n              ).label,\n              value: item,\n            },\n          ];\n      return [\n        ...arr,\n        {\n          category: capitalize(category.title),\n          chips,\n          urlParam: category.urlParam,\n        },\n      ];\n    } else if (key === 'text') {\n      return [\n        ...arr,\n        ...(item.length > 0\n          ? [\n              {\n                category: 'Name',\n                chips: [{ name: item, value: item }],\n                urlParam: key,\n              },\n            ]\n          : []),\n      ];\n    } else if (key === 'version') {\n      return [\n        ...arr,\n        ...(item.length > 0\n          ? [\n              {\n                category: 'Version',\n                chips: item.map((it) => ({\n                  name: it,\n                  value: it,\n                })),\n                urlParam: key,\n              },\n            ]\n          : []),\n      ];\n    } else if (key === 'namespace_name') {\n      return [\n        ...arr,\n        ...(item.length > 0\n          ? [\n              {\n                category: 'Namespace name',\n                chips: [{ name: item, value: item }],\n                urlParam: key,\n              },\n            ]\n          : []),\n      ];\n    } else if (key === 'cluster_name') {\n      return [\n        ...arr,\n        ...(item.length > 0\n          ? [\n              {\n                category: 'Cluster name',\n                chips: [{ name: item, value: item }],\n                urlParam: key,\n              },\n            ]\n          : []),\n      ];\n    }\n  }, []);\n};\n\nexport const buildFilterChips = (filters, categories) => {\n  const localFilters = cloneDeep(filters);\n  delete localFilters.sortIndex;\n  delete localFilters.sortDirection;\n  delete localFilters.sort;\n  delete localFilters.offset;\n  delete localFilters.limit;\n  localFilters?.hits &&\n    localFilters.hits.length === 0 &&\n    delete localFilters.hits;\n  return pruneFilters(localFilters, categories);\n};\n\n// parses url params for use in table/filter chips\nexport const paramParser = (search) => {\n  const searchParams = new URLSearchParams(search);\n  return Array.from(searchParams).reduce(\n    (acc, [key, value]) => ({\n      ...acc,\n      [key]: [\n        'text',\n        'first',\n        'rule_status',\n        'sort',\n        'cluster_name',\n        'namespace_name',\n      ].includes(key)\n        ? value // just copy the full value\n        : value === 'true' || value === 'false'\n        ? JSON.parse(value) // parse boolean\n        : // parse array of values\n          value.split(','),\n    }),\n    {}\n  );\n};\n\nexport const translateSortParams = (value) => ({\n  name: value.substring(value.startsWith('-') ? 1 : 0),\n  direction: value.startsWith('-') ? 'desc' : 'asc',\n});\n\nexport const translateSortValue = (index, indexMapping, direction) => {\n  if (!['desc', 'asc'].includes(direction)) {\n    console.error('Invalid sort parameters (is not asc nor desc)');\n  }\n  return `${direction === 'asc' ? '' : '-'}${indexMapping[index]}`;\n};\n\n// TODO: remove since unused\nexport const debounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [delay, value]);\n\n  return debouncedValue;\n};\n\nexport const updateSearchParams = (filters = {}, columnMapping) => {\n  const url = new URL(window.location.origin + window.location.pathname);\n  // separately check the sort param\n  url.searchParams.set(\n    'sort',\n    translateSortValue(filters.sortIndex, columnMapping, filters.sortDirection)\n  );\n  // check the rest of filters\n  Object.entries(filters).forEach(([key, value]) => {\n    return (\n      key !== 'sortIndex' &&\n      key !== 'sortDirection' &&\n      key !== 'sort' &&\n      value !== '' &&\n      !(Array.isArray(value) && value.length === 0) &&\n      url.searchParams.set(key, value)\n    );\n  });\n  window.history.replaceState(null, null, url.href);\n};\n\n// TODO: move to Utils.js\nexport const compareSemVer = (v1, v2, d) => d * compare(v1, v2);\nexport const toValidSemVer = (version) =>\n  coerce(version === undefined || !valid(coerce(version)) ? '0.0.0' : version)\n    .version;\n\nexport const removeFilterParam = (currentFilters, updateFilters, param) => {\n  const { [param]: omitted, ...newFilters } = { ...currentFilters, offset: 0 };\n  updateFilters({\n    ...newFilters,\n    ...(param === 'text'\n      ? { text: '' }\n      : param === 'hits'\n      ? { hits: [] }\n      : param === 'version'\n      ? { version: [] }\n      : {}),\n  });\n};\n\nexport const addFilterParam = (currentFilters, updateFilters, param, values) =>\n  values.length > 0\n    ? updateFilters({\n        ...currentFilters,\n        offset: 0,\n        ...{ [param]: values },\n      })\n    : removeFilterParam(currentFilters, updateFilters, param);\n\nexport const passFilterWorkloads = (workloads, filters) => {\n  const generalSeverityRemapped = remappingSeverity(\n    workloads.metadata.hits_by_severity,\n    'general'\n  );\n  return Object.entries(filters).every(([filterKey, filterValue]) => {\n    switch (filterKey) {\n      case 'cluster_name':\n        return (workloads.cluster.display_name || workloads.cluster.uuid)\n          .toLowerCase()\n          .includes(filterValue.toLowerCase());\n      case 'namespace_name':\n        return (workloads.namespace.name || workloads.namespace.uuid)\n          .toLowerCase()\n          .includes(filterValue.toLowerCase());\n      case 'severity':\n        return (\n          filterValue.length === 0 ||\n          hasAnyValueGreaterThanZero(generalSeverityRemapped, filters.severity)\n        );\n      default:\n        return true;\n    }\n  });\n};\n","import React from 'react';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { List } from 'react-content-loader';\n\nconst Loading = () => (\n  <Card ouiaId=\"loading-skeleton\">\n    <CardBody>\n      <List />\n    </CardBody>\n  </Card>\n);\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SecurityIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { Tooltip } from '@patternfly/react-core';\nimport { SEVERITY_OPTIONS, remappingSeverity } from '../Utilities/Workloads';\n\nconst ShieldSet = (hits_by_severity) => {\n  const DISABLED_COLOR = 'var(--pf-global--disabled-color--200)';\n  const severitiesRemapped = remappingSeverity(\n    hits_by_severity.hits_by_severity,\n    'label'\n  );\n  return (\n    <div className=\"shield-set\">\n      {SEVERITY_OPTIONS.map((severityOption) => (\n        <Tooltip\n          key={severityOption.value}\n          content={`${severityOption.label} severity`}\n        >\n          {severityOption.hasIcon &&\n            (severitiesRemapped[severityOption.value] === 0 ? (\n              <a className=\"disabled-shield nowrap\">\n                <SecurityIcon style={{ color: DISABLED_COLOR }} />\n                <span>0</span>\n              </a>\n            ) : (\n              <Link\n                key={severityOption.value}\n                to={`?severity=${severityOption.value}`}\n                className=\"nowrap\"\n              >\n                <SecurityIcon style={{ color: severityOption.iconColor }} />\n                <span>{severitiesRemapped[severityOption.value]}</span>\n              </Link>\n            ))}\n        </Tooltip>\n      ))}\n    </div>\n  );\n};\n\nShieldSet.propTypes = {\n  hits_by_severity: PropTypes.shape({\n    critical: PropTypes.number,\n    important: PropTypes.number,\n    moderate: PropTypes.number,\n    low: PropTypes.number,\n  }).isRequired,\n  linkTo: PropTypes.string,\n};\n\nexport default ShieldSet;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n} from '@patternfly/react-table';\nimport { PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport {\n  WORKLOADS_LIST_COLUMNS,\n  WORKLOADS_LIST_COLUMNS_KEYS,\n  WORKLOADS_TABLE_CELL_LAST_SEEN,\n  WORKLOADS_TABLE_CELL_NAME,\n  WORKLOADS_TABLE_CELL_OBJECTS,\n  WORKLOADS_TABLE_CELL_RECOMMENDATIONS,\n  WORKLOADS_TABLE_FILTER_CATEGORIES,\n  WORKLOADS_TABLE_SEVERITY,\n} from '../../AppConstants';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Link, useLocation } from 'react-router-dom';\nimport { BASE_PATH } from '../../Routes';\nimport { Pagination } from '@patternfly/react-core';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter/conditionalFilterConstants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  WORKLOADS_TABLE_INITIAL_STATE,\n  resetFilters,\n  updateWorkloadsListFilters,\n} from '../../Services/Filters';\nimport isEqual from 'lodash/isEqual';\nimport {\n  buildFilterChips,\n  passFilterWorkloads,\n  removeFilterParam as _removeFilterParam,\n  addFilterParam as _addFilterParam,\n  translateSortParams,\n  paramParser,\n  updateSearchParams,\n} from '../Common/Tables';\nimport {\n  ErrorState,\n  NoMatchingClusters,\n  NoRecsForWorkloads,\n  NoWorkloadsAvailable,\n} from '../MessageState/EmptyStates';\nimport Loading from '../Loading/Loading';\nimport ShieldSet from '../ShieldSet';\nimport { noFiltersApplied } from '../../Utilities/Workloads';\n\nconst WorkloadsListTable = ({\n  query: {\n    isError,\n    error,\n    isUninitialized,\n    isFetching,\n    isSuccess,\n    data,\n    refetch,\n  },\n}) => {\n  const dispatch = useDispatch();\n  const filters = useSelector(({ filters }) => filters.workloadsListState);\n  const workloads = data?.workloads || [];\n  const perPage = filters.limit;\n  const page = Math.floor(filters.offset / filters.limit) + 1;\n\n  const [rows, setRows] = useState([]);\n  const [filteredRows, setFilteredRows] = useState([]);\n  const [rowsFiltered, setRowsFiltered] = useState(false);\n  const [filtersApplied, setFiltersApplied] = useState(false);\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const updateFilters = (payload) =>\n    dispatch(updateWorkloadsListFilters(payload));\n  const removeFilterParam = (param) =>\n    _removeFilterParam(filters, updateFilters, param);\n\n  const loadingState = isUninitialized || isFetching || !rowsFiltered;\n  const errorState = isError;\n  const noMatch = rows.length > 0 && filteredRows.length === 0;\n  const successState = isSuccess;\n  const { search } = useLocation();\n\n  const addFilterParam = (param, values) =>\n    _addFilterParam(filters, updateFilters, param, values);\n\n  useEffect(() => {\n    setFilteredRows(buildFilteredRows(workloads));\n  }, [\n    data,\n    filters.namespace_name,\n    filters.cluster_name,\n    filters.severity,\n    filters.sortDirection,\n    filters.sortIndex,\n  ]);\n\n  useEffect(() => {\n    if (search && filterBuilding) {\n      const paramsObject = paramParser(search);\n\n      if (paramsObject.sort) {\n        const sortObj = translateSortParams(paramsObject.sort);\n        paramsObject.sortIndex = WORKLOADS_LIST_COLUMNS_KEYS.indexOf(\n          sortObj.name\n        );\n        paramsObject.sortDirection = sortObj.direction;\n      }\n      paramsObject.offset &&\n        (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit &&\n        (paramsObject.limit = Number(paramsObject.limit[0]));\n      paramsObject.impacting &&\n        !Array.isArray(paramsObject.impacting) &&\n        (paramsObject.impacting = [`${paramsObject.impacting}`]);\n      updateFilters({ ...filters, ...paramsObject });\n    }\n    setFilterBuilding(false);\n  }, []);\n\n  useEffect(() => {\n    if (!filterBuilding) {\n      updateSearchParams(filters, WORKLOADS_LIST_COLUMNS_KEYS);\n    }\n  }, [filters, filterBuilding]);\n\n  useEffect(() => {\n    setRows(buildDisplayedRows(filteredRows));\n    setRowsFiltered(true);\n    setFiltersApplied(noFiltersApplied(filters).length > 0 ? true : false);\n  }, [filteredRows, filters.limit, filters.offset]);\n\n  const buildFilteredRows = (items) => {\n    setRowsFiltered(false);\n    const filtered = items\n      .filter((workloadData) => {\n        return passFilterWorkloads(workloadData, filters);\n      })\n      .sort((a, b) => {\n        let fst, snd;\n        const d = filters.sortDirection === 'asc' ? 1 : -1;\n        switch (filters.sortIndex) {\n          case WORKLOADS_TABLE_CELL_NAME:\n            if (a?.cluster.display_name && b?.cluster.display_name) {\n              return (\n                d *\n                a?.cluster.display_name.localeCompare(b?.cluster.display_name)\n              );\n            } else {\n              return d * a?.cluster.uuid.localeCompare(b?.cluster.uuid);\n            }\n          case WORKLOADS_TABLE_CELL_RECOMMENDATIONS:\n            fst = a.metadata.recommendations || 0;\n            snd = b.metadata.recommendations || 0;\n            return fst > snd ? d : snd > fst ? -d : 0;\n          case WORKLOADS_TABLE_SEVERITY:\n            fst = a.metadata.hits_by_severity || { 1: 0, 2: 0, 3: 0, 4: 0 };\n            snd = b.metadata.hits_by_severity || { 1: 0, 2: 0, 3: 0, 4: 0 };\n            for (let i = 4; i > 0; i--) {\n              if (fst[i] > snd[i]) return d;\n              if (fst[i] < snd[i]) return -d;\n            }\n            return 0;\n          case WORKLOADS_TABLE_CELL_OBJECTS:\n            fst = a.metadata.objects || 0;\n            snd = b.metadata.objects || 0;\n            return fst > snd ? d : snd > fst ? -d : 0;\n          case WORKLOADS_TABLE_CELL_LAST_SEEN:\n            fst = new Date(a.metadata.last_checked_at || 0);\n            snd = new Date(b.metadata.last_checked_at || 0);\n            return fst > snd ? d : snd > fst ? -d : 0;\n        }\n      });\n\n    return filtered;\n  };\n\n  const buildDisplayedRows = (rows) => {\n    return rows\n      .slice(perPage * (page - 1), perPage * (page - 1) + perPage)\n      .map((item, index) => ({\n        entity: item,\n        cells: [\n          <span key={index}>\n            <Link\n              to={`${BASE_PATH}/workloads/${item.cluster.uuid}/${item.namespace.uuid}`}\n            >\n              <p key={`${index}-cluster`}>\n                {item.cluster.display_name || item.cluster.uuid}\n              </p>\n              <p key={`${index}-namespace`}>\n                {item.namespace.name || item.namespace.uuid}\n              </p>\n            </Link>\n          </span>,\n          item.metadata.recommendations,\n          <span key={index}>\n            <ShieldSet hits_by_severity={item.metadata.hits_by_severity} />\n          </span>,\n          item.metadata.objects,\n          <span key={index}>\n            <DateFormat\n              extraTitle=\"Last seen: \"\n              date={item.metadata.last_checked_at}\n              variant=\"relative\"\n            />\n          </span>,\n        ],\n      }));\n  };\n\n  const filterConfigItems = [\n    {\n      label: 'Cluster name',\n      filterValues: {\n        key: 'cluster_name',\n        onChange: (_event, value) =>\n          updateFilters({ ...filters, offset: 0, cluster_name: value }),\n        value: filters.cluster_name,\n        placeholder: 'Filter by cluster name',\n      },\n    },\n    {\n      label: 'Namespace name',\n      filterValues: {\n        key: 'namespace_name',\n        onChange: (_event, value) =>\n          updateFilters({ ...filters, offset: 0, namespace_name: value }),\n        value: filters.namespace_name,\n        placeholder: 'Filter by namespace name',\n      },\n    },\n    {\n      label: 'Severity',\n      type: conditionalFilterType.checkbox,\n      id: WORKLOADS_TABLE_FILTER_CATEGORIES.severity.urlParam,\n      value: `checkbox-${WORKLOADS_TABLE_FILTER_CATEGORIES.severity.urlParam}`,\n      filterValues: {\n        key: `${WORKLOADS_TABLE_FILTER_CATEGORIES.severity.urlParam}-filter`,\n        onChange: (_event, value) => addFilterParam('severity', value),\n        value: filters.severity,\n        items: WORKLOADS_TABLE_FILTER_CATEGORIES.severity.values,\n        placeholder: 'Filter by severity',\n      },\n    },\n  ];\n\n  const activeFiltersConfig = {\n    showDeleteButton: filtersApplied ? true : false,\n    deleteTitle: 'Reset filters',\n    filters: buildFilterChips(filters, WORKLOADS_TABLE_FILTER_CATEGORIES),\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        if (isEqual(filters, WORKLOADS_TABLE_INITIAL_STATE)) {\n          refetch();\n        } else {\n          resetFilters(filters, WORKLOADS_TABLE_INITIAL_STATE, updateFilters);\n        }\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? updateFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  const onSetPage = (_e, pageNumber) => {\n    setRowsFiltered(false);\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    updateFilters({ ...filters, offset: newOffset });\n  };\n\n  const onSetPerPage = (_e, perPage) => {\n    if (perPage !== filters.limit) {\n      setRowsFiltered(false);\n      updateFilters({ ...filters, limit: perPage, offset: 0 });\n    }\n  };\n\n  const onSort = (_e, index, direction) => {\n    setRowsFiltered(false);\n    updateFilters({ ...filters, sortIndex: index, sortDirection: direction });\n  };\n\n  return isError && error.status === 404 ? (\n    <NoWorkloadsAvailable />\n  ) : isSuccess && workloads.length === 0 ? (\n    <NoRecsForWorkloads />\n  ) : (\n    <div id=\"workloads-list-table\">\n      <PrimaryToolbar\n        pagination={{\n          itemCount: filteredRows.length,\n          page,\n          perPage,\n          onSetPage,\n          onPerPageSelect: onSetPerPage,\n          isCompact: true,\n          ouiaId: 'pager',\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={\n          isError ? { showDeleteButton: false } : activeFiltersConfig\n        }\n      />\n      <Table\n        aria-label=\"Table of workloads\"\n        ouiaId=\"workloads\"\n        variant={TableVariant.compact}\n        cells={WORKLOADS_LIST_COLUMNS}\n        rows={\n          errorState || loadingState || noMatch ? (\n            [\n              {\n                fullWidth: true,\n                cells: [\n                  {\n                    props: {\n                      colSpan: WORKLOADS_LIST_COLUMNS.length + 1,\n                    },\n                    title: errorState ? (\n                      <ErrorState />\n                    ) : loadingState ? (\n                      <Loading />\n                    ) : (\n                      <NoMatchingClusters />\n                    ),\n                  },\n                ],\n              },\n            ]\n          ) : successState ? (\n            rows\n          ) : (\n            <ErrorState />\n          )\n        }\n        isStickyHeader\n        sortBy={{\n          index: filters.sortIndex,\n          direction: filters.sortDirection,\n        }}\n        onSort={onSort}\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n      <Pagination\n        ouiaId=\"pager\"\n        itemCount={filteredRows.length}\n        page={page}\n        perPage={perPage}\n        onSetPage={onSetPage}\n        onPerPageSelect={onSetPerPage}\n        onPageInput={onSetPage}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </div>\n  );\n};\n\nWorkloadsListTable.propTypes = {\n  query: PropTypes.object.isRequired,\n};\n\nexport { WorkloadsListTable };\n","import React from 'react';\nimport { useGetWorkloadsQuery } from '../../Services/SmartProxy';\nimport { WorkloadsListTable } from './WorkloadsListTable';\n// import mockdata from '../../../cypress/fixtures/api/insights-results-aggregator/v2/workloads.json';\n\nconst WorkloadsListTableWrapper = () => {\n  const query = useGetWorkloadsQuery();\n\n  // For more diverse use mockdata\n  // Comment out the query above\n  // Uncomment the query below\n  // Uncomment the mockdata import above\n  // const query = {\n  //   isError: false,\n  //   isFetching: false,\n  //   isUninitialized: false,\n  //   isSuccess: true,\n  //   data: { workloads: mockdata },\n  //   refetch: () => null,\n  // };\n\n  return <WorkloadsListTable query={query} />;\n};\n\nexport default WorkloadsListTableWrapper;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport PageHeader from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport messages from '../../Messages';\nimport WorkloadsListTable from '../WorkloadsListTable';\nimport { Title } from '@patternfly/react-core';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst WorkloadsList = () => {\n  const intl = useIntl();\n  const chrome = useChrome();\n\n  chrome.updateDocumentTitle(\n    intl.formatMessage(messages.documentTitle, {\n      subnav: 'Workloads',\n    })\n  );\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"ins-c-clusters-header\">\n        <Title headingLevel=\"h1\" ouiaId=\"page-header\">\n          Workloads\n        </Title>\n      </PageHeader>\n      <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n        <WorkloadsListTable />\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default WorkloadsList;\n","import _, { isEmpty } from 'lodash';\n\nexport const SEVERITY_OPTIONS = [\n  {\n    value: 'critical',\n    label: 'Critical',\n    iconColor: 'var(--pf-global--danger-color--100)',\n    textColor: 'var(--pf-global--danger-color--100)',\n    hasIcon: true,\n  },\n  {\n    value: 'important',\n    label: 'Important',\n    iconColor: 'var(--pf-global--palette--orange-300)',\n    textColor: 'var(--pf-global--palette--orange-400)',\n    hasIcon: true,\n  },\n  {\n    value: 'moderate',\n    label: 'Moderate',\n    iconColor: 'var(--pf-global--warning-color--100)',\n    textColor: 'var(--pf-global--warning-color--200)',\n    hasIcon: true,\n  },\n  {\n    value: 'low',\n    label: 'Low',\n    iconColor: 'var(--pf-global--Color--200)',\n    textColor: 'var(--pf-global--default-color--300)',\n    hasIcon: true,\n  },\n  {\n    value: 'none',\n    label: 'Unknown',\n  },\n];\n\nexport const remappingSeverity = (obj, mode) => {\n  const mapping = {\n    1: 'low',\n    2: 'moderate',\n    3: 'important',\n    4: 'critical',\n  };\n  let updatedObj = {};\n\n  if (mode === 'general' || mode === 'label') {\n    for (const key in obj) {\n      if (key in mapping) {\n        updatedObj[mapping[key]] = obj[key];\n      }\n    }\n  } else {\n    updatedObj = mapping[obj];\n  }\n\n  return updatedObj;\n};\n\nexport const hasAnyValueGreaterThanZero = (obj, stringsToCheck) => {\n  for (const key of stringsToCheck) {\n    if (obj[key] > 0) {\n      return true; // Return true if any matching string has a value greater than 0\n    }\n  }\n};\n\nexport const severityTypeToText = (value) => {\n  value = parseInt(value);\n  if (value === 1) {\n    return 'Low';\n  } else if (value === 2) {\n    return 'Moderate';\n  } else if (value === 3) {\n    return 'Important';\n  } else {\n    return 'Critical';\n  }\n};\n\nexport const noFiltersApplied = (params) => {\n  const cleanedUpParams = _.cloneDeep(params);\n  delete cleanedUpParams.sortIndex;\n  delete cleanedUpParams.sortDirection;\n  delete cleanedUpParams.offset;\n  delete cleanedUpParams.limit;\n  return Object.values(cleanedUpParams).filter((value) => !isEmpty(value));\n};\n"],"names":["AngleDownIconConfig","name","height","width","svgPath","yOffset","xOffset","AngleDownIcon","exports","passFilters","rule","filters","Object","entries","every","filterKey","filterValue","description","toLowerCase","includes","FILTER_CATEGORIES","total_risk","urlParam","String","category","tags","find","c","RULE_CATEGORIES","impact","impacting","length","some","v","impacted_clusters_count","likelihood","rule_status","disabled","res_risk","resolution_risk","passFiltersCluster","cluster","cluster_name","cluster_id","CLUSTER_FILTER_CATEGORIES","hits","parseInt","total_hit_count","hits_by_total_risk","toValidSemVer","cluster_version","buildFilterChips","categories","localFilters","cloneDeep","sortIndex","sortDirection","sort","offset","limit","filterCategories","reduce","arr","it","key","item","chips","Array","isArray","map","value","selectedCategoryValue","values","text","label","capitalize","title","pruneFilters","paramParser","search","searchParams","URLSearchParams","from","acc","JSON","parse","split","translateSortParams","substring","startsWith","direction","updateSearchParams","index","indexMapping","columnMapping","url","URL","window","location","origin","pathname","set","console","error","forEach","history","replaceState","href","compareSemVer","v1","v2","d","compare","version","coerce","undefined","valid","removeFilterParam","currentFilters","updateFilters","param","addFilterParam","passFilterWorkloads","workloads","generalSeverityRemapped","remappingSeverity","metadata","hits_by_severity","display_name","uuid","namespace","hasAnyValueGreaterThanZero","severity","Card","ouiaId","CardBody","ShieldSet","severitiesRemapped","className","SEVERITY_OPTIONS","severityOption","Tooltip","content","hasIcon","style","color","Link","to","iconColor","propTypes","PropTypes","critical","important","moderate","low","isRequired","linkTo","WorkloadsListTable","query","isError","isUninitialized","isFetching","isSuccess","data","refetch","dispatch","useDispatch","useSelector","workloadsListState","perPage","page","Math","floor","useState","rows","setRows","filteredRows","setFilteredRows","rowsFiltered","setRowsFiltered","filtersApplied","setFiltersApplied","filterBuilding","setFilterBuilding","payload","updateWorkloadsListFilters","loadingState","errorState","noMatch","successState","useLocation","useEffect","buildFilteredRows","namespace_name","paramsObject","sortObj","WORKLOADS_LIST_COLUMNS_KEYS","indexOf","Number","buildDisplayedRows","noFiltersApplied","items","filter","workloadData","a","b","fst","snd","WORKLOADS_TABLE_CELL_NAME","localeCompare","WORKLOADS_TABLE_CELL_RECOMMENDATIONS","recommendations","WORKLOADS_TABLE_SEVERITY","i","WORKLOADS_TABLE_CELL_OBJECTS","objects","WORKLOADS_TABLE_CELL_LAST_SEEN","Date","last_checked_at","slice","entity","cells","BASE_PATH","DateFormat","extraTitle","date","variant","filterConfigItems","filterValues","onChange","_event","placeholder","type","conditionalFilterType","checkbox","id","WORKLOADS_TABLE_FILTER_CATEGORIES","_addFilterParam","activeFiltersConfig","showDeleteButton","deleteTitle","onDelete","itemsToRemove","isAll","isEqual","WORKLOADS_TABLE_INITIAL_STATE","resetFilters","newFilter","_removeFilterParam","onSetPage","_e","pageNumber","newOffset","onSetPerPage","status","PrimaryToolbar","pagination","itemCount","onPerPageSelect","isCompact","filterConfig","Table","TableVariant","compact","WORKLOADS_LIST_COLUMNS","fullWidth","props","colSpan","Loading","isStickyHeader","sortBy","onSort","TableHeader","TableBody","Pagination","onPageInput","widgetId","PaginationVariant","bottom","useGetWorkloadsQuery","intl","useIntl","useChrome","updateDocumentTitle","formatMessage","messages","documentTitle","subnav","PageHeader","Title","headingLevel","textColor","obj","mode","mapping","updatedObj","stringsToCheck","params","cleanedUpParams","_","isEmpty"],"sourceRoot":""}