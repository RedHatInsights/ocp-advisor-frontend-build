{"version":3,"file":"js/WorkloadsList.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/Components/Loading/Loading.js","webpack:///./src/Components/ShieldSet.js","webpack:///./src/Components/WorkloadsListTable/WorkloadsListTable.js","webpack:///./src/Components/WorkloadsListTable/index.js","webpack:///./src/Components/WorkloadsList/index.js"],"sourcesContent":["import React from 'react';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { List } from 'react-content-loader';\n\nconst Loading = () => (\n  <Card ouiaId=\"loading-skeleton\">\n    <CardBody>\n      <List />\n    </CardBody>\n  </Card>\n);\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SecurityIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { Tooltip } from '@patternfly/react-core';\nimport { SEVERITY_OPTIONS, remappingSeverity } from '../Utilities/Workloads';\n\nconst ShieldSet = ({ hits_by_severity, basePath }) => {\n  const DISABLED_COLOR = 'var(--pf-global--disabled-color--200)';\n  const severitiesRemapped = remappingSeverity(hits_by_severity, 'label');\n  return (\n    <div className=\"shield-set\">\n      {SEVERITY_OPTIONS.map((severityOption, index) => (\n        <Tooltip\n          key={severityOption.value}\n          content={`${severityOption.label} severity`}\n        >\n          {severityOption.hasIcon &&\n            (severitiesRemapped[severityOption.value] === 0 ? (\n              <a className=\"disabled-shield nowrap\">\n                <SecurityIcon style={{ color: DISABLED_COLOR }} />\n                <span>0</span>\n              </a>\n            ) : (\n              <Link\n                key={severityOption.value}\n                to={`${basePath}?total_risk=${SEVERITY_OPTIONS[index].indexNumber}`}\n                className=\"nowrap\"\n              >\n                <SecurityIcon style={{ color: severityOption.iconColor }} />\n                <span>{severitiesRemapped[severityOption.value]}</span>\n              </Link>\n            ))}\n        </Tooltip>\n      ))}\n    </div>\n  );\n};\n\nShieldSet.propTypes = {\n  hits_by_severity: PropTypes.shape({\n    critical: PropTypes.number,\n    important: PropTypes.number,\n    moderate: PropTypes.number,\n    low: PropTypes.number,\n  }).isRequired,\n  linkTo: PropTypes.string,\n  basePath: PropTypes.string,\n};\n\nexport default ShieldSet;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { TableVariant } from '@patternfly/react-table';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n} from '@patternfly/react-table/deprecated';\nimport { PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport {\n  WORKLOADS_LIST_COLUMNS,\n  WORKLOADS_LIST_COLUMNS_KEYS,\n  WORKLOADS_TABLE_CELL_LAST_SEEN,\n  WORKLOADS_TABLE_CELL_NAME,\n  WORKLOADS_TABLE_CELL_OBJECTS,\n  WORKLOADS_TABLE_CELL_RECOMMENDATIONS,\n  WORKLOADS_TABLE_FILTER_CATEGORIES,\n  WORKLOADS_TABLE_SEVERITY,\n} from '../../AppConstants';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Link, useLocation } from 'react-router-dom';\nimport { BASE_PATH } from '../../Routes';\nimport { Pagination } from '@patternfly/react-core';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter/conditionalFilterConstants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  WORKLOADS_TABLE_INITIAL_STATE,\n  resetFilters,\n  updateWorkloadsListFilters,\n} from '../../Services/Filters';\nimport isEqual from 'lodash/isEqual';\nimport {\n  buildFilterChips,\n  passFilterWorkloads,\n  removeFilterParam as _removeFilterParam,\n  addFilterParam as _addFilterParam,\n  translateSortParams,\n  paramParser,\n  updateSearchParams,\n} from '../Common/Tables';\nimport {\n  ErrorState,\n  NoMatchingWorkloads,\n  NoDVOInstalledOrDataCollected,\n} from '../MessageState/EmptyStates';\nimport Loading from '../Loading/Loading';\nimport ShieldSet from '../ShieldSet';\nimport { filtersAreApplied } from '../../Utilities/Workloads';\n\nconst WorkloadsListTable = ({\n  query: {\n    isError,\n    error,\n    isUninitialized,\n    isFetching,\n    isSuccess,\n    data,\n    refetch,\n  },\n}) => {\n  const dispatch = useDispatch();\n  const filters = useSelector(({ filters }) => filters.workloadsListState);\n  const workloads = data?.workloads || [];\n  const perPage = filters.limit;\n  const page = Math.floor(filters.offset / filters.limit) + 1;\n\n  const [rows, setRows] = useState([]);\n  const [filteredRows, setFilteredRows] = useState([]);\n  const [rowsFiltered, setRowsFiltered] = useState(false);\n  const [filtersApplied, setFiltersApplied] = useState(false);\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const updateFilters = (payload) =>\n    dispatch(updateWorkloadsListFilters(payload));\n  const removeFilterParam = (param) =>\n    _removeFilterParam(filters, updateFilters, param);\n\n  const loadingState = isUninitialized || isFetching || !rowsFiltered;\n  const errorState = isError;\n  const noMatch = filteredRows.length === 0;\n  const successState = isSuccess;\n  const { search } = useLocation();\n\n  const addFilterParam = (param, values) =>\n    _addFilterParam(filters, updateFilters, param, values);\n\n  useEffect(() => {\n    setFilteredRows(buildFilteredRows(workloads));\n  }, [\n    data,\n    filters.namespace_name,\n    filters.cluster_name,\n    filters.severity,\n    filters.sortDirection,\n    filters.sortIndex,\n  ]);\n\n  useEffect(() => {\n    if (search && filterBuilding) {\n      const paramsObject = paramParser(search);\n\n      if (paramsObject.sort) {\n        const sortObj = translateSortParams(paramsObject.sort);\n        paramsObject.sortIndex = WORKLOADS_LIST_COLUMNS_KEYS.indexOf(\n          sortObj.name\n        );\n        paramsObject.sortDirection = sortObj.direction;\n      }\n      paramsObject.offset &&\n        (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit &&\n        (paramsObject.limit = Number(paramsObject.limit[0]));\n      paramsObject.impacting &&\n        !Array.isArray(paramsObject.impacting) &&\n        (paramsObject.impacting = [`${paramsObject.impacting}`]);\n      updateFilters({ ...filters, ...paramsObject });\n    }\n    setFilterBuilding(false);\n  }, []);\n\n  useEffect(() => {\n    if (!filterBuilding) {\n      updateSearchParams(filters, WORKLOADS_LIST_COLUMNS_KEYS);\n    }\n  }, [filters, filterBuilding]);\n\n  useEffect(() => {\n    setRows(buildDisplayedRows(filteredRows));\n    setRowsFiltered(true);\n    setFiltersApplied(filtersAreApplied(filters));\n  }, [filteredRows, filters.limit, filters.offset]);\n\n  const buildFilteredRows = (items) => {\n    setRowsFiltered(false);\n    const filtered = items\n      .filter((workloadData) => {\n        return passFilterWorkloads(workloadData, filters);\n      })\n      .sort((a, b) => {\n        let fst, snd;\n        const d = filters.sortDirection === 'asc' ? 1 : -1;\n        switch (filters.sortIndex) {\n          case WORKLOADS_TABLE_CELL_NAME:\n            fst = a.cluster?.display_name || a.cluster.uuid;\n            snd = b.cluster?.display_name || b.cluster.uuid;\n            return d * fst.localeCompare(snd);\n          case WORKLOADS_TABLE_CELL_RECOMMENDATIONS:\n            fst = a.metadata.recommendations || 0;\n            snd = b.metadata.recommendations || 0;\n            return fst > snd ? d : snd > fst ? -d : 0;\n          case WORKLOADS_TABLE_SEVERITY:\n            fst = a.metadata.hits_by_severity || { 1: 0, 2: 0, 3: 0, 4: 0 };\n            snd = b.metadata.hits_by_severity || { 1: 0, 2: 0, 3: 0, 4: 0 };\n            for (let i = 4; i > 0; i--) {\n              if (fst[i] > snd[i]) return d;\n              if (fst[i] < snd[i]) return -d;\n            }\n            return 0;\n          case WORKLOADS_TABLE_CELL_OBJECTS:\n            fst = a.metadata.objects || 0;\n            snd = b.metadata.objects || 0;\n            return fst > snd ? d : snd > fst ? -d : 0;\n          case WORKLOADS_TABLE_CELL_LAST_SEEN:\n            fst = new Date(a.metadata.last_checked_at || 0);\n            snd = new Date(b.metadata.last_checked_at || 0);\n            return fst > snd ? d : snd > fst ? -d : 0;\n        }\n      });\n\n    return filtered;\n  };\n\n  const buildDisplayedRows = (rows) => {\n    return rows\n      .slice(perPage * (page - 1), perPage * (page - 1) + perPage)\n      .map((item, index) => ({\n        entity: item,\n        cells: [\n          <span key={index}>\n            <Link\n              to={`${BASE_PATH}/workloads/${item.cluster.uuid}/${item.namespace.uuid}`}\n            >\n              <p key={`${index}-cluster`}>\n                {item.cluster.display_name || item.cluster.uuid}\n              </p>\n              <p key={`${index}-namespace`}>\n                {item.namespace.name || item.namespace.uuid}\n              </p>\n            </Link>\n          </span>,\n          item.metadata.recommendations,\n          <span key={index}>\n            <ShieldSet\n              hits_by_severity={item.metadata.hits_by_severity}\n              basePath={`${BASE_PATH}/workloads/${item.cluster.uuid}/${item.namespace.uuid}`}\n            />\n          </span>,\n          item.metadata.objects,\n          <span key={index}>\n            <DateFormat\n              extraTitle=\"Last seen: \"\n              date={item.metadata.last_checked_at}\n              variant=\"relative\"\n            />\n          </span>,\n        ],\n      }));\n  };\n\n  const filterConfigItems = [\n    {\n      label: 'Cluster name',\n      type: 'text',\n      filterValues: {\n        key: 'cluster_name',\n        onChange: (_event, value) =>\n          updateFilters({ ...filters, offset: 0, cluster_name: value }),\n        value: filters.cluster_name,\n        placeholder: 'Filter by cluster name',\n      },\n    },\n    {\n      label: 'Namespace name',\n      type: 'text',\n      filterValues: {\n        key: 'namespace_name',\n        onChange: (_event, value) =>\n          updateFilters({ ...filters, offset: 0, namespace_name: value }),\n        value: filters.namespace_name,\n        placeholder: 'Filter by namespace name',\n      },\n    },\n    {\n      label: 'Severity',\n      type: conditionalFilterType.checkbox,\n      id: WORKLOADS_TABLE_FILTER_CATEGORIES.severity.urlParam,\n      value: `checkbox-${WORKLOADS_TABLE_FILTER_CATEGORIES.severity.urlParam}`,\n      filterValues: {\n        key: `${WORKLOADS_TABLE_FILTER_CATEGORIES.severity.urlParam}-filter`,\n        onChange: (_event, value) => addFilterParam('severity', value),\n        value: filters.severity,\n        items: WORKLOADS_TABLE_FILTER_CATEGORIES.severity.values,\n        placeholder: 'Filter by severity',\n      },\n    },\n  ];\n\n  const activeFiltersConfig = {\n    showDeleteButton: filtersApplied,\n    deleteTitle: 'Reset filters',\n    filters: buildFilterChips(filters, WORKLOADS_TABLE_FILTER_CATEGORIES),\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        if (isEqual(filters, WORKLOADS_TABLE_INITIAL_STATE)) {\n          refetch();\n        } else {\n          resetFilters(filters, WORKLOADS_TABLE_INITIAL_STATE, updateFilters);\n        }\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? updateFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  const onSetPage = (_e, pageNumber) => {\n    setRowsFiltered(false);\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    updateFilters({ ...filters, offset: newOffset });\n  };\n\n  const onSetPerPage = (_e, perPage) => {\n    if (perPage !== filters.limit) {\n      setRowsFiltered(false);\n      updateFilters({ ...filters, limit: perPage, offset: 0 });\n    }\n  };\n\n  const onSort = (_e, index, direction) => {\n    setRowsFiltered(false);\n    updateFilters({ ...filters, sortIndex: index, sortDirection: direction });\n  };\n\n  return isError && error.status === 404 ? (\n    <NoDVOInstalledOrDataCollected />\n  ) : isSuccess && workloads.length === 0 ? (\n    <NoDVOInstalledOrDataCollected />\n  ) : (\n    <div id=\"workloads-list-table\">\n      <PrimaryToolbar\n        pagination={{\n          itemCount: filteredRows.length,\n          page,\n          perPage,\n          onSetPage,\n          onPerPageSelect: onSetPerPage,\n          isCompact: true,\n          ouiaId: 'pager',\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={\n          isError ? { showDeleteButton: false } : activeFiltersConfig\n        }\n      />\n      <Table\n        aria-label=\"Table of workloads\"\n        ouiaId=\"workloads\"\n        ouiaSafe={!loadingState}\n        variant={TableVariant.compact}\n        cells={WORKLOADS_LIST_COLUMNS}\n        rows={\n          errorState || loadingState || noMatch ? (\n            [\n              {\n                fullWidth: true,\n                cells: [\n                  {\n                    props: {\n                      colSpan: WORKLOADS_LIST_COLUMNS.length + 1,\n                    },\n                    title: errorState ? (\n                      <ErrorState />\n                    ) : loadingState ? (\n                      <Loading />\n                    ) : (\n                      <NoMatchingWorkloads />\n                    ),\n                  },\n                ],\n              },\n            ]\n          ) : successState ? (\n            rows\n          ) : (\n            <ErrorState />\n          )\n        }\n        isStickyHeader\n        sortBy={{\n          index: filters.sortIndex,\n          direction: filters.sortDirection,\n        }}\n        onSort={onSort}\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n      <Pagination\n        ouiaId=\"pager\"\n        itemCount={filteredRows.length}\n        page={page}\n        perPage={perPage}\n        onSetPage={onSetPage}\n        onPerPageSelect={onSetPerPage}\n        onPageInput={onSetPage}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </div>\n  );\n};\n\nWorkloadsListTable.propTypes = {\n  query: PropTypes.object.isRequired,\n};\n\nexport { WorkloadsListTable };\n","import React from 'react';\nimport { useGetWorkloadsQuery } from '../../Services/SmartProxy';\nimport { WorkloadsListTable } from './WorkloadsListTable';\n\nconst WorkloadsListTableWrapper = () => {\n  const query = useGetWorkloadsQuery();\n  return <WorkloadsListTable query={query} />;\n};\n\nexport default WorkloadsListTableWrapper;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport PageHeader from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport messages from '../../Messages';\nimport WorkloadsListTable from '../WorkloadsListTable';\nimport { Title } from '@patternfly/react-core';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst WorkloadsList = () => {\n  const intl = useIntl();\n  const chrome = useChrome();\n\n  chrome.updateDocumentTitle(\n    intl.formatMessage(messages.documentTitle, {\n      subnav: 'Workloads',\n    })\n  );\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"ins-c-clusters-header\">\n        <Title headingLevel=\"h1\" ouiaId=\"page-header\">\n          Workloads\n        </Title>\n      </PageHeader>\n      <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n        <WorkloadsListTable />\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default WorkloadsList;\n"],"names":["Card","ouiaId","CardBody","ShieldSet","hits_by_severity","basePath","severitiesRemapped","className","map","severityOption","index","Tooltip","key","value","content","label","hasIcon","style","color","Link","to","indexNumber","iconColor","propTypes","critical","important","moderate","low","isRequired","linkTo","WorkloadsListTable","query","isError","error","isUninitialized","isFetching","isSuccess","data","refetch","dispatch","useDispatch","filters","useSelector","workloadsListState","workloads","perPage","limit","page","Math","floor","offset","rows","setRows","useState","filteredRows","setFilteredRows","rowsFiltered","setRowsFiltered","filtersApplied","setFiltersApplied","filterBuilding","setFilterBuilding","updateFilters","payload","loadingState","errorState","noMatch","length","successState","search","useLocation","useEffect","buildFilteredRows","namespace_name","cluster_name","severity","sortDirection","sortIndex","paramsObject","sort","sortObj","indexOf","name","direction","Number","impacting","Array","isArray","buildDisplayedRows","items","filter","workloadData","a","b","fst","snd","d","cluster","display_name","uuid","localeCompare","metadata","recommendations","i","objects","Date","last_checked_at","slice","item","entity","cells","namespace","DateFormat","extraTitle","date","variant","filterConfigItems","type","filterValues","onChange","_event","placeholder","conditionalFilterType","checkbox","id","urlParam","addFilterParam","values","activeFiltersConfig","showDeleteButton","deleteTitle","onDelete","itemsToRemove","isAll","newFilter","String","chips","param","onSetPage","_e","pageNumber","newOffset","onSetPerPage","status","PrimaryToolbar","pagination","itemCount","onPerPageSelect","isCompact","filterConfig","Table","ouiaSafe","compact","fullWidth","props","colSpan","title","Loading","isStickyHeader","sortBy","onSort","Pagination","onPageInput","widgetId","bottom","intl","useIntl","useChrome","updateDocumentTitle","formatMessage","documentTitle","subnav","PageHeader","Title","headingLevel"],"sourceRoot":""}