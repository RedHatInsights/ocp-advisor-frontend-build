{"version":3,"file":"js/427.f9a2167d1b99945fe21c.js","mappings":"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","sources":["webpack:///./src/Components/Common/Tables.js"],"sourcesContent":["import capitalize from 'lodash/capitalize';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { useEffect, useState } from 'react';\nimport { coerce, compare, valid } from 'semver';\nimport {\n  CLUSTER_FILTER_CATEGORIES,\n  FILTER_CATEGORIES,\n  RULE_CATEGORIES,\n} from '../../AppConstants';\n\nexport const passFilters = (rule, filters) =>\n  Object.entries(filters).every(([filterKey, filterValue]) => {\n    switch (filterKey) {\n      case 'text':\n        return rule.description\n          .toLowerCase()\n          .includes(filterValue.toLowerCase());\n      case FILTER_CATEGORIES.total_risk.urlParam:\n        return filterValue.includes(String(rule.total_risk));\n      case FILTER_CATEGORIES.category.urlParam:\n        return rule.tags.find((c) =>\n          filterValue.includes(String(RULE_CATEGORIES[c]))\n        );\n      case FILTER_CATEGORIES.impact.urlParam:\n        return filterValue.includes(String(rule.impact));\n      case FILTER_CATEGORIES.impacting.urlParam:\n        return filterValue.length > 0\n          ? filterValue.some((v) => {\n              if (v === 'true') {\n                return rule.impacted_clusters_count > 0;\n              }\n              if (v === 'false') {\n                return rule.impacted_clusters_count === 0;\n              }\n            })\n          : true;\n      case FILTER_CATEGORIES.likelihood.urlParam:\n        return filterValue.includes(String(rule.likelihood));\n      case FILTER_CATEGORIES.rule_status.urlParam:\n        return (\n          filterValue === 'all' ||\n          (filterValue === 'disabled' && rule.disabled) ||\n          (filterValue === 'enabled' && !rule.disabled)\n        );\n      case FILTER_CATEGORIES.res_risk.urlParam:\n        return filterValue.includes(String(rule.resolution_risk));\n      default:\n        return true;\n    }\n  });\n\nexport const passFiltersCluster = (cluster, filters) =>\n  Object.entries(filters).every(([filterKey, filterValue]) => {\n    switch (filterKey) {\n      case 'text':\n        return (cluster.cluster_name || cluster.cluster_id)\n          .toLowerCase()\n          .includes(filterValue.toLowerCase());\n      case CLUSTER_FILTER_CATEGORIES.hits.urlParam:\n        return (\n          // clusters with at least one rule hit\n          (filterValue.length === 0 && parseInt(cluster.total_hit_count) > 0) ||\n          // all clusters\n          filterValue.includes('all') ||\n          // clusters with at least one rule hit for any of the active risk filters\n          filterValue.some((v) => cluster.hits_by_total_risk[v] > 0)\n        );\n      case 'version':\n        return (\n          filterValue.length === 0 ||\n          filterValue.includes(toValidSemVer(cluster.cluster_version))\n        );\n      default:\n        return true;\n    }\n  });\n\nconst pruneFilters = (localFilters, filterCategories) => {\n  const prunedFilters = Object.entries(localFilters || {});\n  return prunedFilters.reduce((arr, it) => {\n    const [key, item] = it;\n    if (filterCategories[key]) {\n      const category = filterCategories[key];\n      const chips = Array.isArray(item)\n        ? item.map((value) => {\n            const selectedCategoryValue = category.values.find(\n              (values) => values.value === String(value)\n            );\n            return selectedCategoryValue\n              ? {\n                  name:\n                    selectedCategoryValue.text || selectedCategoryValue.label,\n                  value,\n                }\n              : { name: value, value };\n          })\n        : [\n            {\n              name: category.values.find(\n                (values) => values.value === String(item)\n              ).label,\n              value: item,\n            },\n          ];\n      return [\n        ...arr,\n        {\n          category: capitalize(category.title),\n          chips,\n          urlParam: category.urlParam,\n        },\n      ];\n    } else if (key === 'text') {\n      return [\n        ...arr,\n        ...(item.length > 0\n          ? [\n              {\n                category: 'Name',\n                chips: [{ name: item, value: item }],\n                urlParam: key,\n              },\n            ]\n          : []),\n      ];\n    } else if (key === 'version') {\n      return [\n        ...arr,\n        ...(item.length > 0\n          ? [\n              {\n                category: 'Version',\n                chips: item.map((it) => ({\n                  name: it,\n                  value: it,\n                })),\n                urlParam: key,\n              },\n            ]\n          : []),\n      ];\n    }\n  }, []);\n};\n\nexport const buildFilterChips = (filters, categories) => {\n  const localFilters = cloneDeep(filters);\n  delete localFilters.sortIndex;\n  delete localFilters.sortDirection;\n  delete localFilters.sort;\n  delete localFilters.offset;\n  delete localFilters.limit;\n  localFilters?.hits &&\n    localFilters.hits.length === 0 &&\n    delete localFilters.hits;\n  return pruneFilters(localFilters, categories);\n};\n\n// parses url params for use in table/filter chips\nexport const paramParser = (search) => {\n  const searchParams = new URLSearchParams(search);\n  return Array.from(searchParams).reduce(\n    (acc, [key, value]) => ({\n      ...acc,\n      [key]: ['text', 'first', 'rule_status', 'sort'].includes(key)\n        ? value // just copy the full value\n        : value === 'true' || value === 'false'\n        ? JSON.parse(value) // parse boolean\n        : // parse array of values\n          value.split(','),\n    }),\n    {}\n  );\n};\n\nexport const translateSortParams = (value) => ({\n  name: value.substring(value.startsWith('-') ? 1 : 0),\n  direction: value.startsWith('-') ? 'desc' : 'asc',\n});\n\nexport const translateSortValue = (index, indexMapping, direction) => {\n  if (!['desc', 'asc'].includes(direction)) {\n    console.error('Invalid sort parameters (is not asc nor desc)');\n  }\n  return `${direction === 'asc' ? '' : '-'}${indexMapping[index]}`;\n};\n\n// TODO: remove since unused\nexport const debounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [delay, value]);\n\n  return debouncedValue;\n};\n\nexport const updateSearchParams = (filters = {}, columnMapping) => {\n  const url = new URL(window.location.origin + window.location.pathname);\n  // separately check the sort param\n  url.searchParams.set(\n    'sort',\n    translateSortValue(filters.sortIndex, columnMapping, filters.sortDirection)\n  );\n  // check the rest of filters\n  Object.entries(filters).forEach(([key, value]) => {\n    return (\n      key !== 'sortIndex' &&\n      key !== 'sortDirection' &&\n      key !== 'sort' &&\n      value !== '' &&\n      !(Array.isArray(value) && value.length === 0) &&\n      url.searchParams.set(key, value)\n    );\n  });\n  window.history.replaceState(null, null, url.href);\n};\n\n// TODO: move to Utils.js\nexport const compareSemVer = (v1, v2, d) => d * compare(v1, v2);\nexport const toValidSemVer = (version) =>\n  coerce(version === undefined || !valid(coerce(version)) ? '0.0.0' : version)\n    .version;\n\nexport const removeFilterParam = (currentFilters, updateFilters, param) => {\n  const { [param]: omitted, ...newFilters } = { ...currentFilters, offset: 0 };\n  updateFilters({\n    ...newFilters,\n    ...(param === 'text'\n      ? { text: '' }\n      : param === 'hits'\n      ? { hits: [] }\n      : param === 'version'\n      ? { version: [] }\n      : {}),\n  });\n};\n\nexport const addFilterParam = (currentFilters, updateFilters, param, values) =>\n  values.length > 0\n    ? updateFilters({\n        ...currentFilters,\n        offset: 0,\n        ...{ [param]: values },\n      })\n    : removeFilterParam(currentFilters, updateFilters, param);\n"],"names":["passFilters","rule","filters","Object","entries","every","filterKey","filterValue","description","toLowerCase","includes","FILTER_CATEGORIES","total_risk","urlParam","String","category","tags","find","c","f","RULE_CATEGORIES","impact","impacting","length","some","v","impacted_clusters_count","likelihood","rule_status","disabled","res_risk","resolution_risk","passFiltersCluster","cluster","cluster_name","cluster_id","CLUSTER_FILTER_CATEGORIES","hits","parseInt","total_hit_count","hits_by_total_risk","toValidSemVer","cluster_version","buildFilterChips","categories","localFilters","cloneDeep","sortIndex","sortDirection","sort","offset","limit","filterCategories","prunedFilters","reduce","arr","it","key","item","chips","Array","isArray","map","value","selectedCategoryValue","values","name","text","label","capitalize","title","pruneFilters","paramParser","search","searchParams","URLSearchParams","from","acc","JSON","parse","split","translateSortParams","substring","startsWith","direction","updateSearchParams","columnMapping","index","indexMapping","url","URL","window","location","origin","pathname","set","console","error","forEach","history","replaceState","href","compareSemVer","v1","v2","d","compare","version","coerce","undefined","valid","removeFilterParam","currentFilters","updateFilters","param","newFilters","addFilterParam"],"sourceRoot":""}