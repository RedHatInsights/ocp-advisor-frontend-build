{"version":3,"file":"js/392.68f9d8cdc20bedd358ed.js","mappings":"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","sources":["webpack:///./src/Components/Modals/DisableRule.js","webpack:///./src/Components/Recommendation/RuleDetails.js","webpack:///./src/Utilities/Api.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  TextInput,\n} from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport messages from '../../Messages';\nimport { useSetAckMutation } from '../../Services/Acks';\n\nconst DisableRule = ({ isModalOpen, handleModalToggle, rule, afterFn }) => {\n  const intl = useIntl();\n  const [justification, setJustificaton] = useState('');\n  const [setAck] = useSetAckMutation();\n  const dispatch = useDispatch();\n  const notification = (data) => dispatch(addNotification(data));\n\n  const disableRule = async () => {\n    const options = {\n      rule_id: rule.rule_id,\n      justification,\n    };\n    try {\n      await setAck(options).unwrap();\n      notification({\n        variant: 'success',\n        timeout: true,\n        dismissable: true,\n        title: intl.formatMessage(messages.recSuccessfullyDisabled),\n      });\n      setJustificaton('');\n      afterFn && afterFn();\n    } catch (error) {\n      notification({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: `${error}`,\n      });\n    }\n    handleModalToggle(false);\n  };\n  return (\n    <Modal\n      variant=\"small\"\n      title={intl.formatMessage(messages.disableRule)}\n      isOpen={isModalOpen}\n      onClose={() => {\n        handleModalToggle();\n        setJustificaton('');\n      }}\n      actions={[\n        <Button\n          key=\"confirm\"\n          variant=\"primary\"\n          onClick={() => disableRule()}\n          ouiaId=\"confirm\"\n        >\n          {intl.formatMessage(messages.save)}\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={() => {\n            handleModalToggle(false);\n            setJustificaton('');\n          }}\n          ouiaId=\"cancel\"\n        >\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      {intl.formatMessage(messages.disableRuleBody)}\n      <Form>\n        <FormGroup fieldId=\"blank-form\" />\n        <FormGroup\n          label={intl.formatMessage(messages.justificationNote)}\n          fieldId=\"disable-rule-justification\"\n        >\n          <TextInput\n            type=\"text\"\n            id=\"disable-rule-justification\"\n            aria-describedby=\"disable-rule-justification\"\n            value={justification}\n            onChange={(text) => setJustificaton(text)}\n            onKeyDown={(e) =>\n              e.key === 'Enter' && (e.preventDefault(), disableRule())\n            }\n          />\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n\nDisableRule.propTypes = {\n  isModalOpen: PropTypes.bool,\n  rule: PropTypes.object,\n  handleModalToggle: PropTypes.func,\n  afterFn: PropTypes.func,\n};\n\nDisableRule.defaultProps = {\n  isModalOpen: false,\n  rule: {},\n  handleModalToggle: () => undefined,\n  afterFn: () => undefined,\n};\n\nexport default DisableRule;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nimport Loading from '../Loading/Loading';\n\nconst RuleDetails = ({\n  rule,\n  header,\n  isDetailsPage,\n  resolutionRisk,\n  riskOfChangeDesc,\n  onFeedbackChanged,\n  children,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"advisor\">\n      <AsyncComponent\n        appName=\"advisor\"\n        module=\"./AdvisorRecommendationDetails\"\n        fallback={<Loading />}\n        rule={rule}\n        customItnl\n        intlProps={intl}\n        isDetailsPage={isDetailsPage}\n        header={header}\n        resolutionRisk={resolutionRisk}\n        isOpenShift\n        riskOfChangeDesc={riskOfChangeDesc}\n        onFeedbackChanged={onFeedbackChanged}\n      >\n        {children}\n      </AsyncComponent>\n    </div>\n  );\n};\n\nRuleDetails.propTypes = {\n  header: PropTypes.any,\n  isDetailsPage: PropTypes.bool.isRequired,\n  rule: PropTypes.object.isRequired,\n  resolutionRisk: PropTypes.number,\n  riskOfChangeDesc: PropTypes.string,\n  onFeedbackChanged: PropTypes.func,\n  children: PropTypes.node,\n};\n\nexport default RuleDetails;\n","import axios from 'axios';\n\nconst Post = (url, headers = {}, data = {}) =>\n  axios.post(url, data, { headers });\n\nconst Delete = (url, data = {}, headers = {}) => {\n  return axios.delete(url, data, {\n    headers,\n  });\n};\n\nexport { Post, Delete };\n"],"names":["DisableRule","isModalOpen","handleModalToggle","rule","afterFn","intl","useIntl","useState","justification","setJustificaton","useSetAckMutation","setAck","dispatch","useDispatch","notification","data","addNotification","disableRule","options","rule_id","unwrap","variant","timeout","dismissable","title","formatMessage","messages","description","Modal","isOpen","onClose","actions","Button","key","onClick","ouiaId","Form","FormGroup","fieldId","label","TextInput","type","id","value","onChange","text","onKeyDown","e","preventDefault","propTypes","PropTypes","defaultProps","RuleDetails","header","isDetailsPage","resolutionRisk","riskOfChangeDesc","onFeedbackChanged","children","className","appName","module","fallback","customItnl","intlProps","isOpenShift","Post","url","headers","axios","Delete"],"sourceRoot":""}