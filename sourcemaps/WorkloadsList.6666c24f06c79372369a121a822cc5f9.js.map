{"version":3,"file":"js/WorkloadsList.909ac3a074ad9946b52a.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/security-icon.js","webpack:///./src/Components/Loading/Loading.js","webpack:///./src/Components/ShieldSet.js","webpack:///./src/Components/WorkloadsListTable/WorkloadsListTable.js","webpack:///./src/Components/WorkloadsListTable/index.js","webpack:///./src/Components/WorkloadsList/index.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.SecurityIconConfig = {\n  name: 'SecurityIcon',\n  height: 1024,\n  width: 896,\n  svgPath: 'M861.5,0 L34.5,0 C15.4,0 0,14.3 0,32 L0,452.1 C0,768 387.7,1024 448.5,1024 C509.3,1024 896,768 896,452.2 L896,32 C896,14.3 880.6,0 861.5,0 Z M490.7,768 L405.3,768 C393.5,767.8 384.2,757.5 384,744.7 L384,663.3 C384.2,650.5 393.6,640.3 405.3,640 L490.7,640 C502.5,640.2 511.8,650.5 512,663.3 L512,744.7 L512.1,744.7 C511.8,757.5 502.4,767.8 490.7,768 Z M543.9,162.7 L517.2,514.4 C515.8,530.9 502,544 485.3,544 L410.6,544 C394,544 380.1,531.2 378.7,514.7 L352.1,163 C350.5,144.3 365.3,128.3 384,128.3 L512,128 C530.7,128 545.4,144 543.9,162.7 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.SecurityIcon = require('../createIcon').createIcon(exports.SecurityIconConfig);\nexports[\"default\"] = exports.SecurityIcon;","import React from 'react';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { List } from 'react-content-loader';\n\nconst Loading = () => (\n  <Card ouiaId=\"loading-skeleton\">\n    <CardBody>\n      <List />\n    </CardBody>\n  </Card>\n);\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SecurityIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { Tooltip } from '@patternfly/react-core';\nimport { SEVERITY_OPTIONS, remappingSeverity } from '../Utilities/Workloads';\n\nconst ShieldSet = ({ hits_by_severity, basePath }) => {\n  const DISABLED_COLOR = 'var(--pf-global--disabled-color--200)';\n  const severitiesRemapped = remappingSeverity(hits_by_severity, 'label');\n  return (\n    <div className=\"shield-set\">\n      {SEVERITY_OPTIONS.map((severityOption, index) => (\n        <Tooltip\n          key={severityOption.value}\n          content={`${severityOption.label} severity`}\n        >\n          {severityOption.hasIcon &&\n            (severitiesRemapped[severityOption.value] === 0 ? (\n              <a className=\"disabled-shield nowrap\">\n                <SecurityIcon style={{ color: DISABLED_COLOR }} />\n                <span>0</span>\n              </a>\n            ) : (\n              <Link\n                key={severityOption.value}\n                to={`${basePath}?total_risk=${SEVERITY_OPTIONS[index].indexNumber}`}\n                className=\"nowrap\"\n              >\n                <SecurityIcon style={{ color: severityOption.iconColor }} />\n                <span>{severitiesRemapped[severityOption.value]}</span>\n              </Link>\n            ))}\n        </Tooltip>\n      ))}\n    </div>\n  );\n};\n\nShieldSet.propTypes = {\n  hits_by_severity: PropTypes.shape({\n    critical: PropTypes.number,\n    important: PropTypes.number,\n    moderate: PropTypes.number,\n    low: PropTypes.number,\n  }).isRequired,\n  linkTo: PropTypes.string,\n  basePath: PropTypes.string,\n};\n\nexport default ShieldSet;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { TableVariant } from '@patternfly/react-table';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n} from '@patternfly/react-table/deprecated';\nimport { PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport {\n  WORKLOADS_LIST_COLUMNS,\n  WORKLOADS_LIST_COLUMNS_KEYS,\n  WORKLOADS_TABLE_CELL_LAST_SEEN,\n  WORKLOADS_TABLE_CELL_NAME,\n  WORKLOADS_TABLE_CELL_OBJECTS,\n  WORKLOADS_TABLE_CELL_RECOMMENDATIONS,\n  WORKLOADS_TABLE_FILTER_CATEGORIES,\n  WORKLOADS_TABLE_SEVERITY,\n} from '../../AppConstants';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Link, useLocation } from 'react-router-dom';\nimport { BASE_PATH } from '../../Routes';\nimport { Pagination } from '@patternfly/react-core';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter/conditionalFilterConstants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  WORKLOADS_TABLE_INITIAL_STATE,\n  resetFilters,\n  updateWorkloadsListFilters,\n} from '../../Services/Filters';\nimport isEqual from 'lodash/isEqual';\nimport {\n  buildFilterChips,\n  passFilterWorkloads,\n  removeFilterParam as _removeFilterParam,\n  addFilterParam as _addFilterParam,\n  translateSortParams,\n  paramParser,\n  updateSearchParams,\n} from '../Common/Tables';\nimport {\n  ErrorState,\n  NoMatchingWorkloads,\n  NoRecsForWorkloads,\n  NoWorkloadsAvailable,\n} from '../MessageState/EmptyStates';\nimport Loading from '../Loading/Loading';\nimport ShieldSet from '../ShieldSet';\nimport { filtersAreApplied } from '../../Utilities/Workloads';\n\nconst WorkloadsListTable = ({\n  query: {\n    isError,\n    error,\n    isUninitialized,\n    isFetching,\n    isSuccess,\n    data,\n    refetch,\n  },\n}) => {\n  const dispatch = useDispatch();\n  const filters = useSelector(({ filters }) => filters.workloadsListState);\n  const workloads = data?.workloads || [];\n  const perPage = filters.limit;\n  const page = Math.floor(filters.offset / filters.limit) + 1;\n\n  const [rows, setRows] = useState([]);\n  const [filteredRows, setFilteredRows] = useState([]);\n  const [rowsFiltered, setRowsFiltered] = useState(false);\n  const [filtersApplied, setFiltersApplied] = useState(false);\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const updateFilters = (payload) =>\n    dispatch(updateWorkloadsListFilters(payload));\n  const removeFilterParam = (param) =>\n    _removeFilterParam(filters, updateFilters, param);\n\n  const loadingState = isUninitialized || isFetching || !rowsFiltered;\n  const errorState = isError;\n  const noMatch = filteredRows.length === 0;\n  const successState = isSuccess;\n  const { search } = useLocation();\n\n  const addFilterParam = (param, values) =>\n    _addFilterParam(filters, updateFilters, param, values);\n\n  useEffect(() => {\n    setFilteredRows(buildFilteredRows(workloads));\n  }, [\n    data,\n    filters.namespace_name,\n    filters.cluster_name,\n    filters.severity,\n    filters.sortDirection,\n    filters.sortIndex,\n  ]);\n\n  useEffect(() => {\n    if (search && filterBuilding) {\n      const paramsObject = paramParser(search);\n\n      if (paramsObject.sort) {\n        const sortObj = translateSortParams(paramsObject.sort);\n        paramsObject.sortIndex = WORKLOADS_LIST_COLUMNS_KEYS.indexOf(\n          sortObj.name\n        );\n        paramsObject.sortDirection = sortObj.direction;\n      }\n      paramsObject.offset &&\n        (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit &&\n        (paramsObject.limit = Number(paramsObject.limit[0]));\n      paramsObject.impacting &&\n        !Array.isArray(paramsObject.impacting) &&\n        (paramsObject.impacting = [`${paramsObject.impacting}`]);\n      updateFilters({ ...filters, ...paramsObject });\n    }\n    setFilterBuilding(false);\n  }, []);\n\n  useEffect(() => {\n    if (!filterBuilding) {\n      updateSearchParams(filters, WORKLOADS_LIST_COLUMNS_KEYS);\n    }\n  }, [filters, filterBuilding]);\n\n  useEffect(() => {\n    setRows(buildDisplayedRows(filteredRows));\n    setRowsFiltered(true);\n    setFiltersApplied(filtersAreApplied(filters));\n  }, [filteredRows, filters.limit, filters.offset]);\n\n  const buildFilteredRows = (items) => {\n    setRowsFiltered(false);\n    const filtered = items\n      .filter((workloadData) => {\n        return passFilterWorkloads(workloadData, filters);\n      })\n      .sort((a, b) => {\n        let fst, snd;\n        const d = filters.sortDirection === 'asc' ? 1 : -1;\n        switch (filters.sortIndex) {\n          case WORKLOADS_TABLE_CELL_NAME:\n            fst = a.cluster?.display_name || a.cluster.uuid;\n            snd = b.cluster?.display_name || b.cluster.uuid;\n            return d * fst.localeCompare(snd);\n          case WORKLOADS_TABLE_CELL_RECOMMENDATIONS:\n            fst = a.metadata.recommendations || 0;\n            snd = b.metadata.recommendations || 0;\n            return fst > snd ? d : snd > fst ? -d : 0;\n          case WORKLOADS_TABLE_SEVERITY:\n            fst = a.metadata.hits_by_severity || { 1: 0, 2: 0, 3: 0, 4: 0 };\n            snd = b.metadata.hits_by_severity || { 1: 0, 2: 0, 3: 0, 4: 0 };\n            for (let i = 4; i > 0; i--) {\n              if (fst[i] > snd[i]) return d;\n              if (fst[i] < snd[i]) return -d;\n            }\n            return 0;\n          case WORKLOADS_TABLE_CELL_OBJECTS:\n            fst = a.metadata.objects || 0;\n            snd = b.metadata.objects || 0;\n            return fst > snd ? d : snd > fst ? -d : 0;\n          case WORKLOADS_TABLE_CELL_LAST_SEEN:\n            fst = new Date(a.metadata.last_checked_at || 0);\n            snd = new Date(b.metadata.last_checked_at || 0);\n            return fst > snd ? d : snd > fst ? -d : 0;\n        }\n      });\n\n    return filtered;\n  };\n\n  const buildDisplayedRows = (rows) => {\n    return rows\n      .slice(perPage * (page - 1), perPage * (page - 1) + perPage)\n      .map((item, index) => ({\n        entity: item,\n        cells: [\n          <span key={index}>\n            <Link\n              to={`${BASE_PATH}/workloads/${item.cluster.uuid}/${item.namespace.uuid}`}\n            >\n              <p key={`${index}-cluster`}>\n                {item.cluster.display_name || item.cluster.uuid}\n              </p>\n              <p key={`${index}-namespace`}>\n                {item.namespace.name || item.namespace.uuid}\n              </p>\n            </Link>\n          </span>,\n          item.metadata.recommendations,\n          <span key={index}>\n            <ShieldSet\n              hits_by_severity={item.metadata.hits_by_severity}\n              basePath={`${BASE_PATH}/workloads/${item.cluster.uuid}/${item.namespace.uuid}`}\n            />\n          </span>,\n          item.metadata.objects,\n          <span key={index}>\n            <DateFormat\n              extraTitle=\"Last seen: \"\n              date={item.metadata.last_checked_at}\n              variant=\"relative\"\n            />\n          </span>,\n        ],\n      }));\n  };\n\n  const filterConfigItems = [\n    {\n      label: 'Cluster name',\n      type: 'text',\n      filterValues: {\n        key: 'cluster_name',\n        onChange: (_event, value) =>\n          updateFilters({ ...filters, offset: 0, cluster_name: value }),\n        value: filters.cluster_name,\n        placeholder: 'Filter by cluster name',\n      },\n    },\n    {\n      label: 'Namespace name',\n      type: 'text',\n      filterValues: {\n        key: 'namespace_name',\n        onChange: (_event, value) =>\n          updateFilters({ ...filters, offset: 0, namespace_name: value }),\n        value: filters.namespace_name,\n        placeholder: 'Filter by namespace name',\n      },\n    },\n    {\n      label: 'Severity',\n      type: conditionalFilterType.checkbox,\n      id: WORKLOADS_TABLE_FILTER_CATEGORIES.severity.urlParam,\n      value: `checkbox-${WORKLOADS_TABLE_FILTER_CATEGORIES.severity.urlParam}`,\n      filterValues: {\n        key: `${WORKLOADS_TABLE_FILTER_CATEGORIES.severity.urlParam}-filter`,\n        onChange: (_event, value) => addFilterParam('severity', value),\n        value: filters.severity,\n        items: WORKLOADS_TABLE_FILTER_CATEGORIES.severity.values,\n        placeholder: 'Filter by severity',\n      },\n    },\n  ];\n\n  const activeFiltersConfig = {\n    showDeleteButton: filtersApplied,\n    deleteTitle: 'Reset filters',\n    filters: buildFilterChips(filters, WORKLOADS_TABLE_FILTER_CATEGORIES),\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        if (isEqual(filters, WORKLOADS_TABLE_INITIAL_STATE)) {\n          refetch();\n        } else {\n          resetFilters(filters, WORKLOADS_TABLE_INITIAL_STATE, updateFilters);\n        }\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? updateFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  const onSetPage = (_e, pageNumber) => {\n    setRowsFiltered(false);\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    updateFilters({ ...filters, offset: newOffset });\n  };\n\n  const onSetPerPage = (_e, perPage) => {\n    if (perPage !== filters.limit) {\n      setRowsFiltered(false);\n      updateFilters({ ...filters, limit: perPage, offset: 0 });\n    }\n  };\n\n  const onSort = (_e, index, direction) => {\n    setRowsFiltered(false);\n    updateFilters({ ...filters, sortIndex: index, sortDirection: direction });\n  };\n\n  return isError && error.status === 404 ? (\n    <NoWorkloadsAvailable />\n  ) : isSuccess && workloads.length === 0 ? (\n    <NoRecsForWorkloads />\n  ) : (\n    <div id=\"workloads-list-table\">\n      <PrimaryToolbar\n        pagination={{\n          itemCount: filteredRows.length,\n          page,\n          perPage,\n          onSetPage,\n          onPerPageSelect: onSetPerPage,\n          isCompact: true,\n          ouiaId: 'pager',\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={\n          isError ? { showDeleteButton: false } : activeFiltersConfig\n        }\n      />\n      <Table\n        aria-label=\"Table of workloads\"\n        ouiaId=\"workloads\"\n        variant={TableVariant.compact}\n        cells={WORKLOADS_LIST_COLUMNS}\n        rows={\n          errorState || loadingState || noMatch ? (\n            [\n              {\n                fullWidth: true,\n                cells: [\n                  {\n                    props: {\n                      colSpan: WORKLOADS_LIST_COLUMNS.length + 1,\n                    },\n                    title: errorState ? (\n                      <ErrorState />\n                    ) : loadingState ? (\n                      <Loading />\n                    ) : (\n                      <NoMatchingWorkloads />\n                    ),\n                  },\n                ],\n              },\n            ]\n          ) : successState ? (\n            rows\n          ) : (\n            <ErrorState />\n          )\n        }\n        isStickyHeader\n        sortBy={{\n          index: filters.sortIndex,\n          direction: filters.sortDirection,\n        }}\n        onSort={onSort}\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n      <Pagination\n        ouiaId=\"pager\"\n        itemCount={filteredRows.length}\n        page={page}\n        perPage={perPage}\n        onSetPage={onSetPage}\n        onPerPageSelect={onSetPerPage}\n        onPageInput={onSetPage}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </div>\n  );\n};\n\nWorkloadsListTable.propTypes = {\n  query: PropTypes.object.isRequired,\n};\n\nexport { WorkloadsListTable };\n","import React from 'react';\n// import { useGetWorkloadsQuery } from '../../Services/SmartProxy';\nimport { WorkloadsListTable } from './WorkloadsListTable';\nimport mockdata from '../../../cypress/fixtures/api/insights-results-aggregator/v2/workloads.json';\n\nconst WorkloadsListTableWrapper = () => {\n  // const query = useGetWorkloadsQuery();\n  // For more diverse use mockdata\n  // Comment out the query above\n  // Uncomment the query below\n  // Uncomment the mockdata import above\n  const query = {\n    isError: false,\n    isFetching: false,\n    isUninitialized: false,\n    isSuccess: true,\n    data: { workloads: mockdata },\n    refetch: () => null,\n  };\n\n  return <WorkloadsListTable query={query} />;\n};\n\nexport default WorkloadsListTableWrapper;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport PageHeader from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport messages from '../../Messages';\nimport WorkloadsListTable from '../WorkloadsListTable';\nimport { Title } from '@patternfly/react-core';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst WorkloadsList = () => {\n  const intl = useIntl();\n  const chrome = useChrome();\n\n  chrome.updateDocumentTitle(\n    intl.formatMessage(messages.documentTitle, {\n      subnav: 'Workloads',\n    })\n  );\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"ins-c-clusters-header\">\n        <Title headingLevel=\"h1\" ouiaId=\"page-header\">\n          Workloads\n        </Title>\n      </PageHeader>\n      <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n        <WorkloadsListTable />\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default WorkloadsList;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","React","Card","ouiaId","CardBody","List","ShieldSet","_ref","hits_by_severity","basePath","severitiesRemapped","remappingSeverity","className","SEVERITY_OPTIONS","map","severityOption","index","Tooltip","key","value","content","concat","label","hasIcon","SecurityIcon","style","color","Link","to","indexNumber","iconColor","propTypes","PropTypes","critical","important","moderate","low","isRequired","linkTo","WorkloadsListTable","_ref$query","query","isError","error","isUninitialized","isFetching","isSuccess","data","refetch","dispatch","useDispatch","filters","useSelector","_ref2","workloadsListState","workloads","perPage","limit","page","Math","floor","offset","_useState","useState","_useState2","_slicedToArray","rows","setRows","_useState3","_useState4","filteredRows","setFilteredRows","_useState5","_useState6","rowsFiltered","setRowsFiltered","_useState7","_useState8","filtersApplied","setFiltersApplied","_useState9","_useState10","filterBuilding","setFilterBuilding","updateFilters","payload","updateWorkloadsListFilters","loadingState","errorState","noMatch","length","successState","search","useLocation","useEffect","buildFilteredRows","namespace_name","cluster_name","severity","sortDirection","sortIndex","paramsObject","paramParser","sort","sortObj","translateSortParams","WORKLOADS_LIST_COLUMNS_KEYS","indexOf","direction","Number","impacting","Array","isArray","_objectSpread","updateSearchParams","buildDisplayedRows","filtersAreApplied","items","filter","workloadData","passFilterWorkloads","a","b","_a$cluster","_b$cluster","fst","snd","d","WORKLOADS_TABLE_CELL_NAME","cluster","display_name","uuid","localeCompare","WORKLOADS_TABLE_CELL_RECOMMENDATIONS","metadata","recommendations","WORKLOADS_TABLE_SEVERITY","i","WORKLOADS_TABLE_CELL_OBJECTS","objects","WORKLOADS_TABLE_CELL_LAST_SEEN","Date","last_checked_at","slice","item","entity","cells","BASE_PATH","namespace","DateFormat","extraTitle","date","variant","filterConfigItems","type","filterValues","onChange","_event","placeholder","conditionalFilterType","checkbox","id","WORKLOADS_TABLE_FILTER_CATEGORIES","urlParam","values","_addFilterParam","activeFiltersConfig","showDeleteButton","deleteTitle","buildFilterChips","onDelete","itemsToRemove","isAll","isEqual","WORKLOADS_TABLE_INITIAL_STATE","resetFilters","param","newFilter","_defineProperty","String","chips","_removeFilterParam","onSetPage","_e","pageNumber","newOffset","onSetPerPage","status","NoWorkloadsAvailable","NoRecsForWorkloads","PrimaryToolbar","pagination","itemCount","onPerPageSelect","isCompact","filterConfig","Table","TableVariant","compact","WORKLOADS_LIST_COLUMNS","fullWidth","props","colSpan","title","ErrorState","Loading","NoMatchingWorkloads","isStickyHeader","sortBy","onSort","TableHeader","TableBody","Pagination","onPageInput","widgetId","PaginationVariant","bottom","mockdata","intl","useIntl","useChrome","updateDocumentTitle","formatMessage","messages","documentTitle","subnav","PageHeader","Title","headingLevel"],"sourceRoot":""}