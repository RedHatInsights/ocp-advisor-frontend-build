{"version":3,"file":"js/Recommendation.46a2956fcf3725058662.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardActions.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardExpandableContent.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardFooter.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardHeader.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardHeaderMain.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardTitle.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/index.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/bell-slash-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/outlined-bell-icon.js","webpack:///./src/Components/Breadcrumbs/index.js","webpack:///./src/Components/Loading/Loading.js","webpack:///./src/Components/AffectedClustersTable/AffectedClustersTable.js","webpack:///./src/Components/Modals/ViewHostAcks.js","webpack:///./src/Components/Recommendation/Recommendation.js","webpack:///./src/Components/Recommendation/index.js","webpack:///./src/Utilities/Loaders.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardActions = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst CardActions = (_a) => {\n    var { children = null, className = '', hasNoOffset = false } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"hasNoOffset\"]);\n    return (React.createElement(\"div\", Object.assign({ className: (0, react_styles_1.css)(card_1.default.cardActions, hasNoOffset && card_1.default.modifiers.noOffset, className) }, props), children));\n};\nexports.CardActions = CardActions;\nexports.CardActions.displayName = 'CardActions';\n//# sourceMappingURL=CardActions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardExpandableContent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst Card_1 = require(\"./Card\");\nconst CardExpandableContent = (_a) => {\n    var { children = null, className = '' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(Card_1.CardContext.Consumer, null, ({ isExpanded }) => isExpanded ? (React.createElement(\"div\", Object.assign({ className: (0, react_styles_1.css)(card_1.default.cardExpandableContent, className) }, props), children)) : null));\n};\nexports.CardExpandableContent = CardExpandableContent;\nexports.CardExpandableContent.displayName = 'CardExpandableContent';\n//# sourceMappingURL=CardExpandableContent.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardFooter = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: (0, react_styles_1.css)(card_1.default.cardFooter, className) }, props), children));\n};\nexports.CardFooter = CardFooter;\nexports.CardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardHeader = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst Card_1 = require(\"./Card\");\nconst Button_1 = require(\"../Button\");\nconst angle_right_icon_1 = tslib_1.__importDefault(require('@patternfly/react-icons/dist/js/icons/angle-right-icon'));\nconst CardHeader = (_a) => {\n    var { children = null, className = '', id, onExpand, toggleButtonProps, isToggleRightAligned } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"id\", \"onExpand\", \"toggleButtonProps\", \"isToggleRightAligned\"]);\n    return (React.createElement(Card_1.CardContext.Consumer, null, ({ cardId }) => {\n        const cardHeaderToggle = (React.createElement(\"div\", { className: (0, react_styles_1.css)(card_1.default.cardHeaderToggle) },\n            React.createElement(Button_1.Button, Object.assign({ variant: \"plain\", type: \"button\", onClick: evt => {\n                    onExpand(evt, cardId);\n                } }, toggleButtonProps),\n                React.createElement(\"span\", { className: (0, react_styles_1.css)(card_1.default.cardHeaderToggleIcon) },\n                    React.createElement(angle_right_icon_1.default, { \"aria-hidden\": \"true\" })))));\n        return (React.createElement(\"div\", Object.assign({ className: (0, react_styles_1.css)(card_1.default.cardHeader, isToggleRightAligned && card_1.default.modifiers.toggleRight, className), id: id }, props),\n            onExpand && !isToggleRightAligned && cardHeaderToggle,\n            children,\n            onExpand && isToggleRightAligned && cardHeaderToggle));\n    }));\n};\nexports.CardHeader = CardHeader;\nexports.CardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardHeaderMain = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst CardHeaderMain = (_a) => {\n    var { children = null, className = '' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: className }, props), children));\n};\nexports.CardHeaderMain = CardHeaderMain;\nexports.CardHeaderMain.displayName = 'CardHeaderMain';\n//# sourceMappingURL=CardHeaderMain.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardTitle = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst Card_1 = require(\"./Card\");\nconst CardTitle = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const { cardId, registerTitleId } = React.useContext(Card_1.CardContext);\n    const Component = component;\n    const titleId = cardId ? `${cardId}-title` : '';\n    React.useEffect(() => {\n        registerTitleId(titleId);\n        return () => registerTitleId('');\n    }, [registerTitleId, titleId]);\n    return (React.createElement(Component, Object.assign({ className: (0, react_styles_1.css)(card_1.default.cardTitle, className), id: titleId || undefined }, props), children));\n};\nexports.CardTitle = CardTitle;\nexports.CardTitle.displayName = 'CardTitle';\n//# sourceMappingURL=CardTitle.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./Card\"), exports);\ntslib_1.__exportStar(require(\"./CardActions\"), exports);\ntslib_1.__exportStar(require(\"./CardBody\"), exports);\ntslib_1.__exportStar(require(\"./CardExpandableContent\"), exports);\ntslib_1.__exportStar(require(\"./CardFooter\"), exports);\ntslib_1.__exportStar(require(\"./CardTitle\"), exports);\ntslib_1.__exportStar(require(\"./CardHeader\"), exports);\ntslib_1.__exportStar(require(\"./CardHeaderMain\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\"\nexports.__esModule = true;\nexports.BellSlashIconConfig = {\n  name: 'BellSlashIcon',\n  height: 512,\n  width: 640,\n  svgPath: 'M633.82 458.1l-90.62-70.05c.19-1.38.8-2.66.8-4.06.05-7.55-2.61-15.27-8.61-21.71-19.32-20.76-55.47-51.99-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V32c0-17.67-14.32-32-31.98-32s-31.98 14.33-31.98 32v20.84c-40.33 8.38-74.66 31.07-97.59 62.57L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.35 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.42-6.97 4.17-17.02-2.81-22.45zM157.23 251.54c-8.61 67.96-36.41 93.33-52.62 110.75-6 6.45-8.66 14.16-8.61 21.71.11 16.4 12.98 32 32.1 32h241.92L157.23 251.54zM320 512c35.32 0 63.97-28.65 63.97-64H256.03c0 35.35 28.65 64 63.97 64z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.BellSlashIcon = require('../createIcon').createIcon(exports.BellSlashIconConfig);\nexports[\"default\"] = exports.BellSlashIcon;","\"use strict\"\nexports.__esModule = true;\nexports.OutlinedBellIconConfig = {\n  name: 'OutlinedBellIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M439.39 362.29c-19.32-20.76-55.47-51.99-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V32c0-17.67-14.32-32-31.98-32s-31.98 14.33-31.98 32v20.84C118.56 68.1 64.08 130.3 64.08 208c0 102.3-36.15 133.53-55.47 154.29-6 6.45-8.66 14.16-8.61 21.71.11 16.4 12.98 32 32.1 32h383.8c19.12 0 32-15.6 32.1-32 .05-7.55-2.61-15.27-8.61-21.71zM67.53 368c21.22-27.97 44.42-74.33 44.53-159.42 0-.2-.06-.38-.06-.58 0-61.86 50.14-112 112-112s112 50.14 112 112c0 .2-.06.38-.06.58.11 85.1 23.31 131.46 44.53 159.42H67.53zM224 512c35.32 0 63.97-28.65 63.97-64H160.03c0 35.35 28.65 64 63.97 64z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.OutlinedBellIcon = require('../createIcon').createIcon(exports.OutlinedBellIconConfig);\nexports[\"default\"] = exports.OutlinedBellIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\n\nimport messages from '../../Messages';\n\nconst Breadcrumbs = ({ current }) => {\n  const intl = useIntl();\n  const location = useLocation();\n  const splitUrl = location.pathname.split('/');\n\n  return (\n    <div>\n      <Breadcrumb ouiaId=\"detail\">\n        <BreadcrumbItem className=\"breadcrumb-item\">\n          <Link to={`..`} relative=\"path\">\n            {`${intl.formatMessage(messages.insightsHeader)} ${splitUrl[4]}`}\n          </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem className=\"breadcrumb-item\" isActive>\n          {current}\n        </BreadcrumbItem>\n      </Breadcrumb>\n    </div>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  current: PropTypes.string,\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { List } from 'react-content-loader';\n\nconst Loading = () => (\n  <Card ouiaId=\"loading-skeleton\">\n    <CardBody>\n      <List />\n    </CardBody>\n  </Card>\n);\n\nexport default Loading;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { valid } from 'semver';\nimport uniqBy from 'lodash/uniqBy';\n\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter/conditionalFilterConstants';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Tooltip, Pagination } from '@patternfly/react-core';\nimport { PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\n\nimport {\n  ErrorState,\n  NoAffectedClusters,\n  NoMatchingClusters,\n} from '../MessageState/EmptyStates';\nimport {\n  AFFECTED_CLUSTERS_COLUMNS,\n  AFFECTED_CLUSTERS_IMPACTED_CELL,\n  AFFECTED_CLUSTERS_LAST_SEEN_CELL,\n  AFFECTED_CLUSTERS_NAME_CELL,\n  AFFECTED_CLUSTERS_VERSION_CELL,\n  FILTER_CATEGORIES,\n} from '../../AppConstants';\nimport Loading from '../Loading/Loading';\nimport {\n  AFFECTED_CLUSTERS_INITIAL_STATE,\n  resetFilters,\n  updateAffectedClustersFilters,\n} from '../../Services/Filters';\nimport messages from '../../Messages';\nimport DisableRule from '../Modals/DisableRule';\nimport {\n  buildFilterChips,\n  compareSemVer,\n  removeFilterParam as _removeFilterParam,\n  addFilterParam as _addFilterParam,\n} from '../Common/Tables';\nimport { BASE_PATH } from '../../Routes';\n\nconst AffectedClustersTable = ({ query, rule, afterDisableFn }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  const [filteredRows, setFilteredRows] = useState([]);\n  const [displayedRows, setDisplayedRows] = useState([]);\n  const [disableRuleModalOpen, setDisableRuleModalOpen] = useState(false);\n  const [selected, setSelected] = useState([]);\n  const [host, setHost] = useState(undefined);\n\n  const {\n    isError,\n    isUninitialized,\n    isFetching,\n    isSuccess,\n    /* the response contains two lists: `disabled` has clusters\n      for which the rec is disabled (acked), and `enable` contains\n       clusters that are affected by the rec */\n    data = { disabled: [], enabled: [] },\n  } = query;\n  const rows = data?.enabled || [];\n  const filters = useSelector(({ filters }) => filters.affectedClustersState);\n  const perPage = filters.limit;\n  const page = filters.offset / filters.limit + 1;\n  const allSelected =\n    filteredRows.length !== 0 && selected.length === filteredRows.length;\n  // helps to distinguish the state when the API data received but not yet filtered\n  const [rowsFiltered, setRowsFiltered] = useState(false);\n  const loadingState = isUninitialized || isFetching || !rowsFiltered;\n  const errorState = isError;\n  const successState = isSuccess;\n  const noInput = successState && rows.length === 0;\n  const noMatch = rows.length > 0 && filteredRows.length === 0;\n\n  const updateFilters = (filters) =>\n    dispatch(updateAffectedClustersFilters(filters));\n\n  const removeFilterParam = (param) =>\n    _removeFilterParam(filters, updateFilters, param);\n\n  const addFilterParam = (param, values) =>\n    _addFilterParam(filters, updateFilters, param, values);\n\n  const filterConfig = {\n    items: [\n      {\n        label: intl.formatMessage(messages.name),\n        placeholder: intl.formatMessage(messages.filterByName),\n        type: conditionalFilterType.text,\n        filterValues: {\n          id: 'name-filter',\n          key: 'name-filter',\n          onChange: (event, value) => addFilterParam('text', value),\n          value: filters.text,\n        },\n      },\n      {\n        label: intl.formatMessage(messages.version),\n        placeholder: intl.formatMessage(messages.filterByVersion),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n          id: 'version-filter',\n          key: 'version-filter',\n          onChange: (event, value) => addFilterParam('version', value),\n          value: filters.version,\n          items: uniqBy(\n            rows\n              .filter((r) => r.meta.cluster_version !== '')\n              .map((r) => ({\n                value: r.meta.cluster_version,\n              }))\n              .sort((a, b) => compareSemVer(a.value, b.value, 1))\n              .reverse(), // should start from the latest version\n            'value'\n          ),\n        },\n      },\n    ],\n    isDisabled: isError || (rows && rows.length === 0),\n  };\n\n  const onSort = (_e, index, direction) => {\n    setRowsFiltered(false);\n    updateFilters({ ...filters, sortIndex: index, sortDirection: direction });\n  };\n\n  const onSetPage = (_e, pageNumber) => {\n    setRowsFiltered(false);\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    updateFilters({ ...filters, offset: newOffset });\n  };\n\n  const onSetPerPage = (_e, perPage) => {\n    setRowsFiltered(false);\n    updateFilters({ ...filters, limit: perPage, offset: 0 });\n  };\n\n  // constructs array of rows (from the initial data) checking currently applied filters\n  const buildFilteredRows = (allRows, filters) => {\n    setRowsFiltered(false);\n    const rows = allRows.map((r) => {\n      if (r.meta.cluster_version !== '' && !valid(r.meta.cluster_version)) {\n        console.error(\n          `Cluster version ${r.meta.cluster_version} has invalid format!`\n        );\n      }\n\n      return {\n        id: r.cluster,\n        cells: [\n          '',\n          r.cluster_name || r.cluster,\n          r.meta.cluster_version,\n          r.last_checked_at,\n          r.impacted,\n        ],\n      };\n    });\n    return rows\n      .filter((row) => {\n        return (\n          row?.cells[AFFECTED_CLUSTERS_NAME_CELL].toLowerCase().includes(\n            filters.text.toLowerCase()\n          ) &&\n          (filters.version.length === 0 ||\n            filters.version.includes(row.cells[AFFECTED_CLUSTERS_VERSION_CELL]))\n        );\n      })\n      .sort((a, b) => {\n        let fst, snd;\n        const d = filters.sortDirection === 'asc' ? 1 : -1;\n        switch (filters.sortIndex) {\n          case AFFECTED_CLUSTERS_NAME_CELL:\n            return (\n              d *\n              a?.cells[AFFECTED_CLUSTERS_NAME_CELL].localeCompare(\n                b?.cells[AFFECTED_CLUSTERS_NAME_CELL]\n              )\n            );\n          case AFFECTED_CLUSTERS_VERSION_CELL:\n            return compareSemVer(\n              a.cells[AFFECTED_CLUSTERS_VERSION_CELL] || '0.0.0',\n              b.cells[AFFECTED_CLUSTERS_VERSION_CELL] || '0.0.0',\n              d\n            );\n          case AFFECTED_CLUSTERS_LAST_SEEN_CELL:\n            fst = new Date(a.cells[AFFECTED_CLUSTERS_LAST_SEEN_CELL] || 0);\n            snd = new Date(b.cells[AFFECTED_CLUSTERS_LAST_SEEN_CELL] || 0);\n            return fst > snd ? d : snd > fst ? -d : 0;\n          case AFFECTED_CLUSTERS_IMPACTED_CELL:\n            fst = new Date(a.cells[AFFECTED_CLUSTERS_IMPACTED_CELL] || 0);\n            snd = new Date(b.cells[AFFECTED_CLUSTERS_IMPACTED_CELL] || 0);\n            return fst > snd ? d : snd > fst ? -d : 0;\n        }\n      });\n  };\n\n  const buildDisplayedRows = (rows) => {\n    return rows\n      .slice(perPage * (page - 1), perPage * (page - 1) + perPage)\n      .map((r) => ({\n        ...r,\n        cells: [\n          <span key={r.id}>\n            <Link to={`${BASE_PATH}/clusters/${r.id}?first=${rule.rule_id}`}>\n              {r.cells[AFFECTED_CLUSTERS_NAME_CELL]}\n            </Link>\n          </span>,\n          <span key={r.id}>\n            {r.cells[AFFECTED_CLUSTERS_VERSION_CELL] ||\n              intl.formatMessage(messages.nA)}\n          </span>,\n          <span key={r.id}>\n            {r.cells[AFFECTED_CLUSTERS_LAST_SEEN_CELL] ? (\n              <DateFormat\n                extraTitle={`${intl.formatMessage(messages.lastSeen)}: `}\n                date={r.cells[AFFECTED_CLUSTERS_LAST_SEEN_CELL]}\n                variant=\"relative\"\n              />\n            ) : (\n              <Tooltip\n                key={r.id}\n                content={\n                  <span>\n                    {intl.formatMessage(messages.lastSeen) + ': '}\n                    {intl.formatMessage(messages.nA)}\n                  </span>\n                }\n              >\n                <span>{intl.formatMessage(messages.nA)}</span>\n              </Tooltip>\n            )}\n          </span>,\n          <span key={r.id}>\n            {r.cells[AFFECTED_CLUSTERS_IMPACTED_CELL] ? (\n              <DateFormat\n                extraTitle={`${intl.formatMessage(messages.impacted)}: `}\n                date={r.cells[AFFECTED_CLUSTERS_IMPACTED_CELL]}\n                variant=\"relative\"\n              />\n            ) : (\n              <Tooltip\n                key={r.id}\n                content={\n                  <span>\n                    {intl.formatMessage(messages.impacted) + ': '}\n                    {intl.formatMessage(messages.nA)}\n                  </span>\n                }\n              >\n                <span>{intl.formatMessage(messages.nA)}</span>\n              </Tooltip>\n            )}\n          </span>,\n        ],\n      }));\n  };\n\n  // if rowId === -1, then select all rows\n  const onSelect = (event, isSelected, rowId) => {\n    let rows;\n    rowId === -1\n      ? (rows = filteredRows.map((r) => ({ ...r, selected: isSelected })))\n      : (rows = filteredRows.map((r, i) => ({\n          ...r,\n          selected: i === rowId ? isSelected : r.selected,\n        })));\n    setSelected(rows.filter((r) => r.selected));\n    setFilteredRows(rows);\n    setDisplayedRows(buildDisplayedRows(rows));\n  };\n\n  useEffect(() => {\n    setFilteredRows(buildFilteredRows(rows, filters));\n  }, [\n    query,\n    filters.text,\n    filters.version,\n    filters.sortIndex,\n    filters.sortDirection,\n  ]);\n\n  useEffect(() => {\n    setDisplayedRows(buildDisplayedRows(filteredRows));\n    setRowsFiltered(true);\n  }, [filteredRows, filters.limit, filters.offset]);\n\n  const handleModalToggle = (disableRuleModalOpen, host = undefined) => {\n    setDisableRuleModalOpen(disableRuleModalOpen);\n    setHost(host);\n  };\n\n  return (\n    <div id=\"affected-list-table\" data-ouia-safe={!loadingState}>\n      {disableRuleModalOpen && (\n        <DisableRule\n          handleModalToggle={handleModalToggle}\n          isModalOpen={disableRuleModalOpen}\n          rule={rule}\n          afterFn={afterDisableFn}\n          hosts={host !== undefined ? [] : selected}\n          host={host}\n        />\n      )}\n      <PrimaryToolbar\n        filterConfig={filterConfig}\n        pagination={{\n          itemCount: filteredRows.length,\n          page,\n          perPage,\n          onSetPage: onSetPage,\n          onPerPageSelect: onSetPerPage,\n          ouiaId: 'pager',\n        }}\n        activeFiltersConfig={\n          isError || (rows && rows.length === 0)\n            ? undefined\n            : {\n                filters: buildFilterChips(filters, FILTER_CATEGORIES),\n                deleteTitle: intl.formatMessage(messages.resetFilters),\n                onDelete: (event, itemsToRemove, isAll) => {\n                  if (isAll) {\n                    resetFilters(\n                      filters,\n                      AFFECTED_CLUSTERS_INITIAL_STATE,\n                      updateFilters\n                    );\n                  } else {\n                    itemsToRemove.map((item) => {\n                      const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam])\n                          ? filters[item.urlParam].filter(\n                              (value) =>\n                                String(value) !== String(item.chips[0].value)\n                            )\n                          : '',\n                      };\n                      newFilter[item.urlParam].length > 0\n                        ? updateFilters({ ...filters, ...newFilter })\n                        : removeFilterParam(item.urlParam);\n                    });\n                  }\n                },\n              }\n        }\n        bulkSelect={{\n          count: selected.length,\n          items: [\n            {\n              title: intl.formatMessage(messages.selectNone),\n              onClick: (event) => onSelect(event, false, -1),\n            },\n            {\n              title: intl.formatMessage(messages.selectAll, {\n                items: filteredRows?.length || 0,\n              }),\n              onClick: (event) => onSelect(event, true, -1),\n            },\n          ],\n          checked: allSelected,\n          onSelect: (event) =>\n            allSelected\n              ? onSelect(event, false, -1)\n              : onSelect(event, true, -1),\n          ouiaId: 'clusters-selector',\n        }}\n        actionsConfig={{\n          actions: [\n            '',\n            {\n              label: intl.formatMessage(messages.disableRuleForClusters),\n              props: { isDisabled: selected.length === 0 },\n              onClick: () => handleModalToggle(true),\n            },\n          ],\n        }}\n      />\n      <Table\n        aria-label=\"Table of affected clusters\"\n        ouiaId=\"clusters\"\n        ouiaSafe={!loadingState}\n        variant=\"compact\"\n        cells={AFFECTED_CLUSTERS_COLUMNS}\n        rows={\n          errorState || loadingState || noMatch || noInput ? (\n            [\n              {\n                fullWidth: true,\n                cells: [\n                  {\n                    props: {\n                      colSpan: AFFECTED_CLUSTERS_COLUMNS.length + 1,\n                    },\n                    title: errorState ? (\n                      <ErrorState />\n                    ) : loadingState ? (\n                      <Loading />\n                    ) : noInput ? (\n                      <NoAffectedClusters />\n                    ) : (\n                      <NoMatchingClusters />\n                    ),\n                  },\n                ],\n              },\n            ]\n          ) : successState ? (\n            displayedRows\n          ) : (\n            <ErrorState />\n          )\n        }\n        sortBy={{\n          index: filters.sortIndex,\n          direction: filters.sortDirection,\n        }}\n        onSort={onSort}\n        canSelectAll={false}\n        onSelect={displayedRows?.length > 0 ? onSelect : undefined}\n        actions={[\n          {\n            title: 'Disable recommendation for cluster',\n            onClick: (event, rowIndex) =>\n              handleModalToggle(true, filteredRows[rowIndex].id),\n          },\n        ]}\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n      <Pagination\n        variant={PaginationVariant.bottom}\n        itemCount={filteredRows.length}\n        page={page}\n        perPage={perPage}\n        onSetPage={onSetPage}\n        onPerPageSelect={onSetPerPage}\n        onPageInput={onSetPage}\n        ouiaId=\"pager\"\n      />\n    </div>\n  );\n};\n\nAffectedClustersTable.propTypes = {\n  query: PropTypes.shape({\n    isError: PropTypes.bool.isRequired,\n    isUninitialized: PropTypes.bool.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    isSuccess: PropTypes.bool.isRequired,\n    data: PropTypes.shape({\n      enabled: PropTypes.array,\n      disabled: PropTypes.array,\n    }),\n  }),\n  rule: PropTypes.object,\n  afterDisableFn: PropTypes.func,\n};\n\nexport { AffectedClustersTable };\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'react-content-loader';\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  cellWidth,\n} from '@patternfly/react-table';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport OutlinedBellIcon from '@patternfly/react-icons/dist/js/icons/outlined-bell-icon';\nimport { addNotification as notification } from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport messages from '../../Messages';\nimport { enableRuleForCluster } from '../../Services/Acks';\n\nconst ViewHostAcks = ({\n  handleModalToggle,\n  isModalOpen,\n  clusters,\n  recId,\n  afterFn,\n}) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const addNotification = (data) => dispatch(notification(data));\n  const { data, isFetching, isLoading, refetch } = clusters;\n  const hostAcks = data?.disabled || [];\n  const [rows, setRows] = useState([]);\n  const [unclean, setUnclean] = useState(false);\n\n  const columns = [\n    {\n      title: intl.formatMessage(messages.clusterName),\n\n      transforms: [cellWidth(50)],\n    },\n    {\n      title: intl.formatMessage(messages.justificationNote),\n\n      transforms: [cellWidth(25)],\n    },\n    {\n      title: intl.formatMessage(messages.dateDisabled),\n\n      transforms: [cellWidth(15)],\n    },\n    '',\n  ];\n\n  const deleteAck = async (host) => {\n    try {\n      await enableRuleForCluster({ uuid: host.cluster_id, recId });\n      refetch();\n      setUnclean(true);\n    } catch (error) {\n      handleModalToggle(false);\n      addNotification({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: `${error}`,\n      });\n    }\n  };\n\n  useEffect(() => {\n    const rows = hostAcks?.map((item) => ({\n      cells: [\n        item.cluster_name || item.cluster_id,\n        item.justification || intl.formatMessage(messages.none),\n        {\n          title: (\n            <DateFormat date={new Date(item.disabled_at)} type=\"onlyDate\" />\n          ),\n        },\n        {\n          title: (\n            <Button\n              key={item.cluster_id}\n              ouiaId=\"enable\"\n              isInline\n              variant=\"link\"\n              onClick={() => deleteAck(item)}\n            >\n              <OutlinedBellIcon size=\"sm\" />\n              {` ${intl.formatMessage(messages.enable)}`}\n            </Button>\n          ),\n        },\n      ],\n    }));\n\n    if (!isLoading && hostAcks.length === 0) {\n      afterFn();\n      handleModalToggle(false);\n    }\n    setRows(rows);\n  }, [hostAcks]);\n\n  return (\n    <Modal\n      width={'75%'}\n      title={intl.formatMessage(messages.hostAckModalTitle)}\n      isOpen={isModalOpen}\n      onClose={() => {\n        unclean && afterFn();\n        handleModalToggle(false);\n      }}\n      ouiaId=\"hosts-disabled\"\n    >\n      {!isFetching ? (\n        <Table aria-label=\"host-ack-table\" rows={rows} cells={columns}>\n          <TableHeader />\n          <TableBody />\n        </Table>\n      ) : (\n        <Table\n          aria-label=\"host-ack-table\"\n          rows={[\n            {\n              cells: [{ props: { colSpan: 3 }, title: <List /> }],\n            },\n          ]}\n          cells={columns}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n    </Modal>\n  );\n};\n\nViewHostAcks.propTypes = {\n  isModalOpen: PropTypes.bool,\n  handleModalToggle: PropTypes.func,\n  clusters: PropTypes.object,\n  recId: PropTypes.string,\n  afterFn: PropTypes.func,\n};\n\nViewHostAcks.defaultProps = {\n  isModalOpen: false,\n  handleModalToggle: () => undefined,\n  clusters: {},\n  recId: '',\n  afterFn: () => undefined,\n};\n\nexport default ViewHostAcks;\n","import './Recommendation.scss';\n\nimport React, { useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n} from '@patternfly/react-core/dist/js/components/Card';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  Label,\n  Title,\n  LabelGroup,\n  Button,\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  Flex,\n  FlexItem,\n} from '@patternfly/react-core';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport CaretDownIcon from '@patternfly/react-icons/dist/js/icons/caret-down-icon';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { ErrorState } from '@redhat-cloud-services/frontend-components/ErrorState';\nimport {\n  AdvisorProduct,\n  RuleDetails,\n  RuleDetailsMessagesKeys,\n} from '@redhat-cloud-services/frontend-components-advisor-components';\n\nimport Breadcrumbs from '../Breadcrumbs';\nimport RuleLabels from '../Labels/RuleLabels';\nimport {\n  FILTER_CATEGORIES,\n  RISK_OF_CHANGE_DESC,\n  RULE_CATEGORIES,\n} from '../../AppConstants';\nimport messages from '../../Messages';\nimport Loading from '../Loading/Loading';\nimport { adjustOCPRule } from '../../Utilities/Rule';\nimport MessageState from '../MessageState/MessageState';\nimport { AffectedClustersTable } from '../AffectedClustersTable/AffectedClustersTable';\nimport { Delete, Post } from '../../Utilities/Api';\nimport { BASE_URL } from '../../Services/SmartProxy';\nimport DisableRule from '../Modals/DisableRule';\nimport ViewHostAcks from '../Modals/ViewHostAcks';\nimport { OneLineLoader } from '../../Utilities/Loaders';\nimport { enableRuleForCluster } from '../../Services/Acks';\nimport { formatMessages, mapContentToValues } from '../../Utilities/intlHelper';\nimport inRange from 'lodash/inRange';\n\nconst Recommendation = ({ rule, ack, clusters, recId }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const notify = (data) => dispatch(addNotification(data));\n  const [disableRuleModalOpen, setDisableRuleModalOpen] = useState(false);\n  const [actionsDropdownOpen, setActionsDropdownOpen] = useState(false);\n  const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n\n  // rule's info\n  const {\n    isError,\n    isUninitialized,\n    isLoading,\n    isFetching,\n    isSuccess,\n    data,\n    refetch,\n  } = rule;\n  // justification note, last time acknowledged, etc.\n  const { data: ackData, isFetching: ackIsFetching, refetch: refetchAck } = ack;\n  const ruleDate = new Date(ackData?.updated_at || ackData?.created_at);\n  // affected and acked clusters lists\n  const {\n    data: clustersData,\n    isFetching: clustersIsFetching,\n    refetch: refetchClusters,\n  } = clusters;\n\n  const content =\n    isSuccess && data ? adjustOCPRule(data.content, recId) : undefined;\n  const ackedClusters =\n    !clustersIsFetching && clustersData ? clustersData.disabled : undefined;\n\n  const afterDisableFn = async () => {\n    refetch();\n    refetchAck();\n    refetchClusters();\n  };\n\n  const handleModalToggle = (disableRuleModalOpen) => {\n    setDisableRuleModalOpen(disableRuleModalOpen);\n  };\n\n  const enableRecForHosts = async ({ uuids }) => {\n    try {\n      const requests = uuids.map((uuid) =>\n        enableRuleForCluster({ uuid, recId })\n      );\n      await Promise.all(requests);\n      refetch();\n      refetchAck();\n      refetchClusters();\n      notify({\n        variant: 'success',\n        timeout: true,\n        dismissable: true,\n        title: intl.formatMessage(messages.recSuccessfullyEnabledForCluster),\n      });\n    } catch (error) {\n      notify({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const enableRule = async (rule) => {\n    try {\n      await Delete(`${BASE_URL}/v2/ack/${rule.data.content.rule_id}`);\n      notify({\n        variant: 'success',\n        timeout: true,\n        dismissable: true,\n        title: intl.formatMessage(messages.recSuccessfullyEnabled),\n      });\n      refetch();\n    } catch (error) {\n      handleModalToggle(false);\n      notify({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const messagesValues = useMemo(\n    () => (content ? mapContentToValues(intl, content) : {}),\n    [intl, content]\n  );\n\n  return (\n    <React.Fragment>\n      {viewSystemsModalOpen && (\n        <ViewHostAcks\n          handleModalToggle={(toggleModal) =>\n            setViewSystemsModalOpen(toggleModal)\n          }\n          isModalOpen={viewSystemsModalOpen}\n          clusters={clusters}\n          afterFn={() => refetchClusters()}\n          recId={recId}\n        />\n      )}\n      {disableRuleModalOpen && (\n        <DisableRule\n          handleModalToggle={handleModalToggle}\n          isModalOpen={disableRuleModalOpen}\n          rule={content}\n          afterFn={afterDisableFn}\n        />\n      )}\n      <PageHeader className=\"pageHeaderOverride\">\n        <Breadcrumbs current={content?.description || recId} />\n      </PageHeader>\n      {(isUninitialized || isLoading || isFetching) && (\n        <section className=\"pf-l-page__main-section pf-c-page__main-section pf-m-light pf-u-pt-sm\">\n          <Loading />\n        </section>\n      )}\n      {isError && (\n        <section className=\"pf-l-page__main-section pf-c-page__main-section pf-m-light pf-u-pt-sm\">\n          <ErrorState />\n        </section>\n      )}\n      {!(isUninitialized || isLoading || isFetching) && isSuccess && (\n        <React.Fragment>\n          <section className=\"pf-l-page__main-section pf-c-page__main-section pf-m-light pf-u-pt-sm\">\n            <RuleDetails\n              messages={formatMessages(\n                intl,\n                RuleDetailsMessagesKeys,\n                messagesValues\n              )}\n              product={AdvisorProduct.ocp}\n              rule={content}\n              isDetailsPage\n              header={\n                <React.Fragment>\n                  <PageHeaderTitle\n                    title={\n                      <React.Fragment>\n                        {content.description} <RuleLabels rule={content} />\n                      </React.Fragment>\n                    }\n                  />\n                  <p>\n                    {intl.formatMessage(messages.rulesDetailsModifiedDate, {\n                      date: (\n                        <DateFormat\n                          date={new Date(content.publish_date)}\n                          type=\"onlyDate\"\n                        />\n                      ),\n                    })}\n                    {content.tags &&\n                      (Array.isArray(content.tags) ? (\n                        <LabelGroup\n                          className=\"categoryLabels\"\n                          numLabels={1}\n                          isCompact\n                        >\n                          {content.tags.reduce((labels, tag) => {\n                            if (RULE_CATEGORIES[tag]) {\n                              labels.push(\n                                <Label\n                                  key={`label-${tag}`}\n                                  color=\"blue\"\n                                  isCompact\n                                >\n                                  {\n                                    FILTER_CATEGORIES.category.values[\n                                      RULE_CATEGORIES[tag] - 1\n                                    ].label\n                                  }\n                                </Label>\n                              );\n                            }\n                            return labels;\n                          }, [])}\n                        </LabelGroup>\n                      ) : (\n                        <Label isCompact>{content.tags}</Label>\n                      ))}\n                  </p>\n                </React.Fragment>\n              }\n              onVoteClick={async (rule, rating) =>\n                await Post(`${BASE_URL}/v2/rating`, {}, { rule, rating })\n              }\n              {...(inRange(content?.resolution_risk, 1, 5) // resolution risk can be 0 (not defined for particular rule)\n                ? {\n                    resolutionRisk: content?.resolution_risk,\n                    resolutionRiskDesc:\n                      RISK_OF_CHANGE_DESC[content?.resolution_risk],\n                  }\n                : {})}\n            >\n              <Flex>\n                <FlexItem align={{ default: 'alignRight' }}>\n                  <Dropdown\n                    className=\"ins-c-rec-details__actions_dropdown\"\n                    onSelect={() =>\n                      setActionsDropdownOpen(!actionsDropdownOpen)\n                    }\n                    position=\"right\"\n                    ouiaId=\"actions\"\n                    toggle={\n                      <DropdownToggle\n                        onToggle={(actionsDropdownOpen) =>\n                          setActionsDropdownOpen(actionsDropdownOpen)\n                        }\n                        toggleIndicator={CaretDownIcon}\n                      >\n                        {intl.formatMessage(messages.actions)}\n                      </DropdownToggle>\n                    }\n                    isOpen={actionsDropdownOpen}\n                    dropdownItems={\n                      content?.disabled\n                        ? [\n                            <DropdownItem\n                              key=\"link\"\n                              ouiaId=\"enable\"\n                              onClick={() => {\n                                enableRule(rule);\n                              }}\n                            >\n                              {intl.formatMessage(messages.enableRule)}\n                            </DropdownItem>,\n                          ]\n                        : [\n                            <DropdownItem\n                              key=\"link\"\n                              ouiaId=\"disable\"\n                              onClick={() => {\n                                handleModalToggle(true);\n                              }}\n                            >\n                              {intl.formatMessage(messages.disableRule)}\n                            </DropdownItem>,\n                          ]\n                    }\n                  />\n                </FlexItem>\n              </Flex>\n            </RuleDetails>\n          </section>\n          <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n            <React.Fragment>\n              {(content?.hosts_acked_count ||\n                ackedClusters?.length > 0 ||\n                content?.disabled) && (\n                <Card className=\"cardOverride\" ouiaId=\"hosts-acked\">\n                  <CardHeader>\n                    <Title headingLevel=\"h4\" size=\"xl\">\n                      <BellSlashIcon size=\"sm\" />\n                      &nbsp;\n                      {intl.formatMessage(\n                        (content?.hosts_acked_count ||\n                          ackedClusters?.length > 0) &&\n                          !content?.disabled\n                          ? messages.ruleIsDisabledForClusters\n                          : messages.ruleIsDisabled\n                      )}\n                    </Title>\n                  </CardHeader>\n                  <CardBody>\n                    {(content?.hosts_acked_count ||\n                      ackedClusters?.length > 0) &&\n                    !content?.disabled ? (\n                      <React.Fragment>\n                        {intl.formatMessage(\n                          messages.ruleIsDisabledForClustersBody,\n                          {\n                            clusters: ackedClusters?.length,\n                          }\n                        )}\n                        {!clustersIsFetching && ackedClusters?.length > 0 ? (\n                          <React.Fragment>\n                            &nbsp;\n                            <Button\n                              isInline\n                              variant=\"link\"\n                              onClick={() => setViewSystemsModalOpen(true)}\n                              ouiaId=\"view-clusters\"\n                            >\n                              {intl.formatMessage(messages.viewClusters)}\n                            </Button>\n                          </React.Fragment>\n                        ) : (\n                          <OneLineLoader />\n                        )}\n                      </React.Fragment>\n                    ) : (\n                      !ackIsFetching &&\n                      ackData && (\n                        <React.Fragment>\n                          {ackData?.justification\n                            ? intl.formatMessage(\n                                messages.ruleIsDisabledWithJustificaiton,\n                                {\n                                  date: (\n                                    <span>\n                                      <DateFormat\n                                        date={ruleDate}\n                                        type=\"onlyDate\"\n                                      />\n                                    </span>\n                                  ),\n                                  reason: ackData.justification,\n                                }\n                              )\n                            : intl.formatMessage(\n                                messages.ruleIsDisabledWithoutJustificaiton,\n                                {\n                                  date: (\n                                    <span>\n                                      <DateFormat\n                                        date={ruleDate}\n                                        type=\"onlyDate\"\n                                      />\n                                    </span>\n                                  ),\n                                }\n                              )}\n                        </React.Fragment>\n                      )\n                    )}\n                  </CardBody>\n                  <CardFooter>\n                    {(content?.hosts_acked_count ||\n                      ackedClusters?.length > 0) &&\n                    !content?.disabled ? (\n                      !clustersIsFetching && ackedClusters ? (\n                        <Button\n                          isInline\n                          variant=\"link\"\n                          onClick={() =>\n                            enableRecForHosts({\n                              uuids: ackedClusters.map((c) => c.cluster_id),\n                            })\n                          }\n                          ouiaId=\"enable\"\n                        >\n                          {intl.formatMessage(messages.enableRuleForClusters)}\n                        </Button>\n                      ) : (\n                        <OneLineLoader />\n                      )\n                    ) : (\n                      <Button\n                        isInline\n                        variant=\"link\"\n                        onClick={() => enableRule(rule)}\n                        ouiaId=\"enable\"\n                      >\n                        {intl.formatMessage(messages.enableRule)}\n                      </Button>\n                    )}\n                  </CardFooter>\n                </Card>\n              )}\n              {!content?.disabled && (\n                <React.Fragment>\n                  <Title className=\"titleOverride\" headingLevel=\"h3\" size=\"2xl\">\n                    {intl.formatMessage(messages.affectedClusters)}\n                  </Title>\n                  <AffectedClustersTable\n                    query={clusters}\n                    rule={content}\n                    afterDisableFn={afterDisableFn}\n                  />\n                </React.Fragment>\n              )}\n              {content?.disabled && (\n                <MessageState\n                  icon={BellSlashIcon}\n                  title={intl.formatMessage(messages.ruleIsDisabled)}\n                  text={intl.formatMessage(messages.ruleIsDisabledBody)}\n                />\n              )}\n            </React.Fragment>\n          </section>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nRecommendation.propTypes = {\n  rule: PropTypes.object.isRequired,\n  ack: PropTypes.object.isRequired,\n  clusters: PropTypes.object.isRequired,\n  recId: PropTypes.string.isRequired,\n};\n\nexport { Recommendation };\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport { Recommendation } from './Recommendation';\nimport {\n  useGetAffectedClustersQuery,\n  useGetRuleByIdQuery,\n} from '../../Services/SmartProxy';\nimport { useGetRecAcksQuery } from '../../Services/Acks';\nimport messages from '../../Messages';\n\nconst RecommendationWrapper = () => {\n  const intl = useIntl();\n  const { recommendationId } = useParams();\n  const rule = useGetRuleByIdQuery(recommendationId);\n  const ack = useGetRecAcksQuery({ ruleId: recommendationId });\n  const chrome = useChrome();\n\n  if (rule.isSuccess && rule.data?.content?.description) {\n    const subnav = `${rule.data.content.description} - Recommendations`;\n    chrome.updateDocumentTitle(\n      intl.formatMessage(messages.documentTitle, { subnav })\n    );\n  }\n  const clusters = useGetAffectedClustersQuery(recommendationId);\n\n  useEffect(() => {\n    rule.refetch();\n  }, [recommendationId]);\n\n  return (\n    <Recommendation\n      rule={rule}\n      ack={ack}\n      clusters={clusters}\n      recId={recommendationId}\n    />\n  );\n};\n\nexport default RecommendationWrapper;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst OneLineLoader = () => (\n  <ContentLoader height={20}>\n    <rect x=\"0\" y=\"0\" rx=\"4\" ry=\"4\" width=\"300\" height=\"20\" />\n  </ContentLoader>\n);\n\nexport { OneLineLoader };\n"],"names":["Object","defineProperty","exports","value","CardActions","tslib_1","React","__importStar","react_styles_1","card_1","__importDefault","_a","children","className","hasNoOffset","props","__rest","createElement","assign","css","default","cardActions","modifiers","noOffset","displayName","CardExpandableContent","Card_1","CardContext","Consumer","isExpanded","cardExpandableContent","CardFooter","component","Component","cardFooter","CardHeader","Button_1","angle_right_icon_1","id","onExpand","toggleButtonProps","isToggleRightAligned","cardId","cardHeaderToggle","Button","variant","type","onClick","evt","cardHeaderToggleIcon","cardHeader","toggleRight","CardHeaderMain","CardTitle","registerTitleId","useContext","titleId","useEffect","cardTitle","undefined","__exportStar","name","height","width","svgPath","yOffset","xOffset","Breadcrumbs","current","intl","useIntl","location","useLocation","splitUrl","pathname","split","ouiaId","Link","to","relative","formatMessage","messages","insightsHeader","isActive","propTypes","PropTypes","Card","CardBody","AffectedClustersTable","query","rule","afterDisableFn","dispatch","useDispatch","useState","filteredRows","setFilteredRows","displayedRows","setDisplayedRows","disableRuleModalOpen","setDisableRuleModalOpen","selected","setSelected","host","setHost","isError","isUninitialized","isFetching","isSuccess","data","disabled","enabled","rows","filters","useSelector","affectedClustersState","perPage","limit","page","offset","allSelected","length","rowsFiltered","setRowsFiltered","loadingState","errorState","successState","noInput","noMatch","updateFilters","updateAffectedClustersFilters","addFilterParam","param","values","_addFilterParam","filterConfig","items","label","placeholder","filterByName","conditionalFilterType","text","filterValues","key","onChange","event","version","filterByVersion","checkbox","uniqBy","filter","r","meta","cluster_version","map","sort","a","b","compareSemVer","reverse","isDisabled","onSetPage","_e","pageNumber","newOffset","onSetPerPage","buildDisplayedRows","slice","cells","BASE_PATH","rule_id","AFFECTED_CLUSTERS_NAME_CELL","AFFECTED_CLUSTERS_VERSION_CELL","nA","AFFECTED_CLUSTERS_LAST_SEEN_CELL","DateFormat","extraTitle","lastSeen","date","Tooltip","content","AFFECTED_CLUSTERS_IMPACTED_CELL","impacted","onSelect","isSelected","rowId","i","allRows","valid","console","error","cluster","cluster_name","last_checked_at","row","toLowerCase","includes","fst","snd","d","sortDirection","sortIndex","localeCompare","Date","buildFilteredRows","handleModalToggle","DisableRule","isModalOpen","afterFn","hosts","PrimaryToolbar","pagination","itemCount","onPerPageSelect","activeFiltersConfig","buildFilterChips","FILTER_CATEGORIES","deleteTitle","resetFilters","onDelete","itemsToRemove","isAll","AFFECTED_CLUSTERS_INITIAL_STATE","item","newFilter","urlParam","Array","isArray","String","chips","_removeFilterParam","bulkSelect","count","title","selectNone","selectAll","checked","actionsConfig","actions","disableRuleForClusters","Table","ouiaSafe","AFFECTED_CLUSTERS_COLUMNS","fullWidth","colSpan","Loading","sortBy","index","direction","onSort","canSelectAll","rowIndex","TableHeader","TableBody","Pagination","PaginationVariant","bottom","onPageInput","isRequired","ViewHostAcks","clusters","recId","addNotification","notification","isLoading","refetch","hostAcks","setRows","unclean","setUnclean","columns","clusterName","transforms","cellWidth","justificationNote","dateDisabled","deleteAck","enableRuleForCluster","uuid","cluster_id","dismissable","description","justification","none","disabled_at","isInline","size","enable","Modal","hostAckModalTitle","isOpen","onClose","defaultProps","Recommendation","ack","notify","actionsDropdownOpen","setActionsDropdownOpen","viewSystemsModalOpen","setViewSystemsModalOpen","ackData","ackIsFetching","refetchAck","ruleDate","updated_at","created_at","clustersData","clustersIsFetching","refetchClusters","adjustOCPRule","ackedClusters","enableRecForHosts","uuids","requests","Promise","all","timeout","recSuccessfullyEnabledForCluster","enableRule","Delete","BASE_URL","recSuccessfullyEnabled","messagesValues","useMemo","mapContentToValues","toggleModal","s","PageHeader","ErrorState","formatMessages","RuleDetailsMessagesKeys","product","AdvisorProduct","ocp","isDetailsPage","header","PageHeaderTitle","RuleLabels","rulesDetailsModifiedDate","publish_date","tags","LabelGroup","numLabels","isCompact","reduce","labels","tag","RULE_CATEGORIES","push","Label","color","category","onVoteClick","rating","Post","inRange","resolution_risk","resolutionRisk","resolutionRiskDesc","RISK_OF_CHANGE_DESC","Flex","FlexItem","align","Dropdown","position","toggle","DropdownToggle","onToggle","toggleIndicator","CaretDownIcon","dropdownItems","DropdownItem","disableRule","hosts_acked_count","Title","headingLevel","ruleIsDisabledForClusters","ruleIsDisabled","ruleIsDisabledForClustersBody","viewClusters","ruleIsDisabledWithJustificaiton","reason","ruleIsDisabledWithoutJustificaiton","c","enableRuleForClusters","affectedClusters","MessageState","icon","BellSlashIcon","ruleIsDisabledBody","recommendationId","useParams","useGetRuleByIdQuery","useGetRecAcksQuery","ruleId","chrome","useChrome","subnav","updateDocumentTitle","documentTitle","useGetAffectedClustersQuery","OneLineLoader","x","y","rx","ry"],"sourceRoot":""}