{"version":3,"sources":["webpack:///./src/PresentationalComponents/Loading/Loading.js","webpack:///./src/Routes/SamplePage/SamplePage.js","webpack:///./src/SmartComponents/Clusters/Clusters.js"],"names":["Card","CardBody","SampleComponent","withRouter","dispatch","useDispatch","useEffect","insights","chrome","appAction","PageHeader","PageHeaderTitle","title","Main","Stack","hasGutter","StackItem","Title","headingLevel","size","Button","variant","onClick","addNotification","description","Suspense","fallback","Spinner","Link","to","Details","lazy","Switch","Route","exact","path","component"],"mappings":"6NAcA,QAVgB,kBACd,oCACE,kBAACA,EAAA,GAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,KAAD,U,sECUFC,EAAkB,kBAAM,kDAyE9B,SAAeC,iBA9DI,WACjB,IAAMC,GAAWC,mBAgBjB,OAdAC,gBAAU,WAAM,UACN,QAAR,EAAAC,gBAAA,mBAAUC,cAAV,mBAAkBC,iBAAlB,gBAA8B,iBAC7B,IAaD,kBAAC,aAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAiBC,MAAM,wBACvB,0DAEF,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAAC,MAAD,CAAOC,WAAS,GACd,kBAAC,EAAAC,UAAD,KACE,kBAAC,EAAAC,MAAD,CAAOC,aAAa,KAAKC,KAAK,OAC3B,IADH,SAES,KAET,kBAAC,EAAAC,OAAD,CAAQC,QAAQ,UAAUC,QAvBhB,WAClBlB,GACEmB,QAAgB,CACdF,QAAS,UACTT,MAAO,qBACPY,YAAa,gCAmBN,IADH,iBAEiB,MAGnB,kBAAC,EAAAR,UAAD,KACE,kBAAC,EAAAS,SAAD,CAAUC,SAAU,kBAAC,EAAAC,QAAD,OAClB,kBAACzB,EAAD,QAGJ,kBAAC,EAAAc,UAAD,KACE,kBAAC,EAAAF,MAAD,CAAOC,WAAS,GACd,kBAAC,EAAAC,UAAD,KACE,kBAAC,EAAAC,MAAD,CAAOC,aAAa,KAAKC,KAAK,OAC3B,IADH,QAEQ,MAGV,kBAAC,EAAAH,UAAD,KACE,kBAAC,EAAAY,KAAD,CAAMC,GAAG,SAAT,gCAEF,kBAAC,EAAAb,UAAD,KACE,kBAAC,EAAAY,KAAD,CAAMC,GAAG,mBAAT,wCC3EhB,IAAMC,GAAUC,WAAK,kBACnB,4EAsBF,QAbiB,kBACf,kBAAC,EAAAC,OAAD,KACE,kBAAC,EAAAC,MAAD,CACEC,OAAK,EACLC,KAAK,+BACLC,UAAW,kBATOA,EASc,kBAACN,EAAD,MARpC,kBAAC,EAAAL,SAAD,CAAUC,SAAU,kBAAC,EAAD,OAAcU,GADb,IAACA,KAWpB,kBAAC,EAAAH,MAAD,KACE,kBAAC,EAAD","file":"js/Clusters.0a194b2d27df4662f5fe.js","sourcesContent":["import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { List } from 'react-content-loader';\nimport React from 'react';\nconst Loading = () => (\n  <>\n    <Card>\n      <CardBody>\n        <List />\n      </CardBody>\n    </Card>\n  </>\n);\n\nexport default Loading;\n","import React, { Suspense, useEffect } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  Button,\n  StackItem,\n  Stack,\n  Title,\n  Spinner,\n} from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst SampleComponent = () => <div>Sample Component</div>;\n\nimport './sample-page.scss';\n\n/**\n * A smart component that handles all the api calls and data needed by the dumb components.\n * Smart components are usually classes.\n *\n * https://reactjs.org/docs/components-and-props.html\n * https://medium.com/@thejasonfile/dumb-components-and-smart-components-e7b33a698d43\n */\nconst SamplePage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    insights?.chrome?.appAction?.('sample-page');\n  }, []);\n\n  const handleAlert = () => {\n    dispatch(\n      addNotification({\n        variant: 'success',\n        title: 'Notification title',\n        description: 'notification description',\n      })\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title=\"Sample Insights App\" />\n        <p> This is page header text </p>\n      </PageHeader>\n      <Main>\n        <Stack hasGutter>\n          <StackItem>\n            <Title headingLevel=\"h2\" size=\"3xl\">\n              {' '}\n              Alerts{' '}\n            </Title>\n            <Button variant=\"primary\" onClick={handleAlert}>\n              {' '}\n              Dispatch alert{' '}\n            </Button>\n          </StackItem>\n          <StackItem>\n            <Suspense fallback={<Spinner />}>\n              <SampleComponent />\n            </Suspense>\n          </StackItem>\n          <StackItem>\n            <Stack hasGutter>\n              <StackItem>\n                <Title headingLevel=\"h2\" size=\"3xl\">\n                  {' '}\n                  Links{' '}\n                </Title>\n              </StackItem>\n              <StackItem>\n                <Link to=\"/oops\"> How to handle 500s in app </Link>\n              </StackItem>\n              <StackItem>\n                <Link to=\"/no-permissions\"> How to handle 403s in app </Link>\n              </StackItem>\n            </Stack>\n          </StackItem>\n        </Stack>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(SamplePage);\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport SamplePage from '../../Routes/SamplePage/SamplePage';\n\nconst Details = lazy(() =>\n  import(\n    /* webpackChunkName: \"InventoryDetails\" */ '../../PresentationalComponents/Clusters/ClusterDetails'\n  )\n);\n\nconst suspenseHelper = (component) => (\n  <Suspense fallback={<Loading />}>{component}</Suspense>\n);\n\nconst Clusters = () => (\n  <Switch>\n    <Route\n      exact\n      path=\"/advisor/clusters/:clusterId\"\n      component={() => suspenseHelper(<Details />)}\n    />\n    <Route>\n      <SamplePage />\n    </Route>\n  </Switch>\n);\n\nexport default Clusters;\n"],"sourceRoot":""}