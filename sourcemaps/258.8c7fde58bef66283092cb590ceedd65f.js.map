{"version":3,"file":"js/258.58fd5a1393e76a1cf658.js","mappings":"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","sources":["webpack:///./src/AppConstants.js","webpack:///./src/Components/RuleLabels/RuleLabels.js"],"sourcesContent":["import { createIntl, createIntlCache } from 'react-intl';\nimport intlHelper from '@redhat-cloud-services/frontend-components-translations/intlHelper';\n\nimport messages from './Messages';\nimport { cellWidth } from '@patternfly/react-table';\n\nconst cache = createIntlCache();\nconst locale = navigator.language.slice(0, 2);\nconst intl = createIntl(\n  {\n    // eslint-disable-next-line no-console\n    onError: console.error,\n    locale,\n  },\n  cache\n);\nconst intlSettings = { locale };\n\nexport const LIKELIHOOD_LABEL = {\n  1: intlHelper(intl.formatMessage(messages.low), intlSettings),\n  2: intlHelper(intl.formatMessage(messages.medium), intlSettings),\n  3: intlHelper(intl.formatMessage(messages.high), intlSettings),\n  4: intlHelper(intl.formatMessage(messages.critical), intlSettings),\n};\nexport const IMPACT_LABEL = {\n  1: intlHelper(intl.formatMessage(messages.low), intlSettings),\n  2: intlHelper(intl.formatMessage(messages.medium), intlSettings),\n  3: intlHelper(intl.formatMessage(messages.high), intlSettings),\n  4: intlHelper(intl.formatMessage(messages.critical), intlSettings),\n};\nexport const TOTAL_RISK_LABEL = {\n  1: intlHelper(intl.formatMessage(messages.low), intlSettings),\n  2: intlHelper(intl.formatMessage(messages.moderate), intlSettings),\n  3: intlHelper(intl.formatMessage(messages.important), intlSettings),\n  4: intlHelper(intl.formatMessage(messages.critical), intlSettings),\n};\nexport const RISK_OF_CHANGE_LABEL = {\n  1: intlHelper(intl.formatMessage(messages.veryLow), intlSettings),\n  2: intlHelper(intl.formatMessage(messages.low), intlSettings),\n  3: intlHelper(intl.formatMessage(messages.moderate), intlSettings),\n  4: intlHelper(intl.formatMessage(messages.high), intlSettings),\n};\nexport const RULE_CATEGORIES = {\n  service_availability: 1,\n  performance: 2,\n  fault_tolerance: 3,\n  security: 4,\n};\nexport const FILTER_CATEGORIES = {\n  total_risk: {\n    type: 'checkbox',\n    title: 'total risk',\n    urlParam: 'total_risk',\n    values: [\n      { label: TOTAL_RISK_LABEL[4], value: '4' },\n      { label: TOTAL_RISK_LABEL[3], value: '3' },\n      { label: TOTAL_RISK_LABEL[2], value: '2' },\n      { label: TOTAL_RISK_LABEL[1], value: '1' },\n    ],\n  },\n  /* Not exposed by API yet\n  res_risk: {\n    type: 'checkbox',\n    title: 'risk of change',\n    urlParam: 'res_risk',\n    values: [\n      { label: RISK_OF_CHANGE_LABEL[4], value: '4' },\n      { label: RISK_OF_CHANGE_LABEL[3], value: '3' },\n      { label: RISK_OF_CHANGE_LABEL[2], value: '2' },\n      { label: RISK_OF_CHANGE_LABEL[1], value: '1' },\n    ],\n  },\n  */\n  impact: {\n    type: 'checkbox',\n    title: 'impact',\n    urlParam: 'impact',\n    values: [\n      { label: IMPACT_LABEL[4], value: '4' },\n      { label: IMPACT_LABEL[3], value: '3' },\n      { label: IMPACT_LABEL[2], value: '2' },\n      { label: IMPACT_LABEL[1], value: '1' },\n    ],\n  },\n  likelihood: {\n    type: 'checkbox',\n    title: 'likelihood',\n    urlParam: 'likelihood',\n    values: [\n      { label: LIKELIHOOD_LABEL[4], value: '4' },\n      { label: LIKELIHOOD_LABEL[3], value: '3' },\n      { label: LIKELIHOOD_LABEL[2], value: '2' },\n      { label: LIKELIHOOD_LABEL[1], value: '1' },\n    ],\n  },\n  rule_status: {\n    type: 'radio',\n    title: 'status',\n    urlParam: 'rule_status',\n    values: [\n      {\n        label: intlHelper(intl.formatMessage(messages.all), intlSettings),\n        value: 'all',\n      },\n      {\n        label: intlHelper(intl.formatMessage(messages.enabled), intlSettings),\n        value: 'enabled',\n      },\n      {\n        label: intlHelper(intl.formatMessage(messages.disabled), intlSettings),\n        value: 'disabled',\n      },\n    ],\n  },\n  category: {\n    type: 'checkbox',\n    title: 'category',\n    urlParam: 'category',\n    values: [\n      {\n        label: intlHelper(\n          intl.formatMessage(messages.serviceAvailability),\n          intlSettings\n        ),\n        value: `${RULE_CATEGORIES.service_availability}`,\n      },\n      {\n        label: intlHelper(\n          intl.formatMessage(messages.performance),\n          intlSettings\n        ),\n        value: `${RULE_CATEGORIES.performance}`,\n      },\n      {\n        label: intlHelper(\n          intl.formatMessage(messages.faultTolerance),\n          intlSettings\n        ),\n        value: `${RULE_CATEGORIES.fault_tolerance}`,\n      },\n      {\n        label: intlHelper(intl.formatMessage(messages.security), intlSettings),\n        value: `${RULE_CATEGORIES.security}`,\n      },\n    ],\n  },\n  impacting: {\n    type: 'checkbox',\n    title: 'clusters impacted',\n    urlParam: 'impacting',\n    values: [\n      {\n        label: intlHelper(intl.formatMessage(messages.oneOrMore), intlSettings),\n        text: intlHelper(intl.formatMessage(messages.oneOrMore), intlSettings),\n        value: 'true',\n      },\n      {\n        label: intlHelper(intl.formatMessage(messages.none), intlSettings),\n        text: intlHelper(intl.formatMessage(messages.none), intlSettings),\n        value: 'false',\n      },\n    ],\n  },\n};\nexport const DEFAULT_CLUSTER_RULES_FILTERS = {\n  [FILTER_CATEGORIES.rule_status.urlParam]: 'enabled',\n};\nexport const TOTAL_RISK_LABEL_LOWER = {\n  1: intlHelper(intl.formatMessage(messages.low).toLowerCase(), intlSettings),\n  2: intlHelper(\n    intl.formatMessage(messages.moderate).toLowerCase(),\n    intlSettings\n  ),\n  3: intlHelper(\n    intl.formatMessage(messages.important).toLowerCase(),\n    intlSettings\n  ),\n  4: intlHelper(\n    intl.formatMessage(messages.critical).toLowerCase(),\n    intlSettings\n  ),\n};\nexport const RECS_LIST_COLUMNS = [\n  {\n    title: intl.formatMessage(messages.name),\n    transforms: [cellWidth(70)],\n  },\n  {\n    title: intl.formatMessage(messages.added),\n    transforms: [cellWidth(10)],\n  },\n  {\n    title: intl.formatMessage(messages.totalRisk),\n    transforms: [cellWidth(10)],\n  },\n  /*{\n    title: intl.formatMessage(messages.riskOfChange),\n    transforms: [cellWidth(15)],\n  },*/\n  {\n    title: intl.formatMessage(messages.clusters),\n    transforms: [cellWidth(10)],\n  },\n];\n","import {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\n\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleLabels = ({ rule }) => {\n  const intl = useIntl();\n  return (\n    <React.Fragment>\n      {rule.disabled && (\n        <Tooltip\n          content={intl.formatMessage(messages.ruleIsDisabledTooltip)}\n          position={TooltipPosition.right}\n        >\n          <Label color=\"gray\">{intl.formatMessage(messages.disabled)}</Label>\n        </Tooltip>\n      )}\n    </React.Fragment>\n  );\n};\n\nRuleLabels.propTypes = {\n  rule: PropTypes.object,\n};\n\nexport default RuleLabels;\n"],"names":["cache","createIntlCache","locale","navigator","language","slice","intl","createIntl","onError","console","error","intlSettings","LIKELIHOOD_LABEL","intlHelper","formatMessage","messages","IMPACT_LABEL","TOTAL_RISK_LABEL","RULE_CATEGORIES","service_availability","performance","fault_tolerance","security","FILTER_CATEGORIES","total_risk","type","title","urlParam","values","label","value","impact","likelihood","rule_status","category","impacting","text","DEFAULT_CLUSTER_RULES_FILTERS","TOTAL_RISK_LABEL_LOWER","toLowerCase","RECS_LIST_COLUMNS","transforms","cellWidth","RuleLabels","rule","useIntl","disabled","Tooltip","content","position","TooltipPosition","Label","color","propTypes","PropTypes"],"sourceRoot":""}