{"version":3,"file":"js/3224.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-styles/css/components/Label/label.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/Label/label-group.mjs","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/c_label__text_MaxWidth.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Label/Label.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Label/LabelGroup.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/times-circle-icon.js"],"sourcesContent":["import './label.css';\nexport default {\n  \"button\": \"pf-v5-c-button\",\n  \"label\": \"pf-v5-c-label\",\n  \"labelActions\": \"pf-v5-c-label__actions\",\n  \"labelContent\": \"pf-v5-c-label__content\",\n  \"labelIcon\": \"pf-v5-c-label__icon\",\n  \"labelText\": \"pf-v5-c-label__text\",\n  \"modifiers\": {\n    \"compact\": \"pf-m-compact\",\n    \"blue\": \"pf-m-blue\",\n    \"green\": \"pf-m-green\",\n    \"orange\": \"pf-m-orange\",\n    \"red\": \"pf-m-red\",\n    \"purple\": \"pf-m-purple\",\n    \"cyan\": \"pf-m-cyan\",\n    \"gold\": \"pf-m-gold\",\n    \"outline\": \"pf-m-outline\",\n    \"overflow\": \"pf-m-overflow\",\n    \"add\": \"pf-m-add\",\n    \"editable\": \"pf-m-editable\",\n    \"editableActive\": \"pf-m-editable-active\"\n  },\n  \"themeDark\": \"pf-v5-theme-dark\"\n};","import './label-group.css';\nexport default {\n  \"button\": \"pf-v5-c-button\",\n  \"labelGroup\": \"pf-v5-c-label-group\",\n  \"labelGroupClose\": \"pf-v5-c-label-group__close\",\n  \"labelGroupLabel\": \"pf-v5-c-label-group__label\",\n  \"labelGroupList\": \"pf-v5-c-label-group__list\",\n  \"labelGroupListItem\": \"pf-v5-c-label-group__list-item\",\n  \"labelGroupMain\": \"pf-v5-c-label-group__main\",\n  \"labelGroupTextarea\": \"pf-v5-c-label-group__textarea\",\n  \"modifiers\": {\n    \"category\": \"pf-m-category\",\n    \"vertical\": \"pf-m-vertical\",\n    \"editable\": \"pf-m-editable\",\n    \"textarea\": \"pf-m-textarea\"\n  }\n};","export const c_label__text_MaxWidth = {\n  \"name\": \"--pf-v5-c-label__text--MaxWidth\",\n  \"value\": \"100%\",\n  \"var\": \"var(--pf-v5-c-label__text--MaxWidth)\"\n};\nexport default c_label__text_MaxWidth;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Label/label.mjs';\nimport labelGrpStyles from '@patternfly/react-styles/css/components/Label/label-group.mjs';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nimport { css } from '@patternfly/react-styles';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { useIsomorphicLayoutEffect } from '../../helpers';\nimport cssTextMaxWidth from '@patternfly/react-tokens/dist/esm/c_label__text_MaxWidth';\nconst colorStyles = {\n    blue: styles.modifiers.blue,\n    cyan: styles.modifiers.cyan,\n    green: styles.modifiers.green,\n    orange: styles.modifiers.orange,\n    purple: styles.modifiers.purple,\n    red: styles.modifiers.red,\n    gold: styles.modifiers.gold,\n    grey: ''\n};\nexport const Label = (_a) => {\n    var { children, className = '', color = 'grey', variant = 'filled', isCompact = false, isEditable = false, editableProps, textMaxWidth, tooltipPosition, icon, onClose, onClick: onLabelClick, onEditCancel, onEditComplete, closeBtn, closeBtnAriaLabel, closeBtnProps, href, isOverflowLabel, render } = _a, props = __rest(_a, [\"children\", \"className\", \"color\", \"variant\", \"isCompact\", \"isEditable\", \"editableProps\", \"textMaxWidth\", \"tooltipPosition\", \"icon\", \"onClose\", \"onClick\", \"onEditCancel\", \"onEditComplete\", \"closeBtn\", \"closeBtnAriaLabel\", \"closeBtnProps\", \"href\", \"isOverflowLabel\", \"render\"]);\n    const [isEditableActive, setIsEditableActive] = useState(false);\n    const [currValue, setCurrValue] = useState(children);\n    const editableButtonRef = React.useRef();\n    const editableInputRef = React.useRef();\n    React.useEffect(() => {\n        document.addEventListener('mousedown', onDocMouseDown);\n        document.addEventListener('keydown', onKeyDown);\n        return () => {\n            document.removeEventListener('mousedown', onDocMouseDown);\n            document.removeEventListener('keydown', onKeyDown);\n        };\n    });\n    React.useEffect(() => {\n        if (onLabelClick && href) {\n            // eslint-disable-next-line no-console\n            console.warn('Link labels cannot have onClick passed, this results in invalid HTML. Please remove either the href or onClick prop.');\n        }\n        else if (onLabelClick && isEditable) {\n            // eslint-disable-next-line no-console\n            console.warn('Editable labels cannot have onClick passed, clicking starts the label edit process. Please remove either the isEditable or onClick prop.');\n        }\n    }, [onLabelClick, href, isEditable]);\n    const onDocMouseDown = (event) => {\n        if (isEditableActive &&\n            editableInputRef &&\n            editableInputRef.current &&\n            !editableInputRef.current.contains(event.target)) {\n            if (editableInputRef.current.value) {\n                onEditComplete && onEditComplete(event, editableInputRef.current.value);\n            }\n            setIsEditableActive(false);\n        }\n    };\n    const onKeyDown = (event) => {\n        var _a, _b;\n        const key = event.key;\n        if ((!isEditableActive &&\n            (!editableButtonRef ||\n                !editableButtonRef.current ||\n                !editableButtonRef.current.contains(event.target))) ||\n            (isEditableActive &&\n                (!editableInputRef || !editableInputRef.current || !editableInputRef.current.contains(event.target)))) {\n            return;\n        }\n        if (isEditableActive && (key === 'Enter' || key === 'Tab')) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            if (editableInputRef.current.value) {\n                onEditComplete && onEditComplete(event, editableInputRef.current.value);\n            }\n            setIsEditableActive(false);\n            (_a = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n        if (isEditableActive && key === 'Escape') {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            // Reset div text to initial children prop - pre-edit\n            if (editableInputRef.current.value) {\n                editableInputRef.current.value = children;\n                onEditCancel && onEditCancel(event, children);\n            }\n            setIsEditableActive(false);\n            (_b = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n        if (!isEditableActive && key === 'Enter') {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            setIsEditableActive(true);\n            // Set cursor position to end of text\n            const el = event.target;\n            const range = document.createRange();\n            const sel = window.getSelection();\n            range.selectNodeContents(el);\n            range.collapse(false);\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n    };\n    const LabelComponent = (isOverflowLabel ? 'button' : 'span');\n    const defaultButton = (React.createElement(Button, Object.assign({ type: \"button\", variant: \"plain\", onClick: onClose, \"aria-label\": closeBtnAriaLabel || `Close ${children}` }, closeBtnProps),\n        React.createElement(TimesIcon, null)));\n    const button = React.createElement(\"span\", { className: css(styles.labelActions) }, closeBtn || defaultButton);\n    const textRef = React.createRef();\n    // ref to apply tooltip when rendered is used\n    const componentRef = React.useRef();\n    const [isTooltipVisible, setIsTooltipVisible] = React.useState(false);\n    useIsomorphicLayoutEffect(() => {\n        const currTextRef = isEditable ? editableButtonRef : textRef;\n        if (!isEditableActive) {\n            setIsTooltipVisible(currTextRef.current && currTextRef.current.offsetWidth < currTextRef.current.scrollWidth);\n        }\n    }, [isEditableActive]);\n    const content = (React.createElement(React.Fragment, null,\n        icon && React.createElement(\"span\", { className: css(styles.labelIcon) }, icon),\n        React.createElement(\"span\", Object.assign({ ref: textRef, className: css(styles.labelText) }, (textMaxWidth && {\n            style: {\n                [cssTextMaxWidth.name]: textMaxWidth\n            }\n        })), children)));\n    React.useEffect(() => {\n        if (isEditableActive && editableInputRef) {\n            editableInputRef.current && editableInputRef.current.focus();\n        }\n    }, [editableInputRef, isEditableActive]);\n    const updateVal = () => {\n        setCurrValue(editableInputRef.current.value);\n    };\n    let LabelComponentChildElement = 'span';\n    if (href) {\n        LabelComponentChildElement = 'a';\n    }\n    else if (isEditable || (onLabelClick && !isOverflowLabel)) {\n        LabelComponentChildElement = 'button';\n    }\n    const clickableLabelProps = {\n        type: 'button',\n        onClick: onLabelClick\n    };\n    const isButton = LabelComponentChildElement === 'button';\n    const labelComponentChildProps = Object.assign(Object.assign(Object.assign(Object.assign({ className: css(styles.labelContent) }, (isTooltipVisible && { tabIndex: 0 })), (href && { href })), (isButton && clickableLabelProps)), (isEditable && Object.assign({ ref: editableButtonRef, onClick: (e) => {\n            setIsEditableActive(true);\n            e.stopPropagation();\n        } }, editableProps)));\n    let labelComponentChild = (React.createElement(LabelComponentChildElement, Object.assign({}, labelComponentChildProps), content));\n    if (render) {\n        labelComponentChild = (React.createElement(React.Fragment, null,\n            isTooltipVisible && React.createElement(Tooltip, { triggerRef: componentRef, content: children, position: tooltipPosition }),\n            render({\n                className: styles.labelContent,\n                content,\n                componentRef\n            })));\n    }\n    else if (isTooltipVisible) {\n        labelComponentChild = (React.createElement(Tooltip, { content: children, position: tooltipPosition }, labelComponentChild));\n    }\n    return (React.createElement(LabelComponent, Object.assign({}, props, { className: css(styles.label, colorStyles[color], variant === 'outline' && styles.modifiers.outline, isOverflowLabel && styles.modifiers.overflow, isCompact && styles.modifiers.compact, isEditable && labelGrpStyles.modifiers.editable, isEditableActive && styles.modifiers.editableActive, className), onClick: isOverflowLabel ? onLabelClick : undefined }),\n        !isEditableActive && labelComponentChild,\n        !isEditableActive && onClose && button,\n        isEditableActive && (React.createElement(\"input\", Object.assign({ className: css(styles.labelContent), type: \"text\", id: \"editable-input\", ref: editableInputRef, value: currValue, onChange: updateVal }, editableProps)))));\n};\nLabel.displayName = 'Label';\n//# sourceMappingURL=Label.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Label/label-group.mjs';\nimport labelStyles from '@patternfly/react-styles/css/components/Label/label.mjs';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport { Label } from './Label';\nimport { Tooltip } from '../Tooltip';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport { fillTemplate } from '../../helpers';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nclass LabelGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.headingRef = React.createRef();\n        this.toggleCollapse = () => {\n            this.setState((prevState) => ({\n                isOpen: !prevState.isOpen,\n                isTooltipVisible: Boolean(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)\n            }));\n        };\n        this.state = {\n            isOpen: this.props.defaultIsOpen,\n            isTooltipVisible: false\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            isTooltipVisible: Boolean(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)\n        });\n    }\n    renderLabel(id) {\n        const { categoryName, tooltipPosition } = this.props;\n        const { isTooltipVisible } = this.state;\n        return isTooltipVisible ? (React.createElement(Tooltip, { position: tooltipPosition, content: categoryName },\n            React.createElement(\"span\", { tabIndex: 0, ref: this.headingRef, className: css(styles.labelGroupLabel) },\n                React.createElement(\"span\", { \"aria-hidden\": \"true\", id: id }, categoryName)))) : (React.createElement(\"span\", { ref: this.headingRef, className: css(styles.labelGroupLabel), \"aria-hidden\": \"true\", id: id }, categoryName));\n    }\n    render() {\n        const _a = this.props, { categoryName, children, className, isClosable, isCompact, closeBtnAriaLabel, 'aria-label': ariaLabel, onClick, numLabels, expandedText, collapsedText, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        defaultIsOpen, tooltipPosition, isVertical, isEditable, hasEditableTextArea, editableTextAreaProps, addLabelControl } = _a, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        rest = __rest(_a, [\"categoryName\", \"children\", \"className\", \"isClosable\", \"isCompact\", \"closeBtnAriaLabel\", 'aria-label', \"onClick\", \"numLabels\", \"expandedText\", \"collapsedText\", \"defaultIsOpen\", \"tooltipPosition\", \"isVertical\", \"isEditable\", \"hasEditableTextArea\", \"editableTextAreaProps\", \"addLabelControl\"]);\n        const { isOpen } = this.state;\n        const renderedChildren = React.Children.toArray(children);\n        const numChildren = renderedChildren.length;\n        const collapsedTextResult = fillTemplate(collapsedText, {\n            remaining: numChildren - numLabels\n        });\n        const renderLabelGroup = (id) => {\n            const labelArray = !isOpen ? renderedChildren.slice(0, numLabels) : renderedChildren;\n            const content = (React.createElement(React.Fragment, null,\n                categoryName && this.renderLabel(id),\n                React.createElement(\"ul\", Object.assign({ className: css(styles.labelGroupList) }, (categoryName && { 'aria-labelledby': id }), (!categoryName && { 'aria-label': ariaLabel }), { role: \"list\" }, rest),\n                    labelArray.map((child, i) => (React.createElement(\"li\", { className: css(styles.labelGroupListItem), key: i }, child))),\n                    numChildren > numLabels && (React.createElement(\"li\", { className: css(styles.labelGroupListItem) },\n                        React.createElement(Label, { isOverflowLabel: true, onClick: this.toggleCollapse, className: css(isCompact && labelStyles.modifiers.compact) }, isOpen ? expandedText : collapsedTextResult))),\n                    addLabelControl && React.createElement(\"li\", { className: css(styles.labelGroupListItem) }, addLabelControl),\n                    isEditable && hasEditableTextArea && (React.createElement(\"li\", { className: css(styles.labelGroupListItem, styles.modifiers.textarea) },\n                        React.createElement(\"textarea\", Object.assign({ className: css(styles.labelGroupTextarea), rows: 1, tabIndex: 0 }, editableTextAreaProps)))))));\n            const close = (React.createElement(\"div\", { className: css(styles.labelGroupClose) },\n                React.createElement(Button, { variant: \"plain\", \"aria-label\": closeBtnAriaLabel, onClick: onClick, id: `remove_group_${id}`, \"aria-labelledby\": `remove_group_${id} ${id}` },\n                    React.createElement(TimesCircleIcon, { \"aria-hidden\": \"true\" }))));\n            return (React.createElement(\"div\", { className: css(styles.labelGroup, className, categoryName && styles.modifiers.category, isVertical && styles.modifiers.vertical, isEditable && styles.modifiers.editable) },\n                React.createElement(\"div\", { className: css(styles.labelGroupMain) }, content),\n                isClosable && close));\n        };\n        return numChildren === 0 && addLabelControl === undefined ? null : (React.createElement(GenerateId, null, (randomId) => renderLabelGroup(this.props.id || randomId)));\n    }\n}\nLabelGroup.displayName = 'LabelGroup';\nLabelGroup.defaultProps = {\n    expandedText: 'Show Less',\n    collapsedText: '${remaining} more',\n    categoryName: '',\n    defaultIsOpen: false,\n    numLabels: 3,\n    isClosable: false,\n    isCompact: false,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onClick: (_e) => undefined,\n    closeBtnAriaLabel: 'Close label group',\n    tooltipPosition: 'top',\n    'aria-label': 'Label group category',\n    isVertical: false,\n    isEditable: false,\n    hasEditableTextArea: false\n};\nexport { LabelGroup };\n//# sourceMappingURL=LabelGroup.js.map","import { createIcon } from '../createIcon';\n\nexport const TimesCircleIconConfig = {\n  name: 'TimesCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const TimesCircleIcon = createIcon(TimesCircleIconConfig);\n\nexport default TimesCircleIcon;"],"names":["colorStyles","blue","cyan","green","orange","purple","red","gold","grey","Label","_a","children","className","color","variant","isCompact","isEditable","editableProps","textMaxWidth","tooltipPosition","icon","onClose","onClick","onLabelClick","onEditCancel","onEditComplete","closeBtn","closeBtnAriaLabel","closeBtnProps","href","isOverflowLabel","render","props","__rest","isEditableActive","setIsEditableActive","useState","currValue","setCurrValue","editableButtonRef","editableInputRef","document","addEventListener","onDocMouseDown","onKeyDown","removeEventListener","console","warn","event","current","contains","target","value","_b","key","preventDefault","stopImmediatePropagation","focus","el","range","createRange","sel","window","getSelection","selectNodeContents","collapse","removeAllRanges","addRange","LabelComponent","defaultButton","Button","Object","assign","type","button","css","textRef","componentRef","isTooltipVisible","setIsTooltipVisible","useIsomorphicLayout","currTextRef","offsetWidth","scrollWidth","content","ref","style","LabelComponentChildElement","clickableLabelProps","isButton","labelComponentChildProps","tabIndex","e","stopPropagation","labelComponentChild","Tooltip","triggerRef","position","undefined","id","onChange","displayName","LabelGroup","constructor","super","this","headingRef","toggleCollapse","setState","prevState","isOpen","Boolean","state","defaultIsOpen","componentDidMount","renderLabel","categoryName","isClosable","ariaLabel","numLabels","expandedText","collapsedText","isVertical","hasEditableTextArea","editableTextAreaProps","addLabelControl","rest","renderedChildren","toArray","numChildren","length","collapsedTextResult","remaining","renderLabelGroup","labelArray","slice","role","map","child","i","label","rows","close","GenerateId","randomId","defaultProps","_e","TimesCircleIconConfig","name","height","width","svgPath","yOffset","xOffset","TimesCircleIcon"],"sourceRoot":""}