{"version":3,"file":"js/WorkloadsList.46a2956fcf3725058662.js","mappings":"+iCAeY,oCAV4B,WAExC,IAAMA,EAAqB,WAAM,WAC/B,IAAMC,GAAgB,YAAGC,EAAAA,EAAAA,IAAeC,EAAAA,KAAuB,WAC/DC,QAAQC,IAAIJ,EAAkB,OAChC,E,mxBCKY,oCAX8C,WAS1D,QAPkC,WAIhC,OAJsC,sBAI/B,kBAACD,EAAmB,KAC7B,E,m9BCIY,oCAPiE,WA0B7E,QAxBsB,WAAM,WAC1B,IAAMM,GAAI,YAAGC,EAAAA,EAAAA,MACPC,GAAM,YAAGC,EAAAA,EAAAA,MAQf,OAR2B,WAE3BD,EAAOE,oBACLJ,EAAKK,cAAcC,EAAAA,EAASC,cAAe,CACzCC,OAAQR,EAAKK,cAAcC,EAAAA,EAASG,aAEtC,WAGA,kBAAC,aAAc,KACb,kBAACC,EAAA,EAAU,CAACC,UAAU,yBACpB,kBAACC,EAAA,GAAK,CAACC,aAAa,KAAKC,OAAO,eAAc,cAIhD,6BAASH,UAAU,mDACjB,kBAAC,EAAkB,OAI3B,C","sources":["webpack:///./src/Components/WorkloadsListTable/WorkloadsListTable.js","webpack:///./src/Components/WorkloadsListTable/index.js","webpack:///./src/Components/WorkloadsList/index.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n//^ this will be removed later\nimport React from 'react';\nimport useFeatureFlag, {\n  WORKLOADS_ENABLE_FLAG,\n} from '../../Utilities/useFeatureFlag';\n\nconst WorkloadsListTable = () => {\n  const workloadsEnabled = useFeatureFlag(WORKLOADS_ENABLE_FLAG);\n  console.log(workloadsEnabled, 'FLAG');\n};\n\nexport { WorkloadsListTable };\n","//Wrapper for API connection\nimport React from 'react';\n\n/* import { useGetClustersQuery } from '../../Services/SmartProxy'; */\nimport { WorkloadsListTable } from './WorkloadsListTable';\n\nconst WorkloadsListTableWrapper = () => {\n  //Will be a workloads query when we connect it to the API\n  /* const query = useGetClustersQuery(); */\n\n  return <WorkloadsListTable /* query={query} */ />;\n};\n\nexport default WorkloadsListTableWrapper;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport PageHeader from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport messages from '../../Messages';\nimport WorkloadsListTable from '../WorkloadsListTable';\nimport { Title } from '@patternfly/react-core';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst WorkloadsList = () => {\n  const intl = useIntl();\n  const chrome = useChrome();\n\n  chrome.updateDocumentTitle(\n    intl.formatMessage(messages.documentTitle, {\n      subnav: intl.formatMessage(messages.clusters),\n    })\n  );\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"ins-c-clusters-header\">\n        <Title headingLevel=\"h1\" ouiaId=\"page-header\">\n          Workloads\n        </Title>\n      </PageHeader>\n      <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n        <WorkloadsListTable />\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default WorkloadsList;\n"],"names":["WorkloadsListTable","workloadsEnabled","useFeatureFlag","WORKLOADS_ENABLE_FLAG","console","log","intl","useIntl","chrome","useChrome","updateDocumentTitle","formatMessage","messages","documentTitle","subnav","clusters","PageHeader","className","Title","headingLevel","ouiaId"],"sourceRoot":""}