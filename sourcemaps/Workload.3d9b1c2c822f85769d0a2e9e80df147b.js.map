{"version":3,"file":"js/Workload.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/Components/Breadcrumbs/index.js","webpack:///./src/Components/Common/Tables.js","webpack:///./src/Components/Loading/Loading.js","webpack:///./src/Components/WorkloadHeader/WorkloadHeader.js","webpack:///./src/Components/WorkloadHeader/index.js","webpack:///./src/Components/ObjectsModalTable/ObjectsModalTable.js","webpack:///./src/Components/ObjectsModal/ObjectsModal.js","webpack:///./src/Components/ExpandedRulesDetails.js/ExpandedRulesDetails.js","webpack:///./src/Components/WorkloadRules/WorkloadRules.js","webpack:///./src/Components/Workload/Workload.js","webpack:///./src/Components/Workload/index.js","webpack:///./src/Utilities/Loaders.js","webpack:///./src/Utilities/Workloads.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\n\nimport messages from '../../Messages';\n\nconst Breadcrumbs = ({ current, workloads }) => {\n  const intl = useIntl();\n  const location = useLocation();\n  const splitUrl = location.pathname.split('/');\n\n  return (\n    <div>\n      <Breadcrumb ouiaId=\"detail\" data-testid=\"breadcrumb-item\">\n        <BreadcrumbItem className=\"breadcrumb-item\">\n          <Link to={workloads ? `../..` : `..`} relative=\"path\">\n            {`${intl.formatMessage(messages.insightsHeader)} ${splitUrl[4]}`}\n          </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem className=\"breadcrumb-item\" isActive>\n          {current}\n        </BreadcrumbItem>\n      </Breadcrumb>\n    </div>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  current: PropTypes.string,\n  workloads: PropTypes.boolean,\n};\n\nexport default Breadcrumbs;\n","import capitalize from 'lodash/capitalize';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { useEffect, useState } from 'react';\nimport { coerce, compare, valid } from 'semver';\nimport {\n  CLUSTER_FILTER_CATEGORIES,\n  FILTER_CATEGORIES,\n  RULE_CATEGORIES,\n} from '../../AppConstants';\nimport {\n  hasAnyValueGreaterThanZero,\n  remappingSeverity,\n} from '../../Utilities/Workloads';\n\nexport const passFilters = (rule, filters) =>\n  Object.entries(filters).every(([filterKey, filterValue]) => {\n    switch (filterKey) {\n      case 'text':\n        return rule.description\n          .toLowerCase()\n          .includes(filterValue.toLowerCase());\n      case FILTER_CATEGORIES.total_risk.urlParam:\n        return filterValue.includes(String(rule.total_risk));\n      case FILTER_CATEGORIES.category.urlParam:\n        return rule.tags.find((c) =>\n          filterValue.includes(String(RULE_CATEGORIES[c]))\n        );\n      case FILTER_CATEGORIES.impact.urlParam:\n        return filterValue.includes(String(rule.impact));\n      case FILTER_CATEGORIES.impacting.urlParam:\n        return filterValue.length > 0\n          ? filterValue.some((v) => {\n              if (v === 'true') {\n                return rule.impacted_clusters_count > 0;\n              }\n              if (v === 'false') {\n                return rule.impacted_clusters_count === 0;\n              }\n            })\n          : true;\n      case FILTER_CATEGORIES.likelihood.urlParam:\n        return filterValue.includes(String(rule.likelihood));\n      case FILTER_CATEGORIES.rule_status.urlParam:\n        return (\n          filterValue === 'all' ||\n          (filterValue === 'disabled' && rule.disabled) ||\n          (filterValue === 'enabled' && !rule.disabled)\n        );\n      case FILTER_CATEGORIES.res_risk.urlParam:\n        return filterValue.includes(String(rule.resolution_risk));\n      default:\n        return true;\n    }\n  });\n\nexport const passFiltersCluster = (cluster, filters) =>\n  Object.entries(filters).every(([filterKey, filterValue]) => {\n    switch (filterKey) {\n      case 'text':\n        return (cluster.cluster_name || cluster.cluster_id)\n          .toLowerCase()\n          .includes(filterValue.toLowerCase());\n      case CLUSTER_FILTER_CATEGORIES.hits.urlParam:\n        return (\n          // clusters with at least one rule hit\n          (filterValue.length === 0 && parseInt(cluster.total_hit_count) > 0) ||\n          // all clusters\n          filterValue.includes('all') ||\n          // clusters with at least one rule hit for any of the active risk filters\n          filterValue.some((v) => cluster.hits_by_total_risk[v] > 0)\n        );\n      case 'version':\n        return (\n          filterValue.length === 0 ||\n          filterValue.includes(toValidSemVer(cluster.cluster_version))\n        );\n      default:\n        return true;\n    }\n  });\n\nconst pruneFilters = (localFilters, filterCategories) => {\n  const prunedFilters = Object.entries(localFilters || {});\n  return prunedFilters.reduce((arr, it) => {\n    const [key, item] = it;\n    if (filterCategories[key]) {\n      const category = filterCategories[key];\n      const chips = Array.isArray(item)\n        ? item.map((value) => {\n            const selectedCategoryValue = category.values.find(\n              (values) => values.value === String(value)\n            );\n            return selectedCategoryValue\n              ? {\n                  name:\n                    selectedCategoryValue.text || selectedCategoryValue.label,\n                  value,\n                }\n              : { name: value, value };\n          })\n        : [\n            {\n              name: category.values.find(\n                (values) => values.value === String(item)\n              ).label,\n              value: item,\n            },\n          ];\n      return [\n        ...arr,\n        {\n          category: capitalize(category.title),\n          chips,\n          urlParam: category.urlParam,\n        },\n      ];\n    } else if (key === 'text') {\n      return [\n        ...arr,\n        ...(item.length > 0\n          ? [\n              {\n                category: 'Name',\n                chips: [{ name: item, value: item }],\n                urlParam: key,\n              },\n            ]\n          : []),\n      ];\n    } else if (key === 'version') {\n      return [\n        ...arr,\n        ...(item.length > 0\n          ? [\n              {\n                category: 'Version',\n                chips: item.map((it) => ({\n                  name: it,\n                  value: it,\n                })),\n                urlParam: key,\n              },\n            ]\n          : []),\n      ];\n    } else if (key === 'namespace_name') {\n      return [\n        ...arr,\n        ...(item.length > 0\n          ? [\n              {\n                category: 'Namespace name',\n                chips: [{ name: item, value: item }],\n                urlParam: key,\n              },\n            ]\n          : []),\n      ];\n    } else if (key === 'cluster_name') {\n      return [\n        ...arr,\n        ...(item.length > 0\n          ? [\n              {\n                category: 'Cluster name',\n                chips: [{ name: item, value: item }],\n                urlParam: key,\n              },\n            ]\n          : []),\n      ];\n    }\n  }, []);\n};\n\nexport const buildFilterChips = (filters, categories) => {\n  const localFilters = cloneDeep(filters);\n  delete localFilters.sortIndex;\n  delete localFilters.sortDirection;\n  delete localFilters.sort;\n  delete localFilters.offset;\n  delete localFilters.limit;\n  localFilters?.hits &&\n    localFilters.hits.length === 0 &&\n    delete localFilters.hits;\n  return pruneFilters(localFilters, categories);\n};\n\n// parses url params for use in table/filter chips\nexport const paramParser = (search) => {\n  const searchParams = new URLSearchParams(search);\n  return Array.from(searchParams).reduce(\n    (acc, [key, value]) => ({\n      ...acc,\n      [key]: [\n        'text',\n        'first',\n        'rule_status',\n        'sort',\n        'cluster_name',\n        'namespace_name',\n        'description',\n        'object_id',\n        'object_name',\n      ].includes(key)\n        ? value // just copy the full value\n        : value === 'true' || value === 'false'\n        ? JSON.parse(value) // parse boolean\n        : // parse array of values\n          value.split(','),\n    }),\n    {}\n  );\n};\n\nexport const translateSortParams = (value) => ({\n  name: value.substring(value.startsWith('-') ? 1 : 0),\n  direction: value.startsWith('-') ? 'desc' : 'asc',\n  description: value.substring(value.startsWith('-') ? 1 : 0),\n  object_id: value.substring(value.startsWith('-') ? 1 : 0),\n});\n\nexport const translateSortValue = (index, indexMapping, direction) => {\n  if (!['desc', 'asc'].includes(direction)) {\n    console.error('Invalid sort parameters (is not asc nor desc)');\n  }\n  return `${direction === 'asc' ? '' : '-'}${indexMapping[index]}`;\n};\n\n// TODO: remove since unused\nexport const debounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [delay, value]);\n\n  return debouncedValue;\n};\n\nexport const updateSearchParams = (filters = {}, columnMapping) => {\n  const url = new URL(window.location.origin + window.location.pathname);\n  // separately check the sort param\n  url.searchParams.set(\n    'sort',\n    translateSortValue(filters.sortIndex, columnMapping, filters.sortDirection)\n  );\n  // check the rest of filters\n  Object.entries(filters).forEach(([key, value]) => {\n    return (\n      key !== 'sortIndex' &&\n      key !== 'sortDirection' &&\n      key !== 'sort' &&\n      value !== '' &&\n      !(Array.isArray(value) && value.length === 0) &&\n      url.searchParams.set(key, value)\n    );\n  });\n  window.history.replaceState(null, null, url.href);\n};\n\n// TODO: move to Utils.js\nexport const compareSemVer = (v1, v2, d) => d * compare(v1, v2);\nexport const toValidSemVer = (version) =>\n  coerce(version === undefined || !valid(coerce(version)) ? '0.0.0' : version)\n    .version;\n\nexport const removeFilterParam = (currentFilters, updateFilters, param) => {\n  const { [param]: omitted, ...newFilters } = { ...currentFilters, offset: 0 };\n  updateFilters({\n    ...newFilters,\n    ...(param === 'text'\n      ? { text: '' }\n      : param === 'hits'\n      ? { hits: [] }\n      : param === 'version'\n      ? { version: [] }\n      : param === 'object_id'\n      ? { object_id: '' }\n      : {}),\n  });\n};\n\nexport const addFilterParam = (currentFilters, updateFilters, param, values) =>\n  values.length > 0\n    ? updateFilters({\n        ...currentFilters,\n        offset: 0,\n        ...{ [param]: values },\n      })\n    : removeFilterParam(currentFilters, updateFilters, param);\n\nexport const passFilterWorkloads = (workloads, filters) => {\n  const generalSeverityRemapped = remappingSeverity(\n    workloads.metadata.hits_by_severity,\n    'general'\n  );\n  return Object.entries(filters).every(([filterKey, filterValue]) => {\n    switch (filterKey) {\n      case 'cluster_name':\n        return (workloads.cluster.display_name || workloads.cluster.uuid)\n          .toLowerCase()\n          .includes(filterValue.toLowerCase());\n      case 'namespace_name':\n        return (workloads.namespace.name || workloads.namespace.uuid)\n          .toLowerCase()\n          .includes(filterValue.toLowerCase());\n      case 'severity':\n        return (\n          filterValue.length === 0 ||\n          hasAnyValueGreaterThanZero(generalSeverityRemapped, filters.severity)\n        );\n      default:\n        return true;\n    }\n  });\n};\n","import React from 'react';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { List } from 'react-content-loader';\n\nconst Loading = () => (\n  <Card ouiaId=\"loading-skeleton\">\n    <CardBody>\n      <List />\n    </CardBody>\n  </Card>\n);\n\nexport default Loading;\n","import React from 'react';\n\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Title,\n} from '@patternfly/react-core';\nimport Skeleton from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { OneLineLoader } from '../../Utilities/Loaders';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport PropTypes from 'prop-types';\n\nexport const WorkloadHeader = ({ workloadData, namespaceId, clusterId }) => {\n  const { isUninitialized, isFetching, data: workload } = workloadData;\n  return (\n    <Grid id=\"workload-header\" md={12} hasGutter>\n      <GridItem span={8}>\n        <Title\n          size=\"2xl\"\n          headingLevel=\"h1\"\n          id=\"workloads-header-title\"\n          ouiaId=\"workloads-name\"\n        >\n          {isUninitialized || isFetching ? (\n            <>\n              <Skeleton size=\"sm\" />\n              <Skeleton size=\"sm\" />\n            </>\n          ) : (\n            <>\n              <p>{workload?.cluster?.display_name || clusterId}</p>\n              <p>{workload?.namespace?.name || namespaceId}</p>\n            </>\n          )}\n        </Title>\n      </GridItem>\n      <GridItem>\n        <Stack>\n          <StackItem id=\"workload-header-uuid\">\n            <span>Cluster UUID:</span> <span>{clusterId}</span>{' '}\n            <span>Namespace UUID:</span> <span>{namespaceId}</span>\n          </StackItem>\n          <StackItem id=\"workload-header-last-seen\">\n            <span>Last seen: </span>\n            <span>\n              {isUninitialized || isFetching ? (\n                <OneLineLoader />\n              ) : workload?.metadata?.last_checked_at ? (\n                <DateFormat\n                  date={workload.metadata.last_checked_at}\n                  type=\"exact\"\n                />\n              ) : (\n                <>Unknown</>\n              )}\n            </span>\n          </StackItem>\n        </Stack>\n      </GridItem>\n    </Grid>\n  );\n};\n\nWorkloadHeader.propTypes = {\n  clusterId: PropTypes.string.isRequired,\n  namespaceId: PropTypes.string.isRequired,\n  workloadData: PropTypes.shape({\n    isUninitialized: PropTypes.bool.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    data: PropTypes.shape({\n      metadata: PropTypes.shape({\n        last_checked_at: PropTypes.string,\n      }),\n      namespace: PropTypes.shape({\n        uuid: PropTypes.string,\n        name: PropTypes.string,\n      }),\n      cluster: PropTypes.shape({\n        uuid: PropTypes.string,\n        display_name: PropTypes.string,\n      }),\n      status: PropTypes.string,\n    }),\n  }),\n};\n","import React from 'react';\nimport { WorkloadHeader } from './WorkloadHeader';\nimport PropTypes from 'prop-types';\n\nconst WorkloadsHeaderWrapper = ({ workload, namespaceId, clusterId }) => {\n  return (\n    <WorkloadHeader\n      workloadData={workload}\n      namespaceId={namespaceId}\n      clusterId={clusterId}\n    />\n  );\n};\nWorkloadsHeaderWrapper.propTypes = {\n  clusterId: PropTypes.string.isRequired,\n  namespaceId: PropTypes.string.isRequired,\n  workload: PropTypes.shape({\n    isUninitialized: PropTypes.bool.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    data: PropTypes.shape({\n      metadata: PropTypes.shape({\n        last_checked_at: PropTypes.string,\n      }),\n      namespace: PropTypes.shape({\n        uuid: PropTypes.string,\n        name: PropTypes.string,\n      }),\n      cluster: PropTypes.shape({\n        uuid: PropTypes.string,\n        display_name: PropTypes.string,\n      }),\n      status: PropTypes.string,\n    }),\n  }),\n};\n\nexport default WorkloadsHeaderWrapper;\n","import React, { useEffect, useState } from 'react';\nimport { Table, Thead, Tr, Th, Tbody, Td } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { ObjectsTableColumns } from '../../AppConstants';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  WORKLOADS_OBJECTS_TABLE_INITIAL_STATE,\n  resetFilters,\n  updateWorkloadsObjectsListFilters,\n} from '../../Services/Filters';\nimport { removeFilterParam as _removeFilterParam } from '../Common/Tables';\nimport { Pagination } from '@patternfly/react-core';\nimport {\n  filtersAreApplied,\n  passObjectsFilters,\n  pruneWorkloadsRulesFilters,\n} from '../../Utilities/Workloads';\nimport { NoMatchingWorkloadsObjects } from '../MessageState/EmptyStates';\nimport Loading from '../Loading/Loading';\nimport { PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\n\nexport const ObjectsModalTable = ({ objects, objectsWithNames }) => {\n  const objectsData = objects || [];\n  const dispatch = useDispatch();\n  const [filtersApplied, setFiltersApplied] = useState(false);\n  const [filteredRows, setFilteredRows] = useState([]);\n  const [displayedRows, setDisplayedRows] = useState([]);\n  const [rowsFiltered, setRowsFiltered] = useState(false);\n  const filters = useSelector(\n    ({ filters }) => filters.workloadsObjectsListState\n  );\n  const page = Math.floor(filters.offset / filters.limit) + 1;\n  const perPage = filters.limit;\n\n  const removeFilterParam = (param) =>\n    _removeFilterParam(filters, updateFilters, param);\n\n  const updateFilters = (payload) =>\n    dispatch(updateWorkloadsObjectsListFilters(payload));\n  const preparedRows = displayedRows.length > 0 ? true : false;\n  const renderTableWithNames = objectsWithNames;\n  const loadingState = !rowsFiltered;\n\n  const filterConfigItems = (renderTableWithNames) => {\n    return renderTableWithNames\n      ? [\n          {\n            label: 'Object name',\n            type: 'text',\n            filterValues: {\n              key: 'display_name',\n              onChange: (_event, value) =>\n                updateFilters({ ...filters, offset: 0, display_name: value }),\n              value: filters.display_name,\n              placeholder: 'Filter by name',\n            },\n          },\n        ]\n      : [\n          {\n            label: 'Object ID',\n            type: 'text',\n            filterValues: {\n              key: 'object_id',\n              onChange: (_event, value) =>\n                updateFilters({ ...filters, offset: 0, object_id: value }),\n              value: filters.object_id,\n              placeholder: 'Filter by Object ID',\n            },\n          },\n        ];\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.sortIndex;\n    delete localFilters.sortDirection;\n    return pruneWorkloadsRulesFilters(\n      localFilters,\n      {\n        label: 'Object ID',\n        type: 'text',\n        title: 'object ID',\n        urlParam: 'object_id',\n      },\n      {\n        label: 'Object name',\n        type: 'text',\n        title: 'object name',\n        urlParam: 'display_name',\n      }\n    );\n  };\n\n  const activeFiltersConfig = {\n    showDeleteButton: filtersApplied,\n    deleteTitle: 'Reset filters',\n    filters: buildFilterChips(),\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        resetFilters(\n          filters,\n          WORKLOADS_OBJECTS_TABLE_INITIAL_STATE,\n          updateFilters\n        );\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? updateFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  //This is where we apply filters and map rows agains the filters\n  const buildFilteredRows = (allrows, filters) => {\n    return allrows.filter((object) => passObjectsFilters(object, filters));\n  };\n\n  //building displayed rows applying limits and per page values\n  const buildDisplayedRows = (rows) => {\n    return rows.slice(perPage * (page - 1), perPage * (page - 1) + perPage);\n  };\n\n  //After objectsData is present or in case of object id filter change we setFiltered rows using buildiflterRows\n  useEffect(() => {\n    setFilteredRows(buildFilteredRows(objectsData, filters));\n  }, [objectsData, filters]);\n\n  //after objects data is present we set filtered rows and this useEffect is triggered to update displayed rows\n  //with new array of rows that have filters applied\n  useEffect(() => {\n    setDisplayedRows(buildDisplayedRows(filteredRows));\n    setFiltersApplied(filtersAreApplied(filters));\n    setRowsFiltered(true);\n  }, [filteredRows, filters.limit, filters.offset]);\n\n  const onSetPage = (_e, pageNumber) => {\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    updateFilters({ ...filters, offset: newOffset });\n  };\n\n  const onPerPageSelect = (_e, perPage) => {\n    if (perPage !== filters.limit) {\n      updateFilters({ ...filters, limit: perPage, offset: 0 });\n    }\n  };\n\n  return (\n    <div id=\"objects-list-table\">\n      <PrimaryToolbar\n        pagination={{\n          page,\n          perPage,\n          onSetPage,\n          onPerPageSelect,\n          isCompact: true,\n          ouiaId: 'pager',\n          itemCount: filteredRows.length,\n        }}\n        filterConfig={{ items: filterConfigItems(renderTableWithNames) }}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      {loadingState ? (\n        <Loading />\n      ) : preparedRows && !renderTableWithNames ? (\n        <div>\n          <Table aria-label=\"Cell widths\" variant=\"compact\">\n            <Thead>\n              <Tr>\n                <Th width={60}>{ObjectsTableColumns.object}</Th>\n                <Th width={30}>{ObjectsTableColumns.kind}</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {displayedRows?.map((object, index) => (\n                <Tr key={index}>\n                  <Td dataLabel={ObjectsTableColumns.object}>{object.uid}</Td>\n                  <Td dataLabel={ObjectsTableColumns.kind}>{object.kind}</Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </Table>\n          {displayedRows.length > 0 ? (\n            <Pagination\n              ouiaId=\"pager\"\n              itemCount={filteredRows.length}\n              page={page}\n              perPage={perPage}\n              onSetPage={onSetPage}\n              onPerPageSelect={onPerPageSelect}\n              onPageInput={onSetPage}\n              widgetId={`pagination-options-menu-bottom`}\n              variant={PaginationVariant.bottom}\n            />\n          ) : (\n            <Pagination\n              itemCount={0}\n              perPage\n              page\n              onSetPage\n              onPerPageSelect\n              isDisabled\n            />\n          )}\n        </div>\n      ) : preparedRows && renderTableWithNames ? (\n        <div>\n          <Table aria-label=\"Cell widths\" variant=\"compact\">\n            <Thead>\n              <Tr>\n                <Th width={60}>{ObjectsTableColumns.display_name}</Th>\n                <Th width={30}>{ObjectsTableColumns.kind}</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {displayedRows?.map((object, index) => (\n                <Tr key={index}>\n                  <Td dataLabel={ObjectsTableColumns.display_name}>\n                    {object.display_name}\n                  </Td>\n                  <Td dataLabel={ObjectsTableColumns.kind}>{object.kind}</Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </Table>\n          {displayedRows.length > 0 ? (\n            <Pagination\n              ouiaId=\"pager\"\n              itemCount={filteredRows.length}\n              page={page}\n              perPage={perPage}\n              onSetPage={onSetPage}\n              onPerPageSelect={onPerPageSelect}\n              onPageInput={onSetPage}\n              widgetId={`pagination-options-menu-bottom`}\n              variant={PaginationVariant.bottom}\n            />\n          ) : (\n            <Pagination\n              itemCount={0}\n              perPage\n              page\n              onSetPage\n              onPerPageSelect\n              isDisabled\n            />\n          )}\n        </div>\n      ) : (\n        <NoMatchingWorkloadsObjects />\n      )}\n    </div>\n  );\n};\n\nObjectsModalTable.propTypes = {\n  objects: PropTypes.arrayOf(\n    PropTypes.shape({\n      kind: PropTypes.string,\n      uid: PropTypes.string,\n    })\n  ),\n  objectsWithNames: PropTypes.arrayOf(\n    PropTypes.shape({\n      kind: PropTypes.string,\n      uid: PropTypes.string,\n      display_name: PropTypes.string,\n    })\n  ),\n};\n","import React from 'react';\nimport { Modal as PfModal } from '@patternfly/react-core';\nimport { ObjectsModalTable } from '../ObjectsModalTable/ObjectsModalTable';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  WORKLOADS_OBJECTS_TABLE_INITIAL_STATE,\n  resetFilters,\n  updateWorkloadsObjectsListFilters,\n} from '../../Services/Filters';\n\nconst ObjectsModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  objects,\n  objectsWithNames,\n}) => {\n  const dispatch = useDispatch();\n  const filters = useSelector(\n    ({ filters }) => filters.workloadsObjectsListState\n  );\n  const updateFilters = (payload) =>\n    dispatch(updateWorkloadsObjectsListFilters(payload));\n\n  const onClose = () => {\n    setIsModalOpen(false);\n    resetFilters(filters, WORKLOADS_OBJECTS_TABLE_INITIAL_STATE, updateFilters);\n  };\n\n  return (\n    <PfModal\n      isOpen={isModalOpen}\n      onClose={() => onClose()}\n      variant={'medium'}\n      title=\"Objects\"\n    >\n      <ObjectsModalTable\n        objects={objects}\n        objectsWithNames={objectsWithNames}\n      />\n    </PfModal>\n  );\n};\n\nexport default ObjectsModal;\n\nObjectsModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  objects: PropTypes.arrayOf(\n    PropTypes.shape({\n      kind: PropTypes.string,\n      uid: PropTypes.string,\n      display_name: PropTypes.string,\n    })\n  ),\n  objectsNamesArePresent: PropTypes.arrayOf(\n    PropTypes.shape({\n      kind: PropTypes.string,\n      uid: PropTypes.string,\n      display_name: PropTypes.string,\n    })\n  ),\n  objectsWithNames: PropTypes.bool,\n};\n","import React, { useState } from 'react';\nimport {\n  BullseyeIcon,\n  InfoCircleIcon,\n  ThumbsUpIcon,\n} from '@patternfly/react-icons';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  ClipboardCopyButton,\n  CodeBlock,\n  CodeBlockAction,\n  CodeBlockCode,\n  Divider,\n  Icon,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport { Table, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport TemplateProcessor from '@redhat-cloud-services/frontend-components-advisor-components/TemplateProcessor/TemplateProcessor';\nimport ObjectsModal from '../ObjectsModal/ObjectsModal';\nimport { ObjectsTableColumns } from '../../AppConstants';\n\nconst OpenshiftCodeBlocks = () => {\n  const code1 = `oc get namespace -o jsonpath='{range .items[*]}{.metadata.name}{\"\\\\t\"}{.metadata.uid}{\"\\\\n\"}{end}'`;\n\n  const code2 = `oc -n <namespace> get <resourceKind> -o jsonpath='{range .items[*]}{.metadata.name}{\"\\\\t\"}{.metadata.uid}{\"\\\\n\"}{end}'`;\n\n  const clipboardCopyFunc = (event, text) => {\n    navigator.clipboard.writeText(text.toString());\n  };\n\n  const onClick = (event, text) => {\n    clipboardCopyFunc(event, text);\n    setCopied(true);\n  };\n\n  const [copied, setCopied] = React.useState(false);\n\n  const action = (code) => (\n    <React.Fragment>\n      <CodeBlockAction>\n        <ClipboardCopyButton\n          id=\"basic-copy-button\"\n          textId=\"code-content\"\n          aria-label=\"Copy to clipboard\"\n          onClick={(e) => onClick(e, code)}\n          exitDelay={copied ? 1500 : 600}\n          maxWidth=\"110px\"\n          variant=\"plain\"\n          onTooltipHidden={() => setCopied(false)}\n        >\n          {copied ? 'Successfully copied to clipboard!' : 'Copy to clipboard'}\n        </ClipboardCopyButton>\n      </CodeBlockAction>\n    </React.Fragment>\n  );\n\n  return (\n    <>\n      <CodeBlock\n        actions={action(code1.concat('\\n', code2))}\n        className=\"pf-v5-u-mt-md\"\n      >\n        <CodeBlockCode>{code1}</CodeBlockCode>\n        <CodeBlockCode>{code2}</CodeBlockCode>\n      </CodeBlock>\n    </>\n  );\n};\n\nconst ExpandedRulesDetails = ({\n  more_info,\n  resolution,\n  objects,\n  namespaceName,\n  reason,\n  extra_data,\n}) => {\n  const objectsArePresent = Array.isArray(objects) && objects.length > 0;\n  const moreInfoIsPresent = more_info.length > 0 ? true : false;\n  const [objectsModalOpen, setObjectsModalOpen] = useState(false);\n  const objectsWithNames = objects?.filter((object) => object.display_name);\n\n  return (\n    <Card className=\"ins-c-report-details\" style={{ boxShadow: 'none' }}>\n      <CardBody>\n        <ObjectsModal\n          isModalOpen={objectsModalOpen}\n          setIsModalOpen={setObjectsModalOpen}\n          objects={objects}\n          objectsWithNames={objectsWithNames.length > 0 ? true : false}\n        />\n        <Stack\n          className=\"ins-c-report-details__cards-stack\"\n          widget-type=\"InsightsRulesCard\"\n          hasGutter\n        >\n          <StackItem>\n            <Card isCompact isPlain>\n              <CardHeader>\n                <Icon>\n                  <BullseyeIcon className=\"ins-c-report-details__icon\" />\n                </Icon>\n                <strong>Detected issues</strong>\n              </CardHeader>\n              <CardBody>\n                <TemplateProcessor template={reason} definitions={extra_data} />\n              </CardBody>\n            </Card>\n          </StackItem>\n          {objectsArePresent && (\n            <React.Fragment>\n              <Divider />\n              <StackItem>\n                <Card isCompact isPlain>\n                  <CardHeader>\n                    <Icon>\n                      <ThumbsUpIcon className=\"ins-c-report-details__icon\" />\n                    </Icon>\n                    <strong>Steps to resolve</strong>\n                  </CardHeader>\n                  <CardBody>\n                    <TemplateProcessor\n                      template={resolution}\n                      definitions={extra_data}\n                    />\n                    <Table\n                      borders={'compactBorderless'}\n                      aria-label=\"Objects table\"\n                    >\n                      <Thead>\n                        <Tr>\n                          <Th modifier=\"fitContent\">\n                            {ObjectsTableColumns.object}\n                          </Th>\n                          {/* for the case when the object names are missing */}\n                          {objectsWithNames.slice(0, 3).length > 0 ? (\n                            <Th modifier=\"fitContent\">Object name</Th>\n                          ) : (\n                            ''\n                          )}\n                          <Th modifier=\"fitContent\">\n                            {ObjectsTableColumns.kind}\n                          </Th>\n                        </Tr>\n                      </Thead>\n                      <Tbody>\n                        {objects.slice(0, 3).map((object, key) => (\n                          <Tr key={key}>\n                            <Td dataLabel={ObjectsTableColumns.object}>\n                              {object.uid}\n                            </Td>\n                            {object.display_name && (\n                              <Td dataLabel={ObjectsTableColumns.display_name}>\n                                {object.display_name}\n                              </Td>\n                            )}\n                            <Td dataLabel={ObjectsTableColumns.kind}>\n                              {object.kind}\n                            </Td>\n                          </Tr>\n                        ))}\n                      </Tbody>\n                    </Table>\n                    <Button\n                      variant=\"link\"\n                      isInline\n                      onClick={() => setObjectsModalOpen(true)}\n                    >\n                      View all objects\n                    </Button>\n                  </CardBody>\n                </Card>\n              </StackItem>\n            </React.Fragment>\n          )}\n          {!namespaceName && (\n            <React.Fragment>\n              <CardHeader>\n                <strong>Note: </strong>Red Hat avoids gathering and processing\n                namespace and resource names as these may reveal confidential\n                information. Namespaces and resources are identified by their\n                UIDs instead. You can use in-cluster commands like the ones\n                below to translate UIDs of affected resources to their names.\n              </CardHeader>\n              <CardBody>\n                <OpenshiftCodeBlocks />\n              </CardBody>\n            </React.Fragment>\n          )}\n          {moreInfoIsPresent && (\n            <React.Fragment>\n              <Divider />\n              <StackItem>\n                <Card isCompact isPlain>\n                  <CardHeader>\n                    <Icon>\n                      <InfoCircleIcon className=\"ins-c-report-details__icon\" />\n                    </Icon>\n                    <strong>Additional info</strong>\n                  </CardHeader>\n                  <CardBody>\n                    <TemplateProcessor\n                      template={more_info}\n                      definitions={extra_data}\n                    />\n                  </CardBody>\n                </Card>\n              </StackItem>\n            </React.Fragment>\n          )}\n        </Stack>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default ExpandedRulesDetails;\n\nExpandedRulesDetails.propTypes = {\n  more_info: PropTypes.string.isRequired,\n  resolution: PropTypes.string.isRequired,\n  objects: PropTypes.arrayOf({\n    kind: PropTypes.string,\n    display_name: PropTypes.string,\n    uid: PropTypes.string,\n  }),\n  extra_data: PropTypes.shape({\n    check_name: PropTypes.string.isRequired,\n    check_url: PropTypes.string.isRequired,\n  }),\n  namespaceName: PropTypes.string.isRequired,\n  reason: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { TableVariant } from '@patternfly/react-table';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n} from '@patternfly/react-table/deprecated';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport {\n  WORKLOADS_RULES_COLUMNS_KEYS,\n  WORKLOADS_RULES_FILTER_CONFIG,\n  WORKLOAD_RULES_COLUMNS,\n  WORKLOAD_RULES_FILTER_CATEGORIES,\n} from '../../AppConstants';\nimport PropTypes from 'prop-types';\nimport Loading from '../Loading/Loading';\nimport {\n  ErrorState,\n  NoMatchingRecsForWorkloads,\n  NoRecsForWorkloadsDetails,\n  NoWorkloadsRecsAvailable,\n} from '../MessageState/EmptyStates';\nimport InsightsLabel from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport ExpandedRulesDetails from '../ExpandedRulesDetails.js/ExpandedRulesDetails';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  WORKLOADS_RECS_TABLE_INITIAL_STATE,\n  resetFilters,\n  updateWorkloadsRecsListFilters,\n} from '../../Services/Filters';\nimport {\n  translateSortParams,\n  paramParser,\n  updateSearchParams,\n} from '../Common/Tables';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  filtersAreApplied,\n  flatMapRows,\n  passFilterWorkloadsRecs,\n  pruneWorkloadsRulesFilters,\n  sortWithSwitch,\n  workloadsRulesAddFilterParam,\n  workloadsRulesRemoveFilterParam,\n} from '../../Utilities/Workloads';\nimport { useLocation } from 'react-router-dom';\nimport './WorkloadRules.scss';\n\nconst WorkloadRules = ({ workload, namespaceName }) => {\n  const dispatch = useDispatch();\n  const { isError, isUninitialized, isFetching, isSuccess, data, error } =\n    workload;\n  const recommendations = data?.recommendations || [];\n  const errorState = isError;\n  const successState = isSuccess;\n  const noInput = successState && recommendations.length === 0;\n  const [isAllExpanded, setIsAllExpanded] = useState(false);\n  const [filteredRows, setFilteredRows] = useState([]);\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const [displayedRows, setDisplayedRows] = useState([]);\n  const [rowsFiltered, setRowsFiltered] = useState(false);\n  const [filtersApplied, setFiltersApplied] = useState(false);\n  const [expandFirst, setExpandFirst] = useState(true);\n  const loadingState = isUninitialized || isFetching || !rowsFiltered;\n  const { search } = useLocation();\n  //FILTERS\n  const filters = useSelector(({ filters }) => filters.workloadsRecsListState);\n  const noMatchingRecs = filteredRows.length === 0 ? true : false;\n\n  const updateFilters = (payload) =>\n    dispatch(updateWorkloadsRecsListFilters(payload));\n\n  const addFilterParam = (param, values) => {\n    setExpandFirst(false);\n    workloadsRulesAddFilterParam(filters, updateFilters, param, values);\n  };\n  const removeFilterParam = (param) =>\n    workloadsRulesRemoveFilterParam(filters, updateFilters, param);\n\n  useEffect(() => {\n    setFilteredRows(buildFilteredRows(recommendations, filters));\n  }, [data, filters]);\n\n  useEffect(() => {\n    setDisplayedRows(\n      buildDisplayedRows(filteredRows, filters.sortIndex, filters.sortDirection)\n    );\n    setFiltersApplied(filtersAreApplied(filters));\n    setRowsFiltered(true);\n  }, [filteredRows]);\n\n  const filterConfigItems = WORKLOADS_RULES_FILTER_CONFIG(\n    filters,\n    addFilterParam\n  );\n\n  useEffect(() => {\n    if (search && filterBuilding) {\n      const paramsObject = paramParser(search);\n      if (paramsObject.sort) {\n        const sortObj = translateSortParams(paramsObject.sort);\n        paramsObject.sortIndex = WORKLOADS_RULES_COLUMNS_KEYS.indexOf(\n          sortObj.description\n        );\n        paramsObject.sortDirection = sortObj.direction;\n      }\n      paramsObject.total_risk &&\n        !Array.isArray(paramsObject.total_risk) &&\n        (paramsObject.total_risk = [`${paramsObject.total_risk}`]);\n      updateFilters({ ...filters, ...paramsObject });\n    }\n    setFilterBuilding(false);\n  }, []);\n\n  useEffect(() => {\n    if (!filterBuilding) {\n      updateSearchParams(filters, WORKLOADS_RULES_COLUMNS_KEYS);\n    }\n  }, [filters, filterBuilding]);\n\n  const buildDisplayedRows = (filteredRows, sortIndex, sortDirection) => {\n    const sortingRows = sortWithSwitch(sortIndex, sortDirection, filteredRows);\n    return flatMapRows(sortingRows, expandFirst);\n  };\n\n  const handleOnCollapse = (_e, rowId, isOpen) => {\n    if (rowId === undefined) {\n      // if undefined, all rows are affected\n      setIsAllExpanded(isOpen);\n      setDisplayedRows(\n        displayedRows.map((row) => ({\n          ...row,\n          // Don't show expand button for expanded content\n          ...(Object.hasOwn(row, 'parent') ? null : { isOpen }),\n        }))\n      );\n    } else {\n      setDisplayedRows(\n        displayedRows.map((row, index) =>\n          index === rowId ? { ...row, isOpen } : row\n        )\n      );\n    }\n  };\n\n  const buildFilteredRows = (allRows, filters) => {\n    setRowsFiltered(false);\n    const filtersArePresent = filtersAreApplied(filters);\n    const expandedRowsSet = new Set(\n      displayedRows\n        .filter((ruleExpanded) => ruleExpanded?.isOpen)\n        .map((object) => object?.rule?.details)\n    );\n    return allRows\n      .filter((recs) =>\n        filtersArePresent ? passFilterWorkloadsRecs(recs, filters) : true\n      )\n      .map((value, key) => [\n        {\n          rule: value,\n          isOpen: isAllExpanded || expandedRowsSet?.has(value?.details),\n          cells: [\n            {\n              title: value.details,\n            },\n            {\n              title: (\n                <div key={key}>\n                  <InsightsLabel\n                    value={value.total_risk}\n                    rest={{ isCompact: true }}\n                  />\n                </div>\n              ),\n            },\n            {\n              title: value.objects.length,\n            },\n            {\n              title: (\n                <div key={key}>\n                  <DateFormat date={value.modified} type=\"relative\" />\n                </div>\n              ),\n            },\n          ],\n        },\n        {\n          cells: [\n            {\n              title: (\n                <ExpandedRulesDetails\n                  more_info={value.more_info}\n                  resolution={value.resolution}\n                  objects={value.objects}\n                  namespaceName={namespaceName}\n                  reason={value.reason}\n                  extra_data={value.extra_data}\n                />\n              ),\n            },\n          ],\n          fullWidth: true,\n        },\n      ]);\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.sortIndex;\n    delete localFilters.sortDirection;\n    return pruneWorkloadsRulesFilters(\n      localFilters,\n      WORKLOAD_RULES_FILTER_CATEGORIES\n    );\n  };\n\n  const activeFiltersConfig = {\n    showDeleteButton: filtersApplied,\n    deleteTitle: 'Reset filters',\n    filters: buildFilterChips(),\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        resetFilters(\n          filters,\n          WORKLOADS_RECS_TABLE_INITIAL_STATE,\n          updateFilters\n        );\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? updateFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  const onSort = (_e, index, direction) => {\n    setRowsFiltered(false);\n    setExpandFirst(false);\n    updateFilters({\n      ...filters,\n      sortIndex: index,\n      sortDirection: direction,\n    });\n  };\n\n  return (\n    <div id=\"workload-recs-list-table\">\n      <PrimaryToolbar\n        filterConfig={{\n          items: filterConfigItems,\n          isDisabled:\n            loadingState ||\n            errorState ||\n            noInput ||\n            recommendations.length === 0,\n        }}\n        pagination={\n          <span className=\"pf-u-font-weight-bold\">\n            {filteredRows?.length === 1\n              ? `${filteredRows.length} Recommendation`\n              : `${filteredRows.length} Recommendations`}\n          </span>\n        }\n        activeFiltersConfig={\n          loadingState || errorState || noInput || recommendations.length === 0\n            ? undefined\n            : activeFiltersConfig\n        }\n      />\n      <Table\n        aria-label={'Workload recommendations table'}\n        ouiaId=\"workload-recommendations\"\n        cells={WORKLOAD_RULES_COLUMNS}\n        ouiaSafe={!loadingState}\n        onCollapse={handleOnCollapse} // TODO: set undefined when there is an empty state\n        rows={\n          errorState || loadingState || noInput || noMatchingRecs ? (\n            [\n              {\n                fullWidth: true,\n                cells: [\n                  {\n                    props: {\n                      colSpan: WORKLOAD_RULES_COLUMNS.length + 1,\n                    },\n                    title: errorState ? (\n                      error?.status === 404 ? (\n                        <NoRecsForWorkloadsDetails />\n                      ) : (\n                        <NoWorkloadsRecsAvailable />\n                      )\n                    ) : loadingState ? (\n                      <Loading />\n                    ) : noMatchingRecs ? (\n                      <NoMatchingRecsForWorkloads />\n                    ) : (\n                      <NoRecsForWorkloadsDetails />\n                    ),\n                  },\n                ],\n              },\n            ]\n          ) : successState ? (\n            displayedRows\n          ) : (\n            <ErrorState />\n          )\n        }\n        variant={TableVariant.compact}\n        isStickyHeader\n        canCollapseAll\n        sortBy={{\n          index: filters.sortIndex,\n          direction: filters.sortDirection,\n        }}\n        onSort={onSort}\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n    </div>\n  );\n};\n\nexport default WorkloadRules;\n\nWorkloadRules.propTypes = {\n  workload: PropTypes.shape({\n    isUninitialized: PropTypes.bool.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    isError: PropTypes.bool.isRequired,\n    isSuccess: PropTypes.bool.isRequired,\n    error: PropTypes.object,\n    data: PropTypes.shape({\n      namespace: PropTypes.shape({\n        uuid: PropTypes.string,\n        name: PropTypes.string,\n      }),\n      cluster: PropTypes.shape({\n        uuid: PropTypes.string,\n        display_name: PropTypes.string,\n      }),\n      status: PropTypes.string,\n      recommendations: PropTypes.arrayOf(\n        PropTypes.shape({\n          check: PropTypes.string,\n          description: PropTypes.string,\n          objects: PropTypes.arrayOf(\n            PropTypes.shape({\n              kind: PropTypes.string,\n              uid: PropTypes.string,\n            })\n          ),\n          remediation: PropTypes.string,\n        })\n      ),\n    }),\n  }),\n  namespaceName: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PageHeader from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Flex, FlexItem, PageSection, Title } from '@patternfly/react-core';\nimport Breadcrumbs from '../Breadcrumbs';\nimport WorkloadsHeader from '../WorkloadHeader';\nimport PropTypes from 'prop-types';\nimport WorkloadRules from '../WorkloadRules/WorkloadRules';\n\nexport const Workload = ({ workload, namespaceId, clusterId }) => {\n  const constructBreadcrumbs = `${\n    workload?.data?.cluster?.display_name || clusterId\n  } | ${workload?.data?.namespace?.name || namespaceId}`;\n  return (\n    <React.Fragment>\n      <PageHeader className=\"pf-m-light ins-inventory-detail\">\n        <Flex direction={{ default: 'column' }}>\n          <FlexItem>\n            <Breadcrumbs current={constructBreadcrumbs} workloads=\"true\" />\n            <WorkloadsHeader\n              workload={workload}\n              namespaceId={namespaceId}\n              clusterId={clusterId}\n            />\n          </FlexItem>\n        </Flex>\n      </PageHeader>\n      <PageSection>\n        <Title className=\"pf-u-mb-lg\" headingLevel=\"h3\" size=\"2xl\">\n          Recommendations\n        </Title>\n        <WorkloadRules\n          workload={workload}\n          namespaceName={workload?.data?.namespace?.name}\n        />\n      </PageSection>\n    </React.Fragment>\n  );\n};\n\nWorkload.propTypes = {\n  clusterId: PropTypes.string.isRequired,\n  namespaceId: PropTypes.string.isRequired,\n  workload: PropTypes.shape({\n    isUninitialized: PropTypes.bool.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    data: PropTypes.shape({\n      namespace: PropTypes.shape({\n        uuid: PropTypes.string,\n        name: PropTypes.string,\n      }),\n      cluster: PropTypes.shape({\n        uuid: PropTypes.string,\n        display_name: PropTypes.string,\n      }),\n      status: PropTypes.string,\n    }),\n  }),\n};\n","import React, { useEffect } from 'react';\nimport { Workload } from './Workload';\nimport { useParams } from 'react-router-dom';\nimport { useGetWorkloadByIdQuery } from '../../Services/SmartProxy';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst WorkloadWrapper = () => {\n  const chrome = useChrome();\n  const { namespaceId, clusterId } = useParams();\n  const workload = useGetWorkloadByIdQuery({\n    namespaceId,\n    clusterId,\n  });\n\n  useEffect(() => {\n    workload.refetch();\n  }, [namespaceId, clusterId]);\n\n  useEffect(() => {\n    const subnav = `${\n      workload?.data?.status === 'ok'\n        ? `${workload?.data?.cluster.display_name} | ${workload?.data?.namespace.name} - Workloads`\n        : `${clusterId} | ${namespaceId} - Workloads`\n    }`;\n    chrome.updateDocumentTitle(`${subnav} - OCP Advisor | Red Hat Insights`);\n  }, [workload, namespaceId, clusterId]);\n\n  return (\n    <Workload\n      workload={workload}\n      namespaceId={namespaceId}\n      clusterId={clusterId}\n    />\n  );\n};\n\nexport default WorkloadWrapper;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst OneLineLoader = () => (\n  <ContentLoader height={20}>\n    <rect x=\"0\" y=\"0\" rx=\"4\" ry=\"4\" width=\"300\" height=\"20\" />\n  </ContentLoader>\n);\n\nexport { OneLineLoader };\n","import { SortByDirection } from '@patternfly/react-table';\nimport omitBy from 'lodash/omitBy';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEmpty from 'lodash/isEmpty';\n\nexport const SEVERITY_OPTIONS = [\n  {\n    value: 'critical',\n    label: 'Critical',\n    iconColor: 'var(--pf-global--danger-color--100)',\n    textColor: 'var(--pf-global--danger-color--100)',\n    hasIcon: true,\n    indexNumber: 4,\n  },\n  {\n    value: 'important',\n    label: 'Important',\n    iconColor: 'var(--pf-global--palette--orange-300)',\n    textColor: 'var(--pf-global--palette--orange-400)',\n    hasIcon: true,\n    indexNumber: 3,\n  },\n  {\n    value: 'moderate',\n    label: 'Moderate',\n    iconColor: 'var(--pf-global--warning-color--100)',\n    textColor: 'var(--pf-global--warning-color--200)',\n    hasIcon: true,\n    indexNumber: 2,\n  },\n  {\n    value: 'low',\n    label: 'Low',\n    iconColor: 'var(--pf-global--Color--200)',\n    textColor: 'var(--pf-global--default-color--300)',\n    hasIcon: true,\n    indexNumber: 1,\n  },\n];\n\nexport const remappingSeverity = (obj, mode) => {\n  const mapping = {\n    1: 'low',\n    2: 'moderate',\n    3: 'important',\n    4: 'critical',\n  };\n  let updatedObj = {};\n\n  if (mode === 'general' || mode === 'label') {\n    for (const key in obj) {\n      if (key in mapping) {\n        updatedObj[mapping[key]] = obj[key];\n      }\n    }\n  } else {\n    updatedObj = mapping[obj];\n  }\n\n  return updatedObj;\n};\n\nexport const hasAnyValueGreaterThanZero = (obj, stringsToCheck) => {\n  for (const key of stringsToCheck) {\n    if (obj[key] > 0) {\n      return true; // Return true if any matching string has a value greater than 0\n    }\n  }\n};\n\nexport const severityTypeToText = (value) => {\n  value = parseInt(value);\n  if (value === 1) {\n    return 'Low';\n  } else if (value === 2) {\n    return 'Moderate';\n  } else if (value === 3) {\n    return 'Important';\n  } else {\n    return 'Critical';\n  }\n};\n\nexport const filtersAreApplied = (params) => {\n  const cleanedUpParams = cloneDeep(params);\n  delete cleanedUpParams.sortIndex;\n  delete cleanedUpParams.sortDirection;\n  delete cleanedUpParams.offset;\n  delete cleanedUpParams.limit;\n  delete cleanedUpParams.sort;\n  return Object.values(cleanedUpParams).filter((value) => !isEmpty(value))\n    .length\n    ? true\n    : false;\n};\n\nexport const capitalize = (str) => {\n  return str?.charAt(0).toUpperCase() + str?.slice(1);\n};\n\nexport const createChips = (category, value) => {\n  if (category.values) {\n    const selectedCategoryValue = category.values.find(\n      (values) => values.value === String(value)\n    );\n\n    return selectedCategoryValue\n      ? {\n          name: selectedCategoryValue.label || selectedCategoryValue.text,\n          value,\n        }\n      : { name: value, value };\n  }\n\n  return { name: value, value };\n};\n\nexport const pruneWorkloadsRulesFilters = (localFilters, filterCategories) => {\n  const prunedFilters = Object.entries(localFilters);\n  return prunedFilters.reduce((arr, [name, value]) => {\n    if (filterCategories[name]) {\n      const category = filterCategories[name];\n      if (\n        (Array.isArray(value) && value.length > 0) ||\n        (typeof value === 'string' && value.trim() !== '')\n      ) {\n        const chips = Array.isArray(value)\n          ? value.map((v) => createChips(category, v))\n          : [createChips(category, value)];\n\n        arr.push({\n          category: capitalize(category.label),\n          chips,\n          urlParam: category.urlParam,\n        });\n      }\n    } else if (name === 'display_name' && value.trim() !== '') {\n      arr.push({\n        category: capitalize(name.replace('display_name', 'Name')),\n        chips: [{ name: value, value }],\n        urlParam: 'display_name',\n      });\n    } else if (\n      (name === 'description' || name === 'object_id') &&\n      value.trim() !== ''\n    ) {\n      arr.push({\n        category: capitalize(name.replace('_', ' ')),\n        chips: [{ name: value, value }],\n        urlParam: name,\n      });\n    }\n\n    return arr;\n  }, []);\n};\n\nexport const switchSort = (sortIndex, item) => {\n  const rule = item[0].rule;\n  switch (sortIndex) {\n    case 1:\n      return rule.details;\n    case 2:\n      return rule.total_risk;\n    case 3:\n      return rule.objects.length;\n    case 4:\n      return rule.modified;\n  }\n};\n\nexport const sortWithSwitch = (sortIndex, sortDirection, filteredRows) => {\n  return sortIndex >= 1\n    ? [...filteredRows]?.sort((a, b) => {\n        const d = sortDirection === SortByDirection.asc ? 1 : -1;\n        return switchSort(sortIndex, a) > switchSort(sortIndex, b)\n          ? d\n          : switchSort(sortIndex, b) > switchSort(sortIndex, a)\n          ? -d\n          : 0;\n      })\n    : [...filteredRows];\n};\n\nexport const flatMapRows = (filteredRows, expandFirst) => {\n  return filteredRows.flatMap((row, index) => {\n    const updatedRow = [...row];\n    if (expandFirst && index === 0) {\n      row[0].isOpen = true;\n    }\n    row[1].parent = index * 2;\n    return updatedRow;\n  });\n};\n\nexport const passObjectsFilters = (objects, filters) => {\n  const cleanedUpFilters = omitBy(cloneDeep(filters), isEmpty);\n  return Object.entries(cleanedUpFilters).every(([filterKey, filterValue]) => {\n    switch (filterKey) {\n      case 'display_name':\n        return (\n          filterValue &&\n          objects?.display_name\n            ?.toLowerCase()\n            .includes(filterValue.toLowerCase())\n        );\n      case 'object_id':\n        return (\n          filterValue &&\n          objects?.uid?.toLowerCase().includes(filterValue.toLowerCase())\n        );\n      default:\n        return true;\n    }\n  });\n};\n\nexport const workloadsRulesRemoveFilterParam = (\n  currentFilters,\n  updateFilters,\n  param\n) => {\n  const { [param]: omitted, ...newFilters } = { ...currentFilters };\n  updateFilters({\n    ...newFilters,\n    ...(param === 'description'\n      ? { description: '' }\n      : param === 'total_risk'\n      ? { total_risk: [] }\n      : param === 'object_id'\n      ? { object_id: '' }\n      : param === 'object_name'\n      ? { object_name: '' }\n      : {}),\n  });\n};\n\nexport const workloadsRulesAddFilterParam = (\n  currentFilters,\n  updateFilters,\n  param,\n  values\n) =>\n  values.length > 0\n    ? updateFilters({\n        ...currentFilters,\n        ...{ [param]: values },\n      })\n    : workloadsRulesRemoveFilterParam(currentFilters, updateFilters, param);\n\nexport const passFilterWorkloadsRecs = (recommendation, filters) => {\n  const cleanedUpFilters = omitBy(cloneDeep(filters), isEmpty);\n\n  return Object.entries(cleanedUpFilters).every(([filterKey, filterValue]) => {\n    switch (filterKey) {\n      case 'description':\n        return (\n          filterValue &&\n          recommendation.details\n            .toLowerCase()\n            .includes(filterValue.toLowerCase())\n        );\n      case 'object_id':\n        return (\n          filterValue &&\n          recommendation.objects.some((obj) =>\n            obj.uid.toLowerCase().includes(filterValue.toLowerCase())\n          )\n        );\n      case 'total_risk':\n        return (\n          filterValue && filterValue.includes(String(recommendation.total_risk))\n        );\n      case 'object_name':\n        return (\n          filterValue &&\n          recommendation.objects.some((obj) =>\n            obj.display_name.toLowerCase().includes(filterValue.toLowerCase())\n          )\n        );\n      default:\n        return true;\n    }\n  });\n};\n"],"names":["Breadcrumbs","current","workloads","intl","splitUrl","useLocation","pathname","split","Breadcrumb","ouiaId","BreadcrumbItem","className","Link","to","relative","formatMessage","insightsHeader","isActive","propTypes","passFilters","rule","filters","Object","entries","every","filterKey","filterValue","description","toLowerCase","includes","total_risk","urlParam","String","category","tags","find","c","impact","impacting","length","some","v","impacted_clusters_count","likelihood","rule_status","disabled","res_risk","resolution_risk","passFiltersCluster","cluster","cluster_name","cluster_id","hits","parseInt","total_hit_count","hits_by_total_risk","toValidSemVer","cluster_version","buildFilterChips","categories","localFilters","sortIndex","sortDirection","sort","offset","limit","filterCategories","reduce","arr","it","key","item","chips","Array","isArray","map","value","selectedCategoryValue","values","name","text","label","title","pruneFilters","paramParser","search","searchParams","URLSearchParams","from","acc","JSON","parse","translateSortParams","substring","startsWith","direction","object_id","updateSearchParams","columnMapping","url","URL","window","location","origin","index","indexMapping","set","console","error","forEach","history","replaceState","href","compareSemVer","v1","v2","d","compare","version","coerce","undefined","valid","removeFilterParam","currentFilters","updateFilters","param","omitted","newFilters","addFilterParam","passFilterWorkloads","generalSeverityRemapped","metadata","hits_by_severity","display_name","uuid","namespace","severity","Card","CardBody","WorkloadHeader","workloadData","namespaceId","clusterId","isUninitialized","isFetching","data","workload","Grid","id","md","hasGutter","GridItem","span","Title","size","headingLevel","Skeleton","Stack","StackItem","last_checked_at","DateFormat","date","type","isRequired","status","WorkloadsHeaderWrapper","ObjectsModalTable","objects","objectsWithNames","objectsData","dispatch","useDispatch","filtersApplied","setFiltersApplied","useState","filteredRows","setFilteredRows","displayedRows","setDisplayedRows","rowsFiltered","setRowsFiltered","useSelector","workloadsObjectsListState","page","Math","floor","perPage","payload","preparedRows","renderTableWithNames","loadingState","activeFiltersConfig","showDeleteButton","deleteTitle","onDelete","_event","itemsToRemove","isAll","newFilter","filter","useEffect","allrows","object","buildFilteredRows","slice","onSetPage","_e","pageNumber","newOffset","onPerPageSelect","PrimaryToolbar","pagination","isCompact","itemCount","filterConfig","items","filterValues","onChange","placeholder","filterConfigItems","Loading","variant","Thead","Tr","Th","width","kind","Tbody","Td","dataLabel","uid","Pagination","onPageInput","widgetId","bottom","isDisabled","ObjectsModal","isModalOpen","setIsModalOpen","isOpen","onClose","objectsNamesArePresent","OpenshiftCodeBlocks","code1","code2","copied","setCopied","CodeBlock","actions","code","concat","CodeBlockAction","ClipboardCopyButton","textId","onClick","e","event","navigator","clipboard","writeText","toString","clipboardCopyFunc","exitDelay","maxWidth","onTooltipHidden","CodeBlockCode","ExpandedRulesDetails","more_info","resolution","namespaceName","reason","extra_data","objectsArePresent","moreInfoIsPresent","objectsModalOpen","setObjectsModalOpen","style","boxShadow","isPlain","CardHeader","Icon","template","definitions","Divider","borders","modifier","Button","isInline","check_name","check_url","WorkloadRules","isError","isSuccess","recommendations","errorState","successState","noInput","isAllExpanded","setIsAllExpanded","filterBuilding","setFilterBuilding","expandFirst","setExpandFirst","workloadsRecsListState","noMatchingRecs","buildDisplayedRows","paramsObject","sortObj","indexOf","sortingRows","allRows","filtersArePresent","expandedRowsSet","Set","ruleExpanded","details","recs","has","cells","InsightsLabel","rest","modified","fullWidth","Table","ouiaSafe","onCollapse","rowId","row","hasOwn","rows","props","colSpan","compact","isStickyHeader","canCollapseAll","sortBy","onSort","check","remediation","Workload","constructBreadcrumbs","PageHeader","Flex","default","FlexItem","PageSection","chrome","useChrome","useParams","refetch","subnav","updateDocumentTitle","OneLineLoader","height","x","y","rx","ry","SEVERITY_OPTIONS","iconColor","textColor","hasIcon","indexNumber","remappingSeverity","obj","mode","mapping","updatedObj","hasAnyValueGreaterThanZero","stringsToCheck","filtersAreApplied","params","cleanedUpParams","capitalize","str","charAt","toUpperCase","createChips","pruneWorkloadsRulesFilters","trim","push","replace","switchSort","sortWithSwitch","a","b","asc","flatMapRows","flatMap","updatedRow","parent","passObjectsFilters","cleanedUpFilters","workloadsRulesRemoveFilterParam","object_name","workloadsRulesAddFilterParam","passFilterWorkloadsRecs","recommendation"],"sourceRoot":""}