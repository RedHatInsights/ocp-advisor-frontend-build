{"version":3,"file":"js/WorkloadsList.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/Components/Common/Tables.js","webpack:///./src/Components/Loading/Loading.js","webpack:///./src/Components/WorkloadsListTable/WorkloadsListTable.js","webpack:///./src/Components/WorkloadsListTable/index.js","webpack:///./src/Components/WorkloadsList/index.js","webpack:///./src/Utilities/Workloads.js"],"sourcesContent":["import capitalize from 'lodash/capitalize';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { useEffect, useState } from 'react';\nimport { coerce, compare, valid } from 'semver';\nimport {\n  CLUSTER_FILTER_CATEGORIES,\n  FILTER_CATEGORIES,\n  RULE_CATEGORIES,\n} from '../../AppConstants';\nimport {\n  hasAnyValueGreaterThanZero,\n  remappingSeverity,\n} from '../../Utilities/Workloads';\n\nexport const passFilters = (rule, filters) =>\n  Object.entries(filters).every(([filterKey, filterValue]) => {\n    switch (filterKey) {\n      case 'text':\n        return rule.description\n          .toLowerCase()\n          .includes(filterValue.toLowerCase());\n      case FILTER_CATEGORIES.total_risk.urlParam:\n        return filterValue.includes(String(rule.total_risk));\n      case FILTER_CATEGORIES.category.urlParam:\n        return rule.tags.find((c) =>\n          filterValue.includes(String(RULE_CATEGORIES[c]))\n        );\n      case FILTER_CATEGORIES.impact.urlParam:\n        return filterValue.includes(String(rule.impact));\n      case FILTER_CATEGORIES.impacting.urlParam:\n        return filterValue.length > 0\n          ? filterValue.some((v) => {\n              if (v === 'true') {\n                return rule.impacted_clusters_count > 0;\n              }\n              if (v === 'false') {\n                return rule.impacted_clusters_count === 0;\n              }\n            })\n          : true;\n      case FILTER_CATEGORIES.likelihood.urlParam:\n        return filterValue.includes(String(rule.likelihood));\n      case FILTER_CATEGORIES.rule_status.urlParam:\n        return (\n          filterValue === 'all' ||\n          (filterValue === 'disabled' && rule.disabled) ||\n          (filterValue === 'enabled' && !rule.disabled)\n        );\n      case FILTER_CATEGORIES.res_risk.urlParam:\n        return filterValue.includes(String(rule.resolution_risk));\n      default:\n        return true;\n    }\n  });\n\nexport const passFiltersCluster = (cluster, filters) =>\n  Object.entries(filters).every(([filterKey, filterValue]) => {\n    switch (filterKey) {\n      case 'text':\n        return (cluster.cluster_name || cluster.cluster_id)\n          .toLowerCase()\n          .includes(filterValue.toLowerCase());\n      case CLUSTER_FILTER_CATEGORIES.hits.urlParam:\n        return (\n          // clusters with at least one rule hit\n          (filterValue.length === 0 && parseInt(cluster.total_hit_count) > 0) ||\n          // all clusters\n          filterValue.includes('all') ||\n          // clusters with at least one rule hit for any of the active risk filters\n          filterValue.some((v) => cluster.hits_by_total_risk[v] > 0)\n        );\n      case 'version':\n        return (\n          filterValue.length === 0 ||\n          filterValue.includes(toValidSemVer(cluster.cluster_version))\n        );\n      default:\n        return true;\n    }\n  });\n\nconst pruneFilters = (localFilters, filterCategories) => {\n  const prunedFilters = Object.entries(localFilters || {});\n  return prunedFilters.reduce((arr, it) => {\n    const [key, item] = it;\n    if (filterCategories[key]) {\n      const category = filterCategories[key];\n      const chips = Array.isArray(item)\n        ? item.map((value) => {\n            const selectedCategoryValue = category.values.find(\n              (values) => values.value === String(value)\n            );\n            return selectedCategoryValue\n              ? {\n                  name:\n                    selectedCategoryValue.text || selectedCategoryValue.label,\n                  value,\n                }\n              : { name: value, value };\n          })\n        : [\n            {\n              name: category.values.find(\n                (values) => values.value === String(item)\n              ).label,\n              value: item,\n            },\n          ];\n      return [\n        ...arr,\n        {\n          category: capitalize(category.title),\n          chips,\n          urlParam: category.urlParam,\n        },\n      ];\n    } else if (key === 'text') {\n      return [\n        ...arr,\n        ...(item.length > 0\n          ? [\n              {\n                category: 'Name',\n                chips: [{ name: item, value: item }],\n                urlParam: key,\n              },\n            ]\n          : []),\n      ];\n    } else if (key === 'version') {\n      return [\n        ...arr,\n        ...(item.length > 0\n          ? [\n              {\n                category: 'Version',\n                chips: item.map((it) => ({\n                  name: it,\n                  value: it,\n                })),\n                urlParam: key,\n              },\n            ]\n          : []),\n      ];\n    } else if (key === 'namespace_name') {\n      return [\n        ...arr,\n        ...(item.length > 0\n          ? [\n              {\n                category: 'Namespace name',\n                chips: [{ name: item, value: item }],\n                urlParam: key,\n              },\n            ]\n          : []),\n      ];\n    } else if (key === 'cluster_name') {\n      return [\n        ...arr,\n        ...(item.length > 0\n          ? [\n              {\n                category: 'Cluster name',\n                chips: [{ name: item, value: item }],\n                urlParam: key,\n              },\n            ]\n          : []),\n      ];\n    }\n  }, []);\n};\n\nexport const buildFilterChips = (filters, categories) => {\n  const localFilters = cloneDeep(filters);\n  delete localFilters.sortIndex;\n  delete localFilters.sortDirection;\n  delete localFilters.sort;\n  delete localFilters.offset;\n  delete localFilters.limit;\n  localFilters?.hits &&\n    localFilters.hits.length === 0 &&\n    delete localFilters.hits;\n  return pruneFilters(localFilters, categories);\n};\n\n// parses url params for use in table/filter chips\nexport const paramParser = (search) => {\n  const searchParams = new URLSearchParams(search);\n  return Array.from(searchParams).reduce(\n    (acc, [key, value]) => ({\n      ...acc,\n      [key]: [\n        'text',\n        'first',\n        'rule_status',\n        'sort',\n        'cluster_name',\n        'namespace_name',\n        'description',\n        'object_id',\n      ].includes(key)\n        ? value // just copy the full value\n        : value === 'true' || value === 'false'\n        ? JSON.parse(value) // parse boolean\n        : // parse array of values\n          value.split(','),\n    }),\n    {}\n  );\n};\n\nexport const translateSortParams = (value) => ({\n  name: value.substring(value.startsWith('-') ? 1 : 0),\n  direction: value.startsWith('-') ? 'desc' : 'asc',\n  description: value.substring(value.startsWith('-') ? 1 : 0),\n  object_id: value.substring(value.startsWith('-') ? 1 : 0),\n});\n\nexport const translateSortValue = (index, indexMapping, direction) => {\n  if (!['desc', 'asc'].includes(direction)) {\n    console.error('Invalid sort parameters (is not asc nor desc)');\n  }\n  return `${direction === 'asc' ? '' : '-'}${indexMapping[index]}`;\n};\n\n// TODO: remove since unused\nexport const debounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [delay, value]);\n\n  return debouncedValue;\n};\n\nexport const updateSearchParams = (filters = {}, columnMapping) => {\n  const url = new URL(window.location.origin + window.location.pathname);\n  // separately check the sort param\n  url.searchParams.set(\n    'sort',\n    translateSortValue(filters.sortIndex, columnMapping, filters.sortDirection)\n  );\n  // check the rest of filters\n  Object.entries(filters).forEach(([key, value]) => {\n    return (\n      key !== 'sortIndex' &&\n      key !== 'sortDirection' &&\n      key !== 'sort' &&\n      value !== '' &&\n      !(Array.isArray(value) && value.length === 0) &&\n      url.searchParams.set(key, value)\n    );\n  });\n  window.history.replaceState(null, null, url.href);\n};\n\n// TODO: move to Utils.js\nexport const compareSemVer = (v1, v2, d) => d * compare(v1, v2);\nexport const toValidSemVer = (version) =>\n  coerce(version === undefined || !valid(coerce(version)) ? '0.0.0' : version)\n    .version;\n\nexport const removeFilterParam = (currentFilters, updateFilters, param) => {\n  const { [param]: omitted, ...newFilters } = { ...currentFilters, offset: 0 };\n  updateFilters({\n    ...newFilters,\n    ...(param === 'text'\n      ? { text: '' }\n      : param === 'hits'\n      ? { hits: [] }\n      : param === 'version'\n      ? { version: [] }\n      : param === 'object_id'\n      ? { object_id: '' }\n      : {}),\n  });\n};\n\nexport const addFilterParam = (currentFilters, updateFilters, param, values) =>\n  values.length > 0\n    ? updateFilters({\n        ...currentFilters,\n        offset: 0,\n        ...{ [param]: values },\n      })\n    : removeFilterParam(currentFilters, updateFilters, param);\n\nexport const passFilterWorkloads = (workloads, filters) => {\n  const generalSeverityRemapped = remappingSeverity(\n    workloads.metadata.hits_by_severity,\n    'general'\n  );\n  return Object.entries(filters).every(([filterKey, filterValue]) => {\n    switch (filterKey) {\n      case 'cluster_name':\n        return (workloads.cluster.display_name || workloads.cluster.uuid)\n          .toLowerCase()\n          .includes(filterValue.toLowerCase());\n      case 'namespace_name':\n        return (workloads.namespace.name || workloads.namespace.uuid)\n          .toLowerCase()\n          .includes(filterValue.toLowerCase());\n      case 'severity':\n        return (\n          filterValue.length === 0 ||\n          hasAnyValueGreaterThanZero(generalSeverityRemapped, filters.severity)\n        );\n      default:\n        return true;\n    }\n  });\n};\n","import React from 'react';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { List } from 'react-content-loader';\n\nconst Loading = () => (\n  <Card ouiaId=\"loading-skeleton\">\n    <CardBody>\n      <List />\n    </CardBody>\n  </Card>\n);\n\nexport default Loading;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { TableVariant } from '@patternfly/react-table';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n} from '@patternfly/react-table/deprecated';\nimport { PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport {\n  WORKLOADS_LIST_COLUMNS,\n  WORKLOADS_LIST_COLUMNS_KEYS,\n  WORKLOADS_TABLE_CELL_LAST_SEEN,\n  WORKLOADS_TABLE_CELL_NAME,\n  WORKLOADS_TABLE_CELL_OBJECTS,\n  WORKLOADS_TABLE_CELL_RECOMMENDATIONS,\n  WORKLOADS_TABLE_FILTER_CATEGORIES,\n  // WORKLOADS_TABLE_SEVERITY,\n} from '../../AppConstants';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Link, useLocation } from 'react-router-dom';\nimport { BASE_PATH } from '../../Routes';\nimport { Pagination } from '@patternfly/react-core';\n/* import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter/conditionalFilterConstants'; */\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  WORKLOADS_TABLE_INITIAL_STATE,\n  resetFilters,\n  updateWorkloadsListFilters,\n} from '../../Services/Filters';\nimport isEqual from 'lodash/isEqual';\nimport {\n  buildFilterChips,\n  passFilterWorkloads,\n  removeFilterParam as _removeFilterParam,\n  /* addFilterParam as _addFilterParam, */\n  translateSortParams,\n  paramParser,\n  updateSearchParams,\n} from '../Common/Tables';\nimport {\n  ErrorState,\n  NoMatchingWorkloads,\n  NoDVOInstalledOrDataCollected,\n} from '../MessageState/EmptyStates';\nimport Loading from '../Loading/Loading';\n/* import ShieldSet from '../ShieldSet'; */\nimport { filtersAreApplied } from '../../Utilities/Workloads';\n\nconst WorkloadsListTable = ({\n  query: {\n    isError,\n    error,\n    isUninitialized,\n    isFetching,\n    isSuccess,\n    data,\n    refetch,\n  },\n}) => {\n  const dispatch = useDispatch();\n  const filters = useSelector(({ filters }) => filters.workloadsListState);\n  const workloads = data?.workloads || [];\n  const perPage = filters.limit;\n  const page = Math.floor(filters.offset / filters.limit) + 1;\n\n  const [rows, setRows] = useState([]);\n  const [filteredRows, setFilteredRows] = useState([]);\n  const [rowsFiltered, setRowsFiltered] = useState(false);\n  const [filtersApplied, setFiltersApplied] = useState(false);\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const updateFilters = (payload) =>\n    dispatch(updateWorkloadsListFilters(payload));\n  const removeFilterParam = (param) =>\n    _removeFilterParam(filters, updateFilters, param);\n\n  const loadingState = isUninitialized || isFetching || !rowsFiltered;\n  const errorState = isError;\n  const noMatch = filteredRows.length === 0;\n  const successState = isSuccess;\n  const { search } = useLocation();\n\n  /* const addFilterParam = (param, values) =>\n    _addFilterParam(filters, updateFilters, param, values); */\n\n  useEffect(() => {\n    setFilteredRows(buildFilteredRows(workloads));\n  }, [\n    data,\n    filters.namespace_name,\n    filters.cluster_name,\n    filters.severity,\n    filters.sortDirection,\n    filters.sortIndex,\n  ]);\n\n  useEffect(() => {\n    if (search && filterBuilding) {\n      const paramsObject = paramParser(search);\n\n      if (paramsObject.sort) {\n        const sortObj = translateSortParams(paramsObject.sort);\n        paramsObject.sortIndex = WORKLOADS_LIST_COLUMNS_KEYS.indexOf(\n          sortObj.name\n        );\n        paramsObject.sortDirection = sortObj.direction;\n      }\n      paramsObject.offset &&\n        (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit &&\n        (paramsObject.limit = Number(paramsObject.limit[0]));\n      paramsObject.impacting &&\n        !Array.isArray(paramsObject.impacting) &&\n        (paramsObject.impacting = [`${paramsObject.impacting}`]);\n      updateFilters({ ...filters, ...paramsObject });\n    }\n    setFilterBuilding(false);\n  }, []);\n\n  useEffect(() => {\n    if (!filterBuilding) {\n      updateSearchParams(filters, WORKLOADS_LIST_COLUMNS_KEYS);\n    }\n  }, [filters, filterBuilding]);\n\n  useEffect(() => {\n    setRows(buildDisplayedRows(filteredRows));\n    setRowsFiltered(true);\n    setFiltersApplied(filtersAreApplied(filters));\n  }, [filteredRows, filters.limit, filters.offset]);\n\n  const buildFilteredRows = (items) => {\n    setRowsFiltered(false);\n    const filtered = items\n      .filter((workloadData) => {\n        return passFilterWorkloads(workloadData, filters);\n      })\n      .sort((a, b) => {\n        let fst, snd;\n        const d = filters.sortDirection === 'asc' ? 1 : -1;\n        switch (filters.sortIndex) {\n          case WORKLOADS_TABLE_CELL_NAME:\n            fst = a.cluster?.display_name || a.cluster.uuid;\n            snd = b.cluster?.display_name || b.cluster.uuid;\n            return d * fst.localeCompare(snd);\n          case WORKLOADS_TABLE_CELL_RECOMMENDATIONS:\n            fst = a.metadata.recommendations || 0;\n            snd = b.metadata.recommendations || 0;\n            return fst > snd ? d : snd > fst ? -d : 0;\n          // case WORKLOADS_TABLE_SEVERITY:\n          //   fst = a.metadata.hits_by_severity || { 1: 0, 2: 0, 3: 0, 4: 0 };\n          //   snd = b.metadata.hits_by_severity || { 1: 0, 2: 0, 3: 0, 4: 0 };\n          //   for (let i = 4; i > 0; i--) {\n          //     if (fst[i] > snd[i]) return d;\n          //     if (fst[i] < snd[i]) return -d;\n          //   }\n          //   return 0;\n          case WORKLOADS_TABLE_CELL_OBJECTS:\n            fst = a.metadata.objects || 0;\n            snd = b.metadata.objects || 0;\n            return fst > snd ? d : snd > fst ? -d : 0;\n          case WORKLOADS_TABLE_CELL_LAST_SEEN:\n            fst = new Date(a.metadata.last_checked_at || 0);\n            snd = new Date(b.metadata.last_checked_at || 0);\n            return fst > snd ? d : snd > fst ? -d : 0;\n        }\n      });\n\n    return filtered;\n  };\n\n  const buildDisplayedRows = (rows) => {\n    return rows\n      .slice(perPage * (page - 1), perPage * (page - 1) + perPage)\n      .map((item, index) => ({\n        entity: item,\n        cells: [\n          <span key={index}>\n            <Link\n              to={`${BASE_PATH}/workloads/${item.cluster.uuid}/${item.namespace.uuid}`}\n            >\n              <p key={`${index}-cluster`}>\n                {item.cluster.display_name || item.cluster.uuid}\n              </p>\n              <p key={`${index}-namespace`}>\n                {item.namespace.name || item.namespace.uuid}\n              </p>\n            </Link>\n          </span>,\n          item.metadata.recommendations,\n          item.metadata.objects,\n          <span key={index}>\n            <DateFormat\n              extraTitle=\"Last seen: \"\n              date={item.metadata.last_checked_at}\n              variant=\"relative\"\n            />\n          </span>,\n        ],\n      }));\n  };\n\n  const filterConfigItems = [\n    {\n      label: 'Cluster name',\n      type: 'text',\n      filterValues: {\n        key: 'cluster_name',\n        onChange: (_event, value) =>\n          updateFilters({ ...filters, offset: 0, cluster_name: value }),\n        value: filters.cluster_name,\n        placeholder: 'Filter by cluster name',\n      },\n    },\n    {\n      label: 'Namespace name',\n      type: 'text',\n      filterValues: {\n        key: 'namespace_name',\n        onChange: (_event, value) =>\n          updateFilters({ ...filters, offset: 0, namespace_name: value }),\n        value: filters.namespace_name,\n        placeholder: 'Filter by namespace name',\n      },\n    },\n    /* {\n      label: 'Severity',\n      type: conditionalFilterType.checkbox,\n      id: WORKLOADS_TABLE_FILTER_CATEGORIES.severity.urlParam,\n      value: `checkbox-${WORKLOADS_TABLE_FILTER_CATEGORIES.severity.urlParam}`,\n      filterValues: {\n        key: `${WORKLOADS_TABLE_FILTER_CATEGORIES.severity.urlParam}-filter`,\n        onChange: (_event, value) => addFilterParam('severity', value),\n        value: filters.severity,\n        items: WORKLOADS_TABLE_FILTER_CATEGORIES.severity.values,\n        placeholder: 'Filter by severity',\n      },\n    }, */\n  ];\n\n  const activeFiltersConfig = {\n    showDeleteButton: filtersApplied,\n    deleteTitle: 'Reset filters',\n    filters: buildFilterChips(filters, WORKLOADS_TABLE_FILTER_CATEGORIES),\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        if (isEqual(filters, WORKLOADS_TABLE_INITIAL_STATE)) {\n          refetch();\n        } else {\n          resetFilters(filters, WORKLOADS_TABLE_INITIAL_STATE, updateFilters);\n        }\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? updateFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  const onSetPage = (_e, pageNumber) => {\n    setRowsFiltered(false);\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    updateFilters({ ...filters, offset: newOffset });\n  };\n\n  const onSetPerPage = (_e, perPage) => {\n    if (perPage !== filters.limit) {\n      setRowsFiltered(false);\n      updateFilters({ ...filters, limit: perPage, offset: 0 });\n    }\n  };\n\n  const onSort = (_e, index, direction) => {\n    setRowsFiltered(false);\n    updateFilters({ ...filters, sortIndex: index, sortDirection: direction });\n  };\n\n  return isError && error.status === 404 ? (\n    <NoDVOInstalledOrDataCollected />\n  ) : isSuccess && workloads.length === 0 ? (\n    <NoDVOInstalledOrDataCollected />\n  ) : (\n    <div id=\"workloads-list-table\">\n      <PrimaryToolbar\n        pagination={{\n          itemCount: filteredRows.length,\n          page,\n          perPage,\n          onSetPage,\n          onPerPageSelect: onSetPerPage,\n          isCompact: true,\n          ouiaId: 'pager',\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={\n          isError ? { showDeleteButton: false } : activeFiltersConfig\n        }\n      />\n      <Table\n        aria-label=\"Table of workloads\"\n        ouiaId=\"workloads\"\n        variant={TableVariant.compact}\n        cells={WORKLOADS_LIST_COLUMNS}\n        rows={\n          errorState || loadingState || noMatch ? (\n            [\n              {\n                fullWidth: true,\n                cells: [\n                  {\n                    props: {\n                      colSpan: WORKLOADS_LIST_COLUMNS.length + 1,\n                    },\n                    title: errorState ? (\n                      <ErrorState />\n                    ) : loadingState ? (\n                      <Loading />\n                    ) : (\n                      <NoMatchingWorkloads />\n                    ),\n                  },\n                ],\n              },\n            ]\n          ) : successState ? (\n            rows\n          ) : (\n            <ErrorState />\n          )\n        }\n        isStickyHeader\n        sortBy={{\n          index: filters.sortIndex,\n          direction: filters.sortDirection,\n        }}\n        onSort={onSort}\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n      <Pagination\n        ouiaId=\"pager\"\n        itemCount={filteredRows.length}\n        page={page}\n        perPage={perPage}\n        onSetPage={onSetPage}\n        onPerPageSelect={onSetPerPage}\n        onPageInput={onSetPage}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </div>\n  );\n};\n\nWorkloadsListTable.propTypes = {\n  query: PropTypes.object.isRequired,\n};\n\nexport { WorkloadsListTable };\n","import React from 'react';\nimport { useGetWorkloadsQuery } from '../../Services/SmartProxy';\nimport { WorkloadsListTable } from './WorkloadsListTable';\n\nconst WorkloadsListTableWrapper = () => {\n  const query = useGetWorkloadsQuery();\n  return <WorkloadsListTable query={query} />;\n};\n\nexport default WorkloadsListTableWrapper;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport PageHeader from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport messages from '../../Messages';\nimport WorkloadsListTable from '../WorkloadsListTable';\nimport { Title } from '@patternfly/react-core';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst WorkloadsList = () => {\n  const intl = useIntl();\n  const chrome = useChrome();\n\n  chrome.updateDocumentTitle(\n    intl.formatMessage(messages.documentTitle, {\n      subnav: 'Workloads',\n    })\n  );\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"ins-c-clusters-header\">\n        <Title headingLevel=\"h1\" ouiaId=\"page-header\">\n          Workloads\n        </Title>\n      </PageHeader>\n      <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n        <WorkloadsListTable />\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default WorkloadsList;\n","import { SortByDirection } from '@patternfly/react-table';\nimport _ from 'lodash';\n\nexport const SEVERITY_OPTIONS = [\n  {\n    value: 'critical',\n    label: 'Critical',\n    iconColor: 'var(--pf-global--danger-color--100)',\n    textColor: 'var(--pf-global--danger-color--100)',\n    hasIcon: true,\n    indexNumber: 4,\n  },\n  {\n    value: 'important',\n    label: 'Important',\n    iconColor: 'var(--pf-global--palette--orange-300)',\n    textColor: 'var(--pf-global--palette--orange-400)',\n    hasIcon: true,\n    indexNumber: 3,\n  },\n  {\n    value: 'moderate',\n    label: 'Moderate',\n    iconColor: 'var(--pf-global--warning-color--100)',\n    textColor: 'var(--pf-global--warning-color--200)',\n    hasIcon: true,\n    indexNumber: 2,\n  },\n  {\n    value: 'low',\n    label: 'Low',\n    iconColor: 'var(--pf-global--Color--200)',\n    textColor: 'var(--pf-global--default-color--300)',\n    hasIcon: true,\n    indexNumber: 1,\n  },\n];\n\nexport const remappingSeverity = (obj, mode) => {\n  const mapping = {\n    1: 'low',\n    2: 'moderate',\n    3: 'important',\n    4: 'critical',\n  };\n  let updatedObj = {};\n\n  if (mode === 'general' || mode === 'label') {\n    for (const key in obj) {\n      if (key in mapping) {\n        updatedObj[mapping[key]] = obj[key];\n      }\n    }\n  } else {\n    updatedObj = mapping[obj];\n  }\n\n  return updatedObj;\n};\n\nexport const hasAnyValueGreaterThanZero = (obj, stringsToCheck) => {\n  for (const key of stringsToCheck) {\n    if (obj[key] > 0) {\n      return true; // Return true if any matching string has a value greater than 0\n    }\n  }\n};\n\nexport const severityTypeToText = (value) => {\n  value = parseInt(value);\n  if (value === 1) {\n    return 'Low';\n  } else if (value === 2) {\n    return 'Moderate';\n  } else if (value === 3) {\n    return 'Important';\n  } else {\n    return 'Critical';\n  }\n};\n\nexport const filtersAreApplied = (params) => {\n  const cleanedUpParams = _.cloneDeep(params);\n  delete cleanedUpParams.sortIndex;\n  delete cleanedUpParams.sortDirection;\n  delete cleanedUpParams.offset;\n  delete cleanedUpParams.limit;\n  delete cleanedUpParams.sort;\n  return Object.values(cleanedUpParams).filter((value) => !_.isEmpty(value))\n    .length\n    ? true\n    : false;\n};\n\nexport const capitalize = (str) => {\n  return str?.charAt(0).toUpperCase() + str?.slice(1);\n};\n\nexport const createChips = (category, value) => {\n  if (category.values) {\n    const selectedCategoryValue = category.values.find(\n      (values) => values.value === String(value)\n    );\n\n    return selectedCategoryValue\n      ? {\n          name: selectedCategoryValue.label || selectedCategoryValue.text,\n          value,\n        }\n      : { name: value, value };\n  }\n\n  return { name: value, value };\n};\n\nexport const pruneWorkloadsRulesFilters = (localFilters, filterCategories) => {\n  const prunedFilters = Object.entries(localFilters);\n  return prunedFilters.reduce((arr, [name, value]) => {\n    if (filterCategories[name]) {\n      const category = filterCategories[name];\n      if (\n        (Array.isArray(value) && value.length > 0) ||\n        (typeof value === 'string' && value.trim() !== '')\n      ) {\n        const chips = Array.isArray(value)\n          ? value.map((v) => createChips(category, v))\n          : [createChips(category, value)];\n\n        arr.push({\n          category: capitalize(category.label),\n          chips,\n          urlParam: category.urlParam,\n        });\n      }\n    } else if (\n      (name === 'description' || name === 'object_id') &&\n      value.trim() !== ''\n    ) {\n      arr.push({\n        category: capitalize(name.replace('_', ' ')),\n        chips: [{ name: value, value }],\n        urlParam: name,\n      });\n    }\n\n    return arr;\n  }, []);\n};\n\nexport const switchSort = (sortIndex, item) => {\n  const rule = item[0].rule;\n  switch (sortIndex) {\n    case 1:\n      return rule.details;\n    case 2:\n      return rule.total_risk;\n    case 3:\n      return rule.objects.length;\n    case 4:\n      return rule.modified;\n  }\n};\n\nexport const sortWithSwitch = (sortIndex, sortDirection, filteredRows) => {\n  return sortIndex >= 1\n    ? [...filteredRows]?.sort((a, b) => {\n        const d = sortDirection === SortByDirection.asc ? 1 : -1;\n        return switchSort(sortIndex, a) > switchSort(sortIndex, b)\n          ? d\n          : switchSort(sortIndex, b) > switchSort(sortIndex, a)\n          ? -d\n          : 0;\n      })\n    : [...filteredRows];\n};\n\nexport const flatMapRows = (filteredRows, expandFirst) => {\n  return filteredRows.flatMap((row, index) => {\n    const updatedRow = [...row];\n    if (expandFirst && index === 0) {\n      row[0].isOpen = true;\n    }\n    row[1].parent = index * 2;\n    return updatedRow;\n  });\n};\n\nexport const passObjectsFilters = (objects, filters) => {\n  return Object.entries(filters).some(([filterKey, filterValue]) => {\n    switch (filterKey) {\n      case 'object_id':\n        return objects.uid.toLowerCase().includes(filterValue.toLowerCase());\n      default:\n        return false;\n    }\n  });\n};\n\nexport const workloadsRulesRemoveFilterParam = (\n  currentFilters,\n  updateFilters,\n  param\n) => {\n  const { [param]: omitted, ...newFilters } = { ...currentFilters };\n  updateFilters({\n    ...newFilters,\n    ...(param === 'description'\n      ? { description: '' }\n      : param === 'total_risk'\n      ? { total_risk: [] }\n      : param === 'object_id'\n      ? { object_id: '' }\n      : {}),\n  });\n};\n\nexport const workloadsRulesAddFilterParam = (\n  currentFilters,\n  updateFilters,\n  param,\n  values\n) =>\n  values.length > 0\n    ? updateFilters({\n        ...currentFilters,\n        ...{ [param]: values },\n      })\n    : workloadsRulesRemoveFilterParam(currentFilters, updateFilters, param);\n\nexport const passFilterWorkloadsRecs = (recommendation, filters) => {\n  const cleanedUpFilters = _.omitBy(_.cloneDeep(filters), _.isEmpty);\n\n  return Object.entries(cleanedUpFilters).every(([filterKey, filterValue]) => {\n    switch (filterKey) {\n      case 'description':\n        return (\n          filterValue &&\n          recommendation.details\n            .toLowerCase()\n            .includes(filterValue.toLowerCase())\n        );\n      case 'object_id':\n        return (\n          filterValue &&\n          recommendation.objects.some((obj) =>\n            obj.uid.toLowerCase().includes(filterValue.toLowerCase())\n          )\n        );\n      case 'total_risk':\n        return (\n          filterValue && filterValue.includes(String(recommendation.total_risk))\n        );\n      default:\n        return true;\n    }\n  });\n};\n"],"names":["passFilters","rule","filters","Object","entries","every","filterKey","filterValue","description","toLowerCase","includes","total_risk","urlParam","String","category","tags","find","c","impact","impacting","length","some","v","impacted_clusters_count","likelihood","rule_status","disabled","res_risk","resolution_risk","passFiltersCluster","cluster","cluster_name","cluster_id","hits","parseInt","total_hit_count","hits_by_total_risk","toValidSemVer","cluster_version","buildFilterChips","categories","localFilters","sortIndex","sortDirection","sort","offset","limit","filterCategories","reduce","arr","it","key","item","chips","Array","isArray","map","value","selectedCategoryValue","values","name","text","label","title","pruneFilters","paramParser","search","searchParams","URLSearchParams","from","acc","JSON","parse","split","translateSortParams","substring","startsWith","direction","object_id","updateSearchParams","columnMapping","url","URL","window","location","origin","pathname","index","indexMapping","set","console","error","forEach","history","replaceState","href","compareSemVer","v1","v2","d","compare","version","coerce","undefined","valid","removeFilterParam","currentFilters","updateFilters","param","omitted","newFilters","addFilterParam","passFilterWorkloads","workloads","generalSeverityRemapped","metadata","hits_by_severity","display_name","uuid","namespace","severity","Card","ouiaId","CardBody","WorkloadsListTable","query","isError","isUninitialized","isFetching","isSuccess","data","refetch","dispatch","useDispatch","useSelector","workloadsListState","perPage","page","Math","floor","rows","setRows","useState","filteredRows","setFilteredRows","rowsFiltered","setRowsFiltered","filtersApplied","setFiltersApplied","filterBuilding","setFilterBuilding","payload","loadingState","errorState","noMatch","successState","useLocation","useEffect","buildFilteredRows","namespace_name","paramsObject","sortObj","indexOf","Number","buildDisplayedRows","items","filter","workloadData","a","b","fst","snd","localeCompare","recommendations","objects","Date","last_checked_at","slice","entity","cells","Link","to","DateFormat","extraTitle","date","variant","filterConfigItems","type","filterValues","onChange","_event","placeholder","activeFiltersConfig","showDeleteButton","deleteTitle","onDelete","itemsToRemove","isAll","newFilter","onSetPage","_e","pageNumber","newOffset","onSetPerPage","status","id","PrimaryToolbar","pagination","itemCount","onPerPageSelect","isCompact","filterConfig","Table","compact","fullWidth","props","colSpan","Loading","isStickyHeader","sortBy","onSort","Pagination","onPageInput","widgetId","bottom","propTypes","isRequired","intl","useIntl","useChrome","updateDocumentTitle","formatMessage","documentTitle","subnav","PageHeader","className","Title","headingLevel","remappingSeverity","obj","mode","mapping","updatedObj","hasAnyValueGreaterThanZero","stringsToCheck","filtersAreApplied","params","cleanedUpParams","capitalize","str","charAt","toUpperCase","createChips","pruneWorkloadsRulesFilters","trim","push","replace","switchSort","details","modified","sortWithSwitch","asc","flatMapRows","expandFirst","flatMap","row","updatedRow","isOpen","parent","passObjectsFilters","uid","workloadsRulesRemoveFilterParam","workloadsRulesAddFilterParam","passFilterWorkloadsRecs","recommendation","cleanedUpFilters"],"sourceRoot":""}