{"version":3,"file":"js/Workload.18110288515e54edf9e4.js","mappings":"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","sources":["webpack:///./src/Components/Breadcrumbs/index.js","webpack:///./src/Components/Loading/Loading.js","webpack:///./src/Components/WorkloadHeader/WorkloadHeader.js","webpack:///./src/Components/WorkloadHeader/index.js","webpack:///./src/Components/ObjectsModalTable/ObjectsModalTable.js","webpack:///./src/Components/ObjectsModal/ObjectsModal.js","webpack:///./src/Components/ExpandedRulesDetails.js/ExpandedRulesDetails.js","webpack:///./src/Components/WorkloadRules/WorkloadRules.js","webpack:///./src/Components/Workload/Workload.js","webpack:///./src/Components/Workload/index.js","webpack:///./src/Utilities/Loaders.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\n\nimport messages from '../../Messages';\n\nconst Breadcrumbs = ({ current, workloads }) => {\n  const intl = useIntl();\n  const location = useLocation();\n  const splitUrl = location.pathname.split('/');\n\n  return (\n    <div>\n      <Breadcrumb ouiaId=\"detail\" data-testid=\"breadcrumb-item\">\n        <BreadcrumbItem className=\"breadcrumb-item\">\n          <Link to={workloads ? `../..` : `..`} relative=\"path\">\n            {`${intl.formatMessage(messages.insightsHeader)} ${splitUrl[4]}`}\n          </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem className=\"breadcrumb-item\" isActive>\n          {current}\n        </BreadcrumbItem>\n      </Breadcrumb>\n    </div>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  current: PropTypes.string,\n  workloads: PropTypes.boolean,\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { List } from 'react-content-loader';\n\nconst Loading = () => (\n  <Card ouiaId=\"loading-skeleton\">\n    <CardBody>\n      <List />\n    </CardBody>\n  </Card>\n);\n\nexport default Loading;\n","import React from 'react';\n\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Title,\n} from '@patternfly/react-core';\nimport Skeleton from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { OneLineLoader } from '../../Utilities/Loaders';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport PropTypes from 'prop-types';\n\nexport const WorkloadHeader = ({ workloadData, namespaceId, clusterId }) => {\n  const { isUninitialized, isFetching, data: workload } = workloadData;\n  return (\n    <Grid id=\"workload-header\" md={12} hasGutter>\n      <GridItem span={8}>\n        <Title\n          size=\"2xl\"\n          headingLevel=\"h1\"\n          id=\"workloads-header-title\"\n          ouiaId=\"workloads-name\"\n        >\n          {isUninitialized || isFetching ? (\n            <>\n              <Skeleton size=\"sm\" />\n              <Skeleton size=\"sm\" />\n            </>\n          ) : (\n            <>\n              <p>{workload?.cluster?.display_name}</p>\n              <p>{workload?.namespace?.name}</p>\n            </>\n          )}\n        </Title>\n      </GridItem>\n      <GridItem>\n        <Stack>\n          <StackItem id=\"workload-header-uuid\">\n            <span>Cluster UUID:</span> <span>{clusterId}</span>{' '}\n            <span>Namespace UUID:</span> <span>{namespaceId}</span>\n          </StackItem>\n          <StackItem id=\"workload-header-last-seen\">\n            <span>Last seen: </span>\n            <span>\n              {isUninitialized || isFetching ? (\n                <OneLineLoader />\n              ) : workload?.metadata?.last_checked_at ? (\n                <DateFormat\n                  date={workload.metadata.last_checked_at}\n                  type=\"exact\"\n                />\n              ) : (\n                <>Unknown</>\n              )}\n            </span>\n          </StackItem>\n        </Stack>\n      </GridItem>\n    </Grid>\n  );\n};\n\nWorkloadHeader.propTypes = {\n  clusterId: PropTypes.string.isRequired,\n  namespaceId: PropTypes.string.isRequired,\n  workloadData: PropTypes.shape({\n    isUninitialized: PropTypes.bool.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    data: PropTypes.shape({\n      metadata: PropTypes.shape({\n        last_checked_at: PropTypes.string,\n      }),\n      namespace: PropTypes.shape({\n        uuid: PropTypes.string,\n        name: PropTypes.string,\n      }),\n      cluster: PropTypes.shape({\n        uuid: PropTypes.string,\n        display_name: PropTypes.string,\n      }),\n      status: PropTypes.string,\n    }),\n  }),\n};\n","import React from 'react';\nimport { WorkloadHeader } from './WorkloadHeader';\nimport PropTypes from 'prop-types';\n\nconst WorkloadsHeaderWrapper = ({ workload, namespaceId, clusterId }) => {\n  return (\n    <WorkloadHeader\n      workloadData={workload}\n      namespaceId={namespaceId}\n      clusterId={clusterId}\n    />\n  );\n};\nWorkloadsHeaderWrapper.propTypes = {\n  clusterId: PropTypes.string.isRequired,\n  namespaceId: PropTypes.string.isRequired,\n  workload: PropTypes.shape({\n    isUninitialized: PropTypes.bool.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    data: PropTypes.shape({\n      metadata: PropTypes.shape({\n        last_checked_at: PropTypes.string,\n      }),\n      namespace: PropTypes.shape({\n        uuid: PropTypes.string,\n        name: PropTypes.string,\n      }),\n      cluster: PropTypes.shape({\n        uuid: PropTypes.string,\n        display_name: PropTypes.string,\n      }),\n      status: PropTypes.string,\n    }),\n  }),\n};\n\nexport default WorkloadsHeaderWrapper;\n","import React, { useEffect, useState } from 'react';\nimport { Table, Thead, Tr, Th, Tbody, Td } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { ObjectsTableColumns } from '../../AppConstants';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  WORKLOADS_OBJECTS_TABLE_INITIAL_STATE,\n  resetFilters,\n  updateWorkloadsObjectsListFilters,\n} from '../../Services/Filters';\nimport { removeFilterParam as _removeFilterParam } from '../Common/Tables';\nimport { Pagination } from '@patternfly/react-core';\nimport {\n  filtersAreApplied,\n  passObjectsFilters,\n  pruneWorkloadsRulesFilters,\n} from '../../Utilities/Workloads';\nimport { NoMatchingWorkloadsObjects } from '../MessageState/EmptyStates';\nimport Loading from '../Loading/Loading';\nimport { PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\n\nexport const ObjectsModalTable = ({ objects }) => {\n  const objectsData = objects || [];\n  const dispatch = useDispatch();\n  const [filtersApplied, setFiltersApplied] = useState(false);\n  const [filteredRows, setFilteredRows] = useState([]);\n  const [displayedRows, setDisplayedRows] = useState([]);\n  const [rowsFiltered, setRowsFiltered] = useState(false);\n  const filters = useSelector(\n    ({ filters }) => filters.workloadsObjectsListState\n  );\n  const page = Math.floor(filters.offset / filters.limit) + 1;\n  const perPage = filters.limit;\n\n  const removeFilterParam = (param) =>\n    _removeFilterParam(filters, updateFilters, param);\n\n  const updateFilters = (payload) =>\n    dispatch(updateWorkloadsObjectsListFilters(payload));\n  const preparedRows = displayedRows.length > 0 ? true : false;\n  const loadingState = !rowsFiltered;\n\n  const filterConfigItems = [\n    {\n      label: 'Object ID',\n      type: 'text',\n      filterValues: {\n        key: 'object_id',\n        onChange: (_event, value) =>\n          updateFilters({ ...filters, offset: 0, object_id: value }),\n        value: filters.object_id,\n        placeholder: 'Filter by Object ID',\n      },\n    },\n  ];\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.sortIndex;\n    delete localFilters.sortDirection;\n    return pruneWorkloadsRulesFilters(localFilters, {\n      label: 'Object ID',\n      type: 'text',\n      title: 'object ID',\n      urlParam: 'object_id',\n    });\n  };\n\n  const activeFiltersConfig = {\n    showDeleteButton: filtersApplied,\n    deleteTitle: 'Reset filters',\n    filters: buildFilterChips(),\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        resetFilters(\n          filters,\n          WORKLOADS_OBJECTS_TABLE_INITIAL_STATE,\n          updateFilters\n        );\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? updateFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  //This is where we apply filters and map rows agains the filters\n  const buildFilteredRows = (allrows, filters) => {\n    return allrows.filter((object) => passObjectsFilters(object, filters));\n  };\n\n  //building displayed rows applying limits and per page values\n  const buildDisplayedRows = (rows) => {\n    return rows.slice(perPage * (page - 1), perPage * (page - 1) + perPage);\n  };\n\n  //After objectsData is present or in case of object id filter change we setFiltered rows using buildiflterRows\n  useEffect(() => {\n    setFilteredRows(buildFilteredRows(objectsData, filters));\n  }, [objectsData, filters]);\n\n  //after objects data is present we set filtered rows and this useEffect is triggered to update displayed rows\n  //with new array of rows that have filters applied\n  useEffect(() => {\n    setDisplayedRows(buildDisplayedRows(filteredRows));\n    setFiltersApplied(filtersAreApplied(filters));\n    setRowsFiltered(true);\n  }, [filteredRows, filters.limit, filters.offset]);\n\n  const onSetPage = (_e, pageNumber) => {\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    updateFilters({ ...filters, offset: newOffset });\n  };\n\n  const onPerPageSelect = (_e, perPage) => {\n    if (perPage !== filters.limit) {\n      updateFilters({ ...filters, limit: perPage, offset: 0 });\n    }\n  };\n\n  return (\n    <div id=\"objects-list-table\">\n      <PrimaryToolbar\n        pagination={{\n          page,\n          perPage,\n          onSetPage,\n          onPerPageSelect,\n          isCompact: true,\n          ouiaId: 'pager',\n          itemCount: filteredRows.length,\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      {loadingState ? (\n        <Loading />\n      ) : preparedRows ? (\n        <div>\n          <Table aria-label=\"Cell widths\" variant=\"compact\">\n            <Thead>\n              <Tr>\n                <Th width={60}>{ObjectsTableColumns.object}</Th>\n                <Th width={30}>{ObjectsTableColumns.kind}</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {displayedRows?.map((object, index) => (\n                <Tr key={index}>\n                  <Td dataLabel={ObjectsTableColumns.object}>{object.uid}</Td>\n                  <Td dataLabel={ObjectsTableColumns.kind}>{object.kind}</Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </Table>\n          {displayedRows.length > 0 ? (\n            <Pagination\n              ouiaId=\"pager\"\n              itemCount={filteredRows.length}\n              page={page}\n              perPage={perPage}\n              onSetPage={onSetPage}\n              onPerPageSelect={onPerPageSelect}\n              onPageInput={onSetPage}\n              widgetId={`pagination-options-menu-bottom`}\n              variant={PaginationVariant.bottom}\n            />\n          ) : (\n            <Pagination\n              itemCount={0}\n              perPage\n              page\n              onSetPage\n              onPerPageSelect\n              isDisabled\n            />\n          )}\n        </div>\n      ) : (\n        <NoMatchingWorkloadsObjects />\n      )}\n    </div>\n  );\n};\n\nObjectsModalTable.propTypes = {\n  objects: PropTypes.arrayOf(\n    PropTypes.shape({\n      kind: PropTypes.string,\n      uid: PropTypes.string,\n    })\n  ),\n};\n","import React from 'react';\nimport { Modal as PfModal } from '@patternfly/react-core';\nimport { ObjectsModalTable } from '../ObjectsModalTable/ObjectsModalTable';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  WORKLOADS_OBJECTS_TABLE_INITIAL_STATE,\n  resetFilters,\n  updateWorkloadsObjectsListFilters,\n} from '../../Services/Filters';\n\nconst ObjectsModal = ({ isModalOpen, setIsModalOpen, objects }) => {\n  const dispatch = useDispatch();\n  const filters = useSelector(\n    ({ filters }) => filters.workloadsObjectsListState\n  );\n  const updateFilters = (payload) =>\n    dispatch(updateWorkloadsObjectsListFilters(payload));\n  const onClose = () => {\n    setIsModalOpen(false);\n    resetFilters(filters, WORKLOADS_OBJECTS_TABLE_INITIAL_STATE, updateFilters);\n  };\n\n  return (\n    <PfModal\n      isOpen={isModalOpen}\n      onClose={() => onClose()}\n      variant={'medium'}\n      title=\"Objects\"\n    >\n      <ObjectsModalTable objects={objects} />\n    </PfModal>\n  );\n};\n\nexport default ObjectsModal;\n\nObjectsModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  objects: PropTypes.arrayOf(\n    PropTypes.shape({\n      kind: PropTypes.string,\n      uid: PropTypes.string,\n    })\n  ),\n};\n","import React, { useState } from 'react';\nimport {\n  BullseyeIcon,\n  InfoCircleIcon,\n  ThumbsUpIcon,\n} from '@patternfly/react-icons';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  ClipboardCopyButton,\n  CodeBlock,\n  CodeBlockAction,\n  CodeBlockCode,\n  Divider,\n  Icon,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport { Table, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport TemplateProcessor from '@redhat-cloud-services/frontend-components-advisor-components/TemplateProcessor/TemplateProcessor';\nimport ObjectsModal from '../ObjectsModal/ObjectsModal';\nimport { ObjectsTableColumns } from '../../AppConstants';\n\nconst OpenshiftCodeBlocks = () => {\n  const code1 = `oc get namespace -o jsonpath='{range .items[*]}{.metadata.name}{\"\\\\t\"}{.metadata.uid}{\"\\\\n\"}{end}'`;\n\n  const code2 = `oc -n <namespace> get <resourceKind> -o jsonpath='{range .items[*]}{.metadata.name}{\"\\\\t\"}{.metadata.uid}{\"\\\\n\"}{end}'`;\n\n  const clipboardCopyFunc = (event, text) => {\n    navigator.clipboard.writeText(text.toString());\n  };\n\n  const onClick = (event, text) => {\n    clipboardCopyFunc(event, text);\n    setCopied(true);\n  };\n\n  const [copied, setCopied] = React.useState(false);\n\n  const action = (code) => (\n    <React.Fragment>\n      <CodeBlockAction>\n        <ClipboardCopyButton\n          id=\"basic-copy-button\"\n          textId=\"code-content\"\n          aria-label=\"Copy to clipboard\"\n          onClick={(e) => onClick(e, code)}\n          exitDelay={copied ? 1500 : 600}\n          maxWidth=\"110px\"\n          variant=\"plain\"\n          onTooltipHidden={() => setCopied(false)}\n        >\n          {copied ? 'Successfully copied to clipboard!' : 'Copy to clipboard'}\n        </ClipboardCopyButton>\n      </CodeBlockAction>\n    </React.Fragment>\n  );\n\n  return (\n    <>\n      <CodeBlock\n        actions={action(code1.concat('\\n', code2))}\n        className=\"pf-v5-u-mt-md\"\n      >\n        <CodeBlockCode>{code1}</CodeBlockCode>\n        <CodeBlockCode>{code2}</CodeBlockCode>\n      </CodeBlock>\n    </>\n  );\n};\n\nconst ExpandedRulesDetails = ({\n  more_info,\n  resolution,\n  objects,\n  namespaceName,\n  reason,\n  extra_data,\n}) => {\n  const objectsArePresent = Array.isArray(objects) && objects.length > 0;\n  const moreInfoIsPresent = more_info.length > 0 ? true : false;\n  const [objectsModalOpen, setObjectsModalOpen] = useState(false);\n  return (\n    <Card className=\"ins-c-report-details\" style={{ boxShadow: 'none' }}>\n      <CardBody>\n        <ObjectsModal\n          isModalOpen={objectsModalOpen}\n          setIsModalOpen={setObjectsModalOpen}\n          objects={objects}\n        />\n        <Stack\n          className=\"ins-c-report-details__cards-stack\"\n          widget-type=\"InsightsRulesCard\"\n          hasGutter\n        >\n          <StackItem>\n            <Card isCompact isPlain>\n              <CardHeader>\n                <Icon>\n                  <BullseyeIcon className=\"ins-c-report-details__icon\" />\n                </Icon>\n                <strong>Detected issues</strong>\n              </CardHeader>\n              <CardBody>\n                <TemplateProcessor template={reason} definitions={extra_data} />\n              </CardBody>\n            </Card>\n          </StackItem>\n          {objectsArePresent && (\n            <React.Fragment>\n              <Divider />\n              <StackItem>\n                <Card isCompact isPlain>\n                  <CardHeader>\n                    <Icon>\n                      <ThumbsUpIcon className=\"ins-c-report-details__icon\" />\n                    </Icon>\n                    <strong>Steps to resolve</strong>\n                  </CardHeader>\n                  <CardBody>\n                    <TemplateProcessor\n                      template={resolution}\n                      definitions={extra_data}\n                    />\n                    <Table\n                      borders={'compactBorderless'}\n                      aria-label=\"Objects table\"\n                    >\n                      <Thead>\n                        <Tr>\n                          <Th modifier=\"fitContent\">\n                            {ObjectsTableColumns.object}\n                          </Th>\n                          <Th modifier=\"fitContent\">\n                            {ObjectsTableColumns.kind}\n                          </Th>\n                        </Tr>\n                      </Thead>\n                      <Tbody>\n                        {objects.slice(0, 3).map((object, key) => (\n                          <Tr key={key}>\n                            <Td dataLabel={ObjectsTableColumns.object}>\n                              {object.uid}\n                            </Td>\n                            <Td dataLabel={ObjectsTableColumns.kind}>\n                              {object.kind}\n                            </Td>\n                          </Tr>\n                        ))}\n                      </Tbody>\n                    </Table>\n                    <Button\n                      variant=\"link\"\n                      isInline\n                      onClick={() => setObjectsModalOpen(true)}\n                    >\n                      View all objects\n                    </Button>\n                  </CardBody>\n                </Card>\n              </StackItem>\n            </React.Fragment>\n          )}\n          {!namespaceName && (\n            <React.Fragment>\n              <CardHeader>\n                <strong>Note: </strong>Red Hat avoids gathering and processing\n                namespace and resource names as these may reveal confidential\n                information. Namespaces and resources are identified by their\n                UIDs instead. You can use in-cluster commands like the ones\n                below to translate UIDs of affected resources to their names.\n              </CardHeader>\n              <CardBody>\n                <OpenshiftCodeBlocks />\n              </CardBody>\n            </React.Fragment>\n          )}\n          {moreInfoIsPresent && (\n            <React.Fragment>\n              <Divider />\n              <StackItem>\n                <Card isCompact isPlain>\n                  <CardHeader>\n                    <Icon>\n                      <InfoCircleIcon className=\"ins-c-report-details__icon\" />\n                    </Icon>\n                    <strong>Additional info</strong>\n                  </CardHeader>\n                  <CardBody>\n                    <TemplateProcessor\n                      template={more_info}\n                      definitions={extra_data}\n                    />\n                  </CardBody>\n                </Card>\n              </StackItem>\n            </React.Fragment>\n          )}\n        </Stack>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default ExpandedRulesDetails;\n\nExpandedRulesDetails.propTypes = {\n  more_info: PropTypes.string.isRequired,\n  resolution: PropTypes.string.isRequired,\n  objects: PropTypes.arrayOf({\n    kind: PropTypes.string,\n    uid: PropTypes.string,\n  }),\n  extra_data: PropTypes.shape({\n    check_name: PropTypes.string.isRequired,\n    check_url: PropTypes.string.isRequired,\n  }),\n  namespaceName: PropTypes.string.isRequired,\n  reason: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { TableVariant } from '@patternfly/react-table';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n} from '@patternfly/react-table/deprecated';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport {\n  WORKLOADS_RULES_COLUMNS_KEYS,\n  WORKLOADS_RULES_FILTER_CONFIG,\n  WORKLOAD_RULES_COLUMNS,\n  WORKLOAD_RULES_FILTER_CATEGORIES,\n} from '../../AppConstants';\nimport PropTypes from 'prop-types';\nimport Loading from '../Loading/Loading';\nimport {\n  ErrorState,\n  NoMatchingRecsForWorkloads,\n  NoRecsForWorkloadsDetails,\n  NoWorkloadsRecsAvailable,\n} from '../MessageState/EmptyStates';\nimport InsightsLabel from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport ExpandedRulesDetails from '../ExpandedRulesDetails.js/ExpandedRulesDetails';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  WORKLOADS_RECS_TABLE_INITIAL_STATE,\n  resetFilters,\n  updateWorkloadsRecsListFilters,\n} from '../../Services/Filters';\nimport {\n  translateSortParams,\n  paramParser,\n  updateSearchParams,\n} from '../Common/Tables';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  filtersAreApplied,\n  flatMapRows,\n  passFilterWorkloadsRecs,\n  pruneWorkloadsRulesFilters,\n  sortWithSwitch,\n  workloadsRulesAddFilterParam,\n  workloadsRulesRemoveFilterParam,\n} from '../../Utilities/Workloads';\nimport { useLocation } from 'react-router-dom';\nimport './WorkloadRules.scss';\n\nconst WorkloadRules = ({ workload, namespaceName }) => {\n  const dispatch = useDispatch();\n  const { isError, isUninitialized, isFetching, isSuccess, data, error } =\n    workload;\n  const recommendations = data?.recommendations || [];\n  const errorState = isError;\n  const successState = isSuccess;\n  const noInput = successState && recommendations.length === 0;\n  const [isAllExpanded, setIsAllExpanded] = useState(false);\n  const [filteredRows, setFilteredRows] = useState([]);\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const [displayedRows, setDisplayedRows] = useState([]);\n  const [rowsFiltered, setRowsFiltered] = useState(false);\n  const [filtersApplied, setFiltersApplied] = useState(false);\n  const [expandFirst, setExpandFirst] = useState(true);\n  const loadingState = isUninitialized || isFetching || !rowsFiltered;\n  const { search } = useLocation();\n  //FILTERS\n  const filters = useSelector(({ filters }) => filters.workloadsRecsListState);\n  const noMatchingRecs = filteredRows.length === 0 ? true : false;\n\n  const updateFilters = (payload) =>\n    dispatch(updateWorkloadsRecsListFilters(payload));\n\n  const addFilterParam = (param, values) => {\n    setExpandFirst(false);\n    workloadsRulesAddFilterParam(filters, updateFilters, param, values);\n  };\n  const removeFilterParam = (param) =>\n    workloadsRulesRemoveFilterParam(filters, updateFilters, param);\n\n  useEffect(() => {\n    setFilteredRows(buildFilteredRows(recommendations, filters));\n  }, [data, filters]);\n\n  useEffect(() => {\n    setDisplayedRows(\n      buildDisplayedRows(filteredRows, filters.sortIndex, filters.sortDirection)\n    );\n    setFiltersApplied(filtersAreApplied(filters));\n    setRowsFiltered(true);\n  }, [filteredRows]);\n\n  const filterConfigItems = WORKLOADS_RULES_FILTER_CONFIG(\n    filters,\n    addFilterParam\n  );\n\n  useEffect(() => {\n    if (search && filterBuilding) {\n      const paramsObject = paramParser(search);\n      if (paramsObject.sort) {\n        const sortObj = translateSortParams(paramsObject.sort);\n        paramsObject.sortIndex = WORKLOADS_RULES_COLUMNS_KEYS.indexOf(\n          sortObj.description\n        );\n        paramsObject.sortDirection = sortObj.direction;\n      }\n      paramsObject.total_risk &&\n        !Array.isArray(paramsObject.total_risk) &&\n        (paramsObject.total_risk = [`${paramsObject.total_risk}`]);\n      updateFilters({ ...filters, ...paramsObject });\n    }\n    setFilterBuilding(false);\n  }, []);\n\n  useEffect(() => {\n    if (!filterBuilding) {\n      updateSearchParams(filters, WORKLOADS_RULES_COLUMNS_KEYS);\n    }\n  }, [filters, filterBuilding]);\n\n  const buildDisplayedRows = (filteredRows, sortIndex, sortDirection) => {\n    const sortingRows = sortWithSwitch(sortIndex, sortDirection, filteredRows);\n    return flatMapRows(sortingRows, expandFirst);\n  };\n\n  const handleOnCollapse = (_e, rowId, isOpen) => {\n    if (rowId === undefined) {\n      // if undefined, all rows are affected\n      setIsAllExpanded(isOpen);\n      setDisplayedRows(\n        displayedRows.map((row) => ({\n          ...row,\n          // Don't show expand button for expanded content\n          ...(Object.hasOwn(row, 'parent') ? null : { isOpen }),\n        }))\n      );\n    } else {\n      setDisplayedRows(\n        displayedRows.map((row, index) =>\n          index === rowId ? { ...row, isOpen } : row\n        )\n      );\n    }\n  };\n\n  const buildFilteredRows = (allRows, filters) => {\n    setRowsFiltered(false);\n    const filtersArePresent = filtersAreApplied(filters);\n    const expandedRowsSet = new Set(\n      displayedRows\n        .filter((ruleExpanded) => ruleExpanded?.isOpen)\n        .map((object) => object?.rule?.details)\n    );\n    return allRows\n      .filter((recs) =>\n        filtersArePresent ? passFilterWorkloadsRecs(recs, filters) : true\n      )\n      .map((value, key) => [\n        {\n          rule: value,\n          isOpen: isAllExpanded || expandedRowsSet?.has(value?.details),\n          cells: [\n            {\n              title: value.details,\n            },\n            {\n              title: (\n                <div key={key}>\n                  <InsightsLabel\n                    value={value.total_risk}\n                    rest={{ isCompact: true }}\n                  />\n                </div>\n              ),\n            },\n            {\n              title: value.objects.length,\n            },\n            {\n              title: (\n                <div key={key}>\n                  <DateFormat date={value.modified} type=\"relative\" />\n                </div>\n              ),\n            },\n          ],\n        },\n        {\n          cells: [\n            {\n              title: (\n                <ExpandedRulesDetails\n                  more_info={value.more_info}\n                  resolution={value.resolution}\n                  objects={value.objects}\n                  namespaceName={namespaceName}\n                  reason={value.reason}\n                  extra_data={value.extra_data}\n                />\n              ),\n            },\n          ],\n          fullWidth: true,\n        },\n      ]);\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.sortIndex;\n    delete localFilters.sortDirection;\n    return pruneWorkloadsRulesFilters(\n      localFilters,\n      WORKLOAD_RULES_FILTER_CATEGORIES\n    );\n  };\n\n  const activeFiltersConfig = {\n    showDeleteButton: filtersApplied,\n    deleteTitle: 'Reset filters',\n    filters: buildFilterChips(),\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        resetFilters(\n          filters,\n          WORKLOADS_RECS_TABLE_INITIAL_STATE,\n          updateFilters\n        );\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? updateFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  const onSort = (_e, index, direction) => {\n    setRowsFiltered(false);\n    setExpandFirst(false);\n    updateFilters({\n      ...filters,\n      sortIndex: index,\n      sortDirection: direction,\n    });\n  };\n\n  return (\n    <div id=\"workload-recs-list-table\">\n      <PrimaryToolbar\n        filterConfig={{\n          items: filterConfigItems,\n          isDisabled:\n            loadingState ||\n            errorState ||\n            noInput ||\n            recommendations.length === 0,\n        }}\n        pagination={\n          <span className=\"pf-u-font-weight-bold\">\n            {filteredRows?.length === 1\n              ? `${filteredRows.length} Recommendation`\n              : `${filteredRows.length} Recommendations`}\n          </span>\n        }\n        activeFiltersConfig={\n          loadingState || errorState || noInput || recommendations.length === 0\n            ? undefined\n            : activeFiltersConfig\n        }\n      />\n      <Table\n        aria-label={'Workload recommendations table'}\n        ouiaId=\"workload-recommendations\"\n        cells={WORKLOAD_RULES_COLUMNS}\n        ouiaSafe={!loadingState}\n        onCollapse={handleOnCollapse} // TODO: set undefined when there is an empty state\n        rows={\n          errorState || loadingState || noInput || noMatchingRecs ? (\n            [\n              {\n                fullWidth: true,\n                cells: [\n                  {\n                    props: {\n                      colSpan: WORKLOAD_RULES_COLUMNS.length + 1,\n                    },\n                    title: errorState ? (\n                      error?.status === 404 ? (\n                        <NoRecsForWorkloadsDetails />\n                      ) : (\n                        <NoWorkloadsRecsAvailable />\n                      )\n                    ) : loadingState ? (\n                      <Loading />\n                    ) : noMatchingRecs ? (\n                      <NoMatchingRecsForWorkloads />\n                    ) : (\n                      <NoRecsForWorkloadsDetails />\n                    ),\n                  },\n                ],\n              },\n            ]\n          ) : successState ? (\n            displayedRows\n          ) : (\n            <ErrorState />\n          )\n        }\n        variant={TableVariant.compact}\n        isStickyHeader\n        canCollapseAll\n        sortBy={{\n          index: filters.sortIndex,\n          direction: filters.sortDirection,\n        }}\n        onSort={onSort}\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n    </div>\n  );\n};\n\nexport default WorkloadRules;\n\nWorkloadRules.propTypes = {\n  workload: PropTypes.shape({\n    isUninitialized: PropTypes.bool.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    isError: PropTypes.bool.isRequired,\n    isSuccess: PropTypes.bool.isRequired,\n    error: PropTypes.object,\n    data: PropTypes.shape({\n      namespace: PropTypes.shape({\n        uuid: PropTypes.string,\n        name: PropTypes.string,\n      }),\n      cluster: PropTypes.shape({\n        uuid: PropTypes.string,\n        display_name: PropTypes.string,\n      }),\n      status: PropTypes.string,\n      recommendations: PropTypes.arrayOf(\n        PropTypes.shape({\n          check: PropTypes.string,\n          description: PropTypes.string,\n          objects: PropTypes.arrayOf(\n            PropTypes.shape({\n              kind: PropTypes.string,\n              uid: PropTypes.string,\n            })\n          ),\n          remediation: PropTypes.string,\n        })\n      ),\n    }),\n  }),\n  namespaceName: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PageHeader from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Flex, FlexItem, PageSection, Title } from '@patternfly/react-core';\nimport Breadcrumbs from '../Breadcrumbs';\nimport WorkloadsHeader from '../WorkloadHeader';\nimport PropTypes from 'prop-types';\nimport WorkloadRules from '../WorkloadRules/WorkloadRules';\n\nexport const Workload = ({ workload, namespaceId, clusterId }) => {\n  return (\n    <React.Fragment>\n      <PageHeader className=\"pf-m-light ins-inventory-detail\">\n        <Flex direction={{ default: 'column' }}>\n          <FlexItem>\n            <Breadcrumbs\n              current={\n                workload?.data?.status === 'ok'\n                  ? `${workload.data.cluster.display_name} | ${workload.data.namespace.name}`\n                  : `${clusterId} | ${namespaceId}`\n              }\n              workloads=\"true\"\n            />\n            <WorkloadsHeader\n              workload={workload}\n              namespaceId={namespaceId}\n              clusterId={clusterId}\n            />\n          </FlexItem>\n        </Flex>\n      </PageHeader>\n      <PageSection>\n        <Title className=\"pf-u-mb-lg\" headingLevel=\"h3\" size=\"2xl\">\n          Recommendations\n        </Title>\n        <WorkloadRules\n          workload={workload}\n          namespaceName={workload?.data?.namespace?.name}\n        />\n      </PageSection>\n    </React.Fragment>\n  );\n};\n\nWorkload.propTypes = {\n  clusterId: PropTypes.string.isRequired,\n  namespaceId: PropTypes.string.isRequired,\n  workload: PropTypes.shape({\n    isUninitialized: PropTypes.bool.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    data: PropTypes.shape({\n      namespace: PropTypes.shape({\n        uuid: PropTypes.string,\n        name: PropTypes.string,\n      }),\n      cluster: PropTypes.shape({\n        uuid: PropTypes.string,\n        display_name: PropTypes.string,\n      }),\n      status: PropTypes.string,\n    }),\n  }),\n};\n","import React, { useEffect } from 'react';\nimport { Workload } from './Workload';\nimport { useParams } from 'react-router-dom';\nimport { useGetWorkloadByIdQuery } from '../../Services/SmartProxy';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst WorkloadWrapper = () => {\n  const chrome = useChrome();\n  const { namespaceId, clusterId } = useParams();\n  const workload = useGetWorkloadByIdQuery({\n    namespaceId,\n    clusterId,\n  });\n\n  useEffect(() => {\n    workload.refetch();\n  }, [namespaceId, clusterId]);\n\n  useEffect(() => {\n    const subnav = `${\n      workload?.data?.status === 'ok'\n        ? `${workload?.data?.cluster.display_name} | ${workload?.data?.namespace.name} - Workloads`\n        : `${clusterId} | ${namespaceId} - Workloads`\n    }`;\n    chrome.updateDocumentTitle(`${subnav} - OCP Advisor | Red Hat Insights`);\n  }, [workload, namespaceId, clusterId]);\n\n  return (\n    <Workload\n      workload={workload}\n      namespaceId={namespaceId}\n      clusterId={clusterId}\n    />\n  );\n};\n\nexport default WorkloadWrapper;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst OneLineLoader = () => (\n  <ContentLoader height={20}>\n    <rect x=\"0\" y=\"0\" rx=\"4\" ry=\"4\" width=\"300\" height=\"20\" />\n  </ContentLoader>\n);\n\nexport { OneLineLoader };\n"],"names":["Breadcrumbs","_ref","current","workloads","intl","useIntl","splitUrl","useLocation","pathname","split","React","Breadcrumb","ouiaId","BreadcrumbItem","className","Link","to","relative","concat","formatMessage","messages","insightsHeader","isActive","propTypes","PropTypes","Card","CardBody","List","WorkloadHeader","_workload$cluster","_workload$namespace","_workload$metadata","workloadData","namespaceId","clusterId","isUninitialized","isFetching","workload","data","Grid","id","md","hasGutter","GridItem","span","Title","size","headingLevel","Skeleton","cluster","display_name","namespace","name","Stack","StackItem","OneLineLoader","metadata","last_checked_at","DateFormat","date","type","isRequired","uuid","status","WorkloadsHeaderWrapper","ObjectsModalTable","localFilters","objectsData","objects","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","filtersApplied","setFiltersApplied","_useState3","_useState4","filteredRows","setFilteredRows","_useState5","_useState6","displayedRows","setDisplayedRows","_useState7","_useState8","rowsFiltered","setRowsFiltered","filters","useSelector","_ref2","workloadsObjectsListState","page","Math","floor","offset","limit","perPage","updateFilters","payload","updateWorkloadsObjectsListFilters","preparedRows","length","loadingState","filterConfigItems","label","filterValues","key","onChange","_event","value","_objectSpread","object_id","placeholder","activeFiltersConfig","showDeleteButton","deleteTitle","sortIndex","sortDirection","pruneWorkloadsRulesFilters","title","urlParam","onDelete","itemsToRemove","isAll","resetFilters","WORKLOADS_OBJECTS_TABLE_INITIAL_STATE","map","item","param","newFilter","_defineProperty","Array","isArray","filter","String","chips","_removeFilterParam","useEffect","allrows","object","passObjectsFilters","buildFilteredRows","slice","filtersAreApplied","onSetPage","_e","pageNumber","newOffset","onPerPageSelect","PrimaryToolbar","pagination","isCompact","itemCount","filterConfig","items","Loading","Table","variant","Thead","Tr","Th","width","ObjectsTableColumns","kind","Tbody","index","Td","dataLabel","uid","Pagination","onPageInput","widgetId","PaginationVariant","bottom","isDisabled","NoMatchingWorkloadsObjects","ObjectsModal","isModalOpen","setIsModalOpen","PfModal","isOpen","onClose","OpenshiftCodeBlocks","code","code1","code2","_React$useState","_React$useState2","copied","setCopied","CodeBlock","actions","CodeBlockAction","ClipboardCopyButton","textId","onClick","e","event","text","navigator","clipboard","writeText","toString","clipboardCopyFunc","exitDelay","maxWidth","onTooltipHidden","CodeBlockCode","ExpandedRulesDetails","more_info","resolution","namespaceName","reason","extra_data","objectsArePresent","moreInfoIsPresent","objectsModalOpen","setObjectsModalOpen","style","boxShadow","isPlain","CardHeader","Icon","BullseyeIcon","TemplateProcessor","template","definitions","Divider","ThumbsUpIcon","borders","modifier","Button","isInline","InfoCircleIcon","check_name","check_url","WorkloadRules","isError","isSuccess","error","recommendations","errorState","successState","noInput","isAllExpanded","setIsAllExpanded","filterBuilding","setFilterBuilding","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","expandFirst","setExpandFirst","search","workloadsRecsListState","noMatchingRecs","updateWorkloadsRecsListFilters","buildDisplayedRows","WORKLOADS_RULES_FILTER_CONFIG","values","workloadsRulesAddFilterParam","paramsObject","paramParser","sort","sortObj","translateSortParams","WORKLOADS_RULES_COLUMNS_KEYS","indexOf","description","direction","total_risk","updateSearchParams","sortingRows","sortWithSwitch","flatMapRows","allRows","filtersArePresent","expandedRowsSet","Set","ruleExpanded","_object$rule","rule","details","recs","passFilterWorkloadsRecs","has","cells","InsightsLabel","rest","modified","fullWidth","WORKLOAD_RULES_FILTER_CATEGORIES","WORKLOADS_RECS_TABLE_INITIAL_STATE","workloadsRulesRemoveFilterParam","undefined","WORKLOAD_RULES_COLUMNS","ouiaSafe","onCollapse","rowId","row","Object","hasOwn","rows","props","colSpan","NoRecsForWorkloadsDetails","NoWorkloadsRecsAvailable","NoMatchingRecsForWorkloads","ErrorState","TableVariant","compact","isStickyHeader","canCollapseAll","sortBy","onSort","TableHeader","TableBody","check","remediation","Workload","_workload$data","_workload$data2","PageHeader","Flex","default","FlexItem","WorkloadsHeader","PageSection","chrome","useChrome","_useParams","useParams","useGetWorkloadByIdQuery","refetch","_workload$data3","subnav","updateDocumentTitle","ContentLoader","height","x","y","rx","ry"],"sourceRoot":""}