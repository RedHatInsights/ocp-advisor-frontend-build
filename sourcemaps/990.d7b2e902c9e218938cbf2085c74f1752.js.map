{"version":3,"file":"js/990.7e8267f57e6a8c225978.js","mappings":"yNAQMA,EAAc,SAAC,GAMf,IALJC,EAKI,EALJA,KACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,eACAC,EACI,EADJA,iBAEMC,GAAOC,EAAAA,EAAAA,KAEb,OACE,yBAAKC,UAAU,WACb,kBAAC,IAAD,CACEC,QAAQ,UACRC,OAAO,iCACPC,SAAU,kBAAC,IAAD,MACVV,KAAMA,EACNW,YAAU,EAEVC,UAAWP,EACXH,cAAeA,EACfD,OAAQA,EACRE,eAAgBA,EAChBU,aAAW,EACXT,iBAAkBA,MAM1BL,EAAYe,UAAY,CACtBb,OAAQc,IAAAA,IACRb,cAAea,IAAAA,KAAAA,WACff,KAAMe,IAAAA,OAAAA,WACNZ,eAAgBY,IAAAA,OAChBX,iBAAkBW,IAAAA,QAGpB","sources":["webpack:///./src/Components/Recommendation/RuleDetails.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nimport Loading from '../Loading/Loading';\n\nconst RuleDetails = ({\n  rule,\n  header,\n  isDetailsPage,\n  resolutionRisk,\n  riskOfChangeDesc,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"advisor\">\n      <AsyncComponent\n        appName=\"advisor\"\n        module=\"./AdvisorRecommendationDetails\"\n        fallback={<Loading />}\n        rule={rule}\n        customItnl\n        // ! TODO better to compile messages locally and send to async component instead of sharing intl?\n        intlProps={intl}\n        isDetailsPage={isDetailsPage}\n        header={header}\n        resolutionRisk={resolutionRisk}\n        isOpenShift\n        riskOfChangeDesc={riskOfChangeDesc}\n      />\n    </div>\n  );\n};\n\nRuleDetails.propTypes = {\n  header: PropTypes.any,\n  isDetailsPage: PropTypes.bool.isRequired,\n  rule: PropTypes.object.isRequired,\n  resolutionRisk: PropTypes.number,\n  riskOfChangeDesc: PropTypes.string,\n};\n\nexport default RuleDetails;\n"],"names":["RuleDetails","rule","header","isDetailsPage","resolutionRisk","riskOfChangeDesc","intl","useIntl","className","appName","module","fallback","customItnl","intlProps","isOpenShift","propTypes","PropTypes"],"sourceRoot":""}